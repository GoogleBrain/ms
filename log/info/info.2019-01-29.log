00:01:29.238 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:01:29.239 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 115 ms
00:01:29.240 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1350,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Jan 28 22:06:26 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 0:01:29','内网IP|0|0|内网IP|内网IP' )
00:01:30.133 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:01:30.134 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 61 ms
00:01:30.134 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:01:33.899 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:01:33.899 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:01:33.899 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:34.021 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:01:34.021 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
00:01:34.021 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:34.077 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:01:34.077 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:01:34.077 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:34.338 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:01:34.338 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 116 ms
00:01:34.338 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1351,'admin','获取用户信息',110,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:01:34','内网IP|0|0|内网IP|内网IP' )
00:01:40.411 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:01:40.411 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:01:40.411 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:40.523 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:01:40.523 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 55 ms
00:01:40.523 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:40.581 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:01:40.581 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 58 ms
00:01:40.581 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:40.824 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:01:40.824 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 116 ms
00:01:40.824 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1352,'admin','获取用户信息',55,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:01:40','内网IP|0|0|内网IP|内网IP' )
00:01:42.827 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:01:42.827 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
00:01:42.827 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:42.951 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:01:42.951 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
00:01:42.951 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:43.007 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:01:43.007 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:01:43.007 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:43.203 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:01:43.203 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 115 ms
00:01:43.203 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1353,'admin','获取用户信息',54,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:01:43','内网IP|0|0|内网IP|内网IP' )
00:01:50.975 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:01:50.975 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 55 ms
00:01:50.975 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:51.094 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:01:51.094 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 55 ms
00:01:51.094 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:51.152 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:01:51.152 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
00:01:51.152 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:51.406 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:01:51.406 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 121 ms
00:01:51.406 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1354,'admin','获取用户信息',55,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:01:51','内网IP|0|0|内网IP|内网IP' )
00:01:53.299 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:01:53.299 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 58 ms
00:01:53.299 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:01:53.419 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:01:53.419 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
00:01:53.419 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:53.477 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:01:53.477 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
00:01:53.477 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:01:53.673 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:01:53.673 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 115 ms
00:01:53.673 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1355,'admin','获取用户信息',55,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:01:53','内网IP|0|0|内网IP|内网IP' )
00:04:34.952 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:04:34.952 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:04:34.952 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:04:35.027 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:04:35.027 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 108 ms
00:04:35.027 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:35.084 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:04:35.084 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:04:35.084 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:35.359 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:04:35.359 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 115 ms
00:04:35.359 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1356,'admin','获取用户信息',94,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:04:35','内网IP|0|0|内网IP|内网IP' )
00:04:39.586 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:04:39.586 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 112 ms
00:04:39.586 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:04:39.644 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:04:39.644 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 55 ms
00:04:39.644 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:39.701 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:04:39.701 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
00:04:39.701 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:39.947 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:04:39.947 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 114 ms
00:04:39.947 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1357,'admin','获取用户信息',48,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:04:39','内网IP|0|0|内网IP|内网IP' )
00:04:43.973 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:04:43.973 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 114 ms
00:04:43.973 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1358,'admin','获取用户信息',49,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:04:43','内网IP|0|0|内网IP|内网IP' )
00:04:47.423 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:04:47.423 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:04:47.423 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:04:47.536 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:04:47.536 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
00:04:47.536 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:47.591 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:04:47.591 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 54 ms
00:04:47.591 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:47.788 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:04:47.788 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 113 ms
00:04:47.788 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1359,'admin','获取用户信息',47,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:04:47','内网IP|0|0|内网IP|内网IP' )
00:04:50.306 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
00:04:50.306 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:04:50.306 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
00:04:50.395 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
00:04:50.395 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 55 ms
00:04:50.395 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:50.451 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
00:04:50.451 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
00:04:50.451 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
00:04:50.710 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:04:50.710 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 117 ms
00:04:50.710 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1360,'admin','获取用户信息',49,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 0:04:50','内网IP|0|0|内网IP|内网IP' )
00:05:19.131 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
00:05:19.131 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Mon Jan 28 23:53:37 CST 2019]; root of context hierarchy
00:05:19.133 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
00:05:19.134 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-4ODT2311548690823222 paused.
00:05:19.139 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
00:05:19.141 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
00:05:19.142 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
00:05:19.143 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
00:05:19.143 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-4ODT2311548690823222 shutting down.
00:05:19.143 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-4ODT2311548690823222 paused.
00:05:19.144 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_DESKTOP-4ODT2311548690823222 shutdown complete.
00:05:19.194 febs [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:17:21.984 febs [main] INFO  cn.hu.Application - Starting Application on googlebrain-PC with PID 8488 (E:\gun\ms\target\classes started by googlebrain in E:\gun\ms)
10:17:21.993 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
10:17:22.256 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:17:22 CST 2019]; root of context hierarchy
10:17:24.377 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\gun\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
10:17:24.852 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:17:26.199 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
10:17:26.440 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
10:17:26.441 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:17:26.442 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:17:26.442 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
10:17:26.442 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
10:17:26.442 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
10:17:26.442 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
10:17:26.624 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$b31d92df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:26.737 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
10:17:26.758 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:26.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:27.075 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
10:17:27.078 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
10:17:27.124 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:27.147 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:27.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$86eb83af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:27.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e90ed9d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:27.376 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$1c87f763] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:27.384 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$1b6623ca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:28.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:28.073 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$62a09ea7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:28.084 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:28.102 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1be32b04] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:28.119 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$2bacf46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:28.125 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
10:17:28.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:28.315 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:28.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:17:29.626 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:17:29.646 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
10:18:32.291 febs [main] INFO  cn.hu.Application - Starting Application on googlebrain-PC with PID 3128 (E:\gun\ms\target\classes started by googlebrain in E:\gun\ms)
10:18:32.297 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
10:18:32.453 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:18:32 CST 2019]; root of context hierarchy
10:18:33.773 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\gun\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
10:18:34.057 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:18:34.871 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
10:18:35.049 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
10:18:35.051 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:18:35.052 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:18:35.052 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
10:18:35.052 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
10:18:35.052 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
10:18:35.052 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
10:18:35.161 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$c957ab62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:35.244 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
10:18:35.262 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:35.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:35.566 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
10:18:35.590 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
10:18:35.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:35.644 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:35.670 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$9d259c32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:35.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff48f257] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:35.816 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$32c20fe6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:35.823 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$31a03c4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:36.430 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:36.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$78dab72a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:36.460 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:36.475 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$321d4387] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:36.487 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$18f4e7c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:36.494 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
10:18:36.592 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:36.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:36.679 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:18:37.320 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:18:37.339 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
10:21:26.839 febs [main] INFO  cn.hu.Application - Starting Application on googlebrain-PC with PID 10828 (E:\gun\ms\target\classes started by googlebrain in E:\gun\ms)
10:21:26.845 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
10:21:27.013 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:21:27 CST 2019]; root of context hierarchy
10:21:28.706 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\gun\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
10:21:29.218 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:21:29.957 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
10:21:30.163 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
10:21:30.165 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:21:30.166 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:21:30.166 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
10:21:30.166 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
10:21:30.166 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
10:21:30.166 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
10:21:30.336 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$ac9f40ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:30.415 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
10:21:30.435 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:30.544 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:30.697 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
10:21:30.710 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
10:21:30.739 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:30.753 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:30.773 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$806d31be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:30.853 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e29087e3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:30.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$1609a572] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:30.964 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$14e7d1d9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:31.794 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:31.819 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$5c224cb6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:31.835 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:31.864 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$1564d913] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:31.880 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$fc3c7d55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:31.887 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
10:21:32.058 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:32.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:32.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:21:32.980 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:21:33.001 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
10:26:54.194 febs [main] INFO  cn.hu.Application - Starting Application on googlebrain-PC with PID 9516 (E:\gun\ms\target\classes started by googlebrain in E:\gun\ms)
10:26:54.204 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
10:26:54.362 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:26:54 CST 2019]; root of context hierarchy
10:26:55.739 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\gun\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
10:26:56.063 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:26:56.839 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
10:26:56.996 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
10:26:56.998 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:26:56.998 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:26:56.999 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
10:26:56.999 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
10:26:56.999 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
10:26:56.999 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
10:26:57.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$c957ab62] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:57.177 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
10:26:57.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:57.345 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:57.615 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
10:26:57.620 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
10:26:57.657 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:57.681 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:57.724 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$9d259c32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:57.816 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ff48f257] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:57.913 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$32c20fe6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:57.920 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$31a03c4d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:58.765 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:58.784 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$78dab72a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:58.800 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:58.816 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$321d4387] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:58.826 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$18f4e7c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:58.835 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
10:26:58.950 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:58.981 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:59.053 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:26:59.928 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:26:59.947 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
10:31:33.151 febs [main] INFO  cn.hu.Application - Starting Application on googlebrain-PC with PID 5788 (E:\gun\ms\target\classes started by googlebrain in E:\gun\ms)
10:31:33.157 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
10:31:33.294 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:31:33 CST 2019]; root of context hierarchy
10:31:34.786 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\gun\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
10:31:35.296 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:31:36.336 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
10:31:36.511 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
10:31:36.514 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:31:36.514 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:31:36.515 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
10:31:36.515 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
10:31:36.515 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
10:31:36.515 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
10:31:36.661 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$2289e90d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:36.763 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
10:31:36.784 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:36.950 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:37.194 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
10:31:37.198 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
10:31:37.231 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:37.253 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:37.296 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f657d9dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:37.427 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$587b3002] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:37.563 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$8bf44d91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:37.580 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$8ad279f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:38.589 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:38.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$d20cf4d5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:38.686 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:38.705 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8b4f8132] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:38.722 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$72272574] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:38.732 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
10:31:38.862 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:38.922 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:39.006 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:31:39.973 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:31:40.001 febs [main] INFO  o.s.b.a.l.ConditionEvaluationReportLoggingListener - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
10:35:02.989 febs [main] INFO  cn.hu.Application - Starting Application on googlebrain-PC with PID 5496 (E:\gun\ms\target\classes started by googlebrain in E:\gun\ms)
10:35:02.994 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
10:35:03.135 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:35:03 CST 2019]; root of context hierarchy
10:35:04.594 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\gun\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
10:35:04.938 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:35:05.686 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
10:35:05.829 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
10:35:05.832 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:35:05.832 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:35:05.833 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
10:35:05.833 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
10:35:05.833 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
10:35:05.833 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
10:35:05.943 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$401b24a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:06.027 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
10:35:06.044 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:06.169 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:06.347 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
10:35:06.351 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
10:35:06.367 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:06.382 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:06.415 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$13e91575] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:06.528 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$760c6b9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:06.607 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$a9858929] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:06.615 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$a863b590] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:07.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:07.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$ef9e306d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:07.203 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:07.220 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a8e0bcca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:07.233 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$8fb8610c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:07.247 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
10:35:07.353 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:07.370 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:07.440 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.095 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:35:08.095 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.166 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.629 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.646 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.652 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.658 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.680 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.684 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.701 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.752 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.833 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.837 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.852 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.856 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.908 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.964 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:08.978 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:09.021 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:09.057 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:09.075 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:09.098 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:09.130 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:35:09.737 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
10:35:09.757 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
10:35:09.780 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:35:09.780 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
10:35:09.800 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_181/bin/server;C:/Program Files/Java/jre1.8.0_181/bin;C:/Program Files/Java/jre1.8.0_181/lib/amd64;D:\gradle-5.1.1\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\MySQL\MySQL Server 5.7\bin;D:\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.7.0_80\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;C:\Program Files (x86)\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft Visual Studio 9.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\OpenSSH\bin;C:\Program Files\TortoiseSVN\bin;C:\eclipse;;.]
10:35:10.087 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:35:10.087 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6952 ms
10:35:10.304 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
10:35:10.305 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:35:10.305 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:35:10.305 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
10:35:10.306 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
10:35:10.306 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
10:35:10.306 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
10:35:10.306 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
10:35:10.308 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
10:35:10.342 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
10:35:10.932 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
10:35:10.972 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
10:35:10.972 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
10:35:10.979 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
10:35:10.983 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
10:35:10.985 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'googlebrain-PC1548729310935'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

10:35:10.985 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
10:35:10.985 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
10:35:10.989 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@55736cfe
10:35:11.120 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.job.dao.JobMapper.queryList
10:35:11.120 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 76 ms
10:35:11.120 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select job_id jobId,bean_name beanName,method_name methodName, params,cron_expression cronExpression,status,remark,create_time createTime from t_job order by job_id
10:35:14.043 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
10:35:14.285 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:35:14.778 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:35:03 CST 2019]; root of context hierarchy
10:35:14.897 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
10:35:14.902 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
10:35:14.904 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job]}" onto public java.lang.String cn.hu.job.controller.JobController.index()
10:35:14.905 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.addJob(cn.hu.job.domain.Job)
10:35:14.905 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.deleteJob(java.lang.String)
10:35:14.906 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/pause]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.pauseJob(java.lang.String)
10:35:14.906 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/resume]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.resumeJob(java.lang.String)
10:35:14.907 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.job.controller.JobController.jobList(cn.hu.common.domain.QueryRequest,cn.hu.job.domain.Job)
10:35:14.907 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/checkCron]}" onto public boolean cn.hu.job.controller.JobController.checkCron(java.lang.String)
10:35:14.907 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getJob]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.getJob(java.lang.Long)
10:35:14.908 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.updateJob(cn.hu.job.domain.Job)
10:35:14.908 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/run]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.runJob(java.lang.String)
10:35:14.909 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.jobExcel(cn.hu.job.domain.Job)
10:35:14.910 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.jobCsv(cn.hu.job.domain.Job)
10:35:14.911 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getSysCronClazz]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.getSysCronClazz(cn.hu.job.domain.Job)
10:35:14.913 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog]}" onto public java.lang.String cn.hu.job.controller.JobLogController.index()
10:35:14.913 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.job.controller.JobLogController.jobLogList(cn.hu.common.domain.QueryRequest,cn.hu.job.domain.JobLog)
10:35:14.914 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.deleteJobLog(java.lang.String)
10:35:14.915 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.jobLogExcel(cn.hu.job.domain.JobLog)
10:35:14.915 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.jobLogCsv(cn.hu.job.domain.JobLog)
10:35:14.918 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
10:35:14.919 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:35:14.919 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
10:35:14.919 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.919 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
10:35:14.920 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
10:35:14.920 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
10:35:14.920 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
10:35:14.921 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
10:35:14.921 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
10:35:14.921 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.922 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
10:35:14.922 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
10:35:14.922 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
10:35:14.923 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
10:35:14.923 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
10:35:14.923 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
10:35:14.924 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
10:35:14.925 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
10:35:14.925 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
10:35:14.925 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
10:35:14.926 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
10:35:14.926 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
10:35:14.926 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
10:35:14.926 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
10:35:14.928 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
10:35:14.928 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
10:35:14.928 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
10:35:14.929 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
10:35:14.929 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
10:35:14.929 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
10:35:14.930 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
10:35:14.930 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
10:35:14.930 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
10:35:14.931 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
10:35:14.932 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
10:35:14.933 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
10:35:14.933 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
10:35:14.933 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
10:35:14.934 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
10:35:14.934 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
10:35:14.934 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
10:35:14.934 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
10:35:14.936 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
10:35:14.937 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:35:14.937 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
10:35:14.937 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.938 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
10:35:14.938 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
10:35:14.938 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
10:35:14.938 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
10:35:14.939 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
10:35:14.939 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
10:35:14.939 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.939 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
10:35:14.940 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
10:35:14.940 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
10:35:14.940 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
10:35:14.940 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
10:35:14.940 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
10:35:14.942 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
10:35:14.942 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.Dept)
10:35:14.942 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
10:35:14.942 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
10:35:14.943 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.Dept)
10:35:14.943 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.Dept)
10:35:14.943 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.Dept)
10:35:14.944 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
10:35:14.944 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
10:35:14.944 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.Dept)
10:35:14.967 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
10:35:14.968 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:35:14.968 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
10:35:14.968 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.969 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
10:35:14.969 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
10:35:14.970 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
10:35:14.970 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
10:35:14.970 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
10:35:14.971 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
10:35:14.971 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.971 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
10:35:14.971 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
10:35:14.972 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
10:35:14.972 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
10:35:14.972 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
10:35:14.972 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
10:35:14.973 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
10:35:14.973 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
10:35:14.974 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
10:35:14.974 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
10:35:14.974 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
10:35:14.979 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
10:35:14.980 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
10:35:14.980 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
10:35:14.980 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
10:35:14.981 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
10:35:14.981 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
10:35:14.983 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
10:35:14.984 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
10:35:14.984 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
10:35:14.985 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
10:35:14.985 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
10:35:14.985 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
10:35:14.986 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
10:35:14.986 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
10:35:14.986 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
10:35:14.987 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
10:35:14.988 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
10:35:14.988 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
10:35:14.988 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
10:35:14.989 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
10:35:14.990 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
10:35:14.991 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:35:14.991 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
10:35:14.992 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.992 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
10:35:14.992 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
10:35:14.992 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
10:35:14.992 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
10:35:14.993 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
10:35:14.993 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
10:35:14.993 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.993 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
10:35:14.994 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
10:35:14.994 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
10:35:14.994 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
10:35:14.994 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
10:35:14.994 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
10:35:14.996 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
10:35:14.997 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:35:14.997 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
10:35:14.997 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.998 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
10:35:14.998 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
10:35:14.998 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
10:35:14.998 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
10:35:14.998 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
10:35:14.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
10:35:14.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:14.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
10:35:15.000 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
10:35:15.000 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
10:35:15.000 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
10:35:15.001 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
10:35:15.001 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
10:35:15.002 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
10:35:15.003 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:35:15.004 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
10:35:15.004 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:15.004 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
10:35:15.005 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
10:35:15.005 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
10:35:15.005 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
10:35:15.005 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
10:35:15.005 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
10:35:15.006 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:15.006 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
10:35:15.006 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
10:35:15.006 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
10:35:15.006 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
10:35:15.007 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
10:35:15.007 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
10:35:15.010 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
10:35:15.010 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
10:35:15.010 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
10:35:15.011 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
10:35:15.011 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
10:35:15.011 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
10:35:15.011 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
10:35:15.011 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
10:35:15.012 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
10:35:15.012 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
10:35:15.012 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
10:35:15.013 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
10:35:15.013 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
10:35:15.014 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
10:35:15.014 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
10:35:15.014 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
10:35:15.014 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
10:35:15.015 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
10:35:15.015 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
10:35:15.015 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
10:35:15.016 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
10:35:15.016 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
10:35:15.018 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
10:35:15.019 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
10:35:15.020 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:35:15.020 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
10:35:15.020 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:15.020 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
10:35:15.020 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
10:35:15.021 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
10:35:15.021 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
10:35:15.021 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
10:35:15.021 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
10:35:15.021 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:15.021 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
10:35:15.021 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
10:35:15.022 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
10:35:15.022 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
10:35:15.022 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
10:35:15.022 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
10:35:15.024 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index(org.springframework.ui.Model)
10:35:15.024 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:35:15.026 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUserProfile(cn.hu.system.domain.User)
10:35:15.026 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:15.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkUserName]}" onto public boolean cn.hu.system.controller.WithDrawController.checkUserName(java.lang.String,java.lang.String)
10:35:15.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUser(java.lang.Long)
10:35:15.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userExcel(cn.hu.system.domain.User)
10:35:15.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userCsv(cn.hu.system.domain.User)
10:35:15.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.regist(cn.hu.system.domain.User)
10:35:15.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateTheme(cn.hu.system.domain.User)
10:35:15.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:35:15.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteUsers(java.lang.String)
10:35:15.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkPassword]}" onto public boolean cn.hu.system.controller.WithDrawController.checkPassword(java.lang.String)
10:35:15.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updatePassword(java.lang.String)
10:35:15.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/profile]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.profileIndex(org.springframework.ui.Model)
10:35:15.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUserProfile(java.lang.Long)
10:35:15.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.changeAvatar(java.lang.String)
10:35:15.029 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
10:35:15.029 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
10:35:15.030 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
10:35:15.030 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
10:35:15.030 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
10:35:15.035 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
10:35:15.036 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
10:35:15.036 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
10:35:15.037 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
10:35:15.037 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
10:35:15.037 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
10:35:15.038 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
10:35:15.038 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
10:35:15.038 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
10:35:15.038 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
10:35:15.038 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
10:35:15.038 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
10:35:15.039 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
10:35:15.039 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
10:35:15.043 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:35:15.044 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:35:15.154 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:35:15.154 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:35:15.196 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
10:35:15.400 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
10:35:17.354 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
10:35:17.357 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
10:35:17.357 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
10:35:17.365 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
10:35:17.367 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
10:35:17.375 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
10:35:17.376 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
10:35:17.392 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
10:35:17.407 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
10:35:17.811 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
10:35:17.816 febs [main] INFO  cn.hu.Application - Started Application in 15.721 seconds (JVM running for 16.688)
10:35:17.827 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-01-29 10:35:17.827 》》》》》》
10:35:18.380 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
10:35:18.394 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
10:35:18.394 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "DESKTOP-4ODT2311548690823222"'s failed in-progress jobs.
10:35:18.462 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548729310935 started.
10:36:09.735 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
10:36:09.735 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
10:36:09.774 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 38 ms
10:36:09.805 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
10:36:18.659 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
10:36:18.659 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 20 ms
10:36:18.659 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
10:36:19.176 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
10:36:19.176 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
10:36:19.176 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-1-29 10:36:19' WHERE ( lower(username)= 'admin' )
10:36:19.653 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:36:19.654 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 69 ms
10:36:19.654 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1361,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Jan 28 23:39:23 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:36:19','内网IP|0|0|内网IP|内网IP' )
10:36:21.700 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:36:21.701 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 533 ms
10:36:21.701 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:36:35.617 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
10:36:35.617 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:36:35.617 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
10:36:35.648 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
10:36:35.649 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 29 ms
10:36:35.649 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
10:36:36.957 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:36:36.957 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
10:36:36.957 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:36:37.090 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:36:37.090 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:36:37.090 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:36:37.092 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:36:37.093 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:36:37.093 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:36:37.548 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithDept_COUNT
10:36:37.549 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
10:36:37.549 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 order by u.user_id
10:36:37.569 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithDept
10:36:37.569 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 19 ms
10:36:37.569 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 order by u.user_id
10:36:37.745 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:36:37.745 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 72 ms
10:36:37.745 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1362,'admin','获取用户信息',386,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:36:37','内网IP|0|0|内网IP|内网IP' )
10:36:41.824 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
10:36:41.824 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:36:41.824 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
10:36:47.910 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:36:47.910 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:36:47.910 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:36:48.014 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:36:48.014 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:36:48.014 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:36:48.015 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:36:48.015 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:36:48.016 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:36:48.304 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithDept_COUNT
10:36:48.304 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
10:36:48.304 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 order by u.user_id
10:36:48.309 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithDept
10:36:48.310 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:36:48.310 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 order by u.user_id
10:36:48.540 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:36:48.540 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 126 ms
10:36:48.540 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1363,'admin','获取用户信息',205,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:36:48','内网IP|0|0|内网IP|内网IP' )
10:38:32.079 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:38:32.079 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 80 ms
10:38:32.079 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1364,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Jan 28 23:39:23 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:38:32','内网IP|0|0|内网IP|内网IP' )
10:38:33.363 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:38:33.363 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 60 ms
10:38:33.363 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:38:37.353 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:38:37.353 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
10:38:37.353 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:38:37.463 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:38:37.463 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:38:37.463 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:38:37.465 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:38:37.465 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:38:37.465 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:38:37.960 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:38:37.960 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 72 ms
10:38:37.960 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1365,'admin','获取用户信息',165,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:38:37','内网IP|0|0|内网IP|内网IP' )
10:38:41.069 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:38:41.069 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:38:41.069 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:38:41.198 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:38:41.198 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:38:41.198 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:38:41.201 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:38:41.201 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:38:41.201 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:38:41.611 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:38:41.611 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 189 ms
10:38:41.611 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1366,'admin','获取用户信息',61,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:38:41','内网IP|0|0|内网IP|内网IP' )
10:38:43.723 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:38:43.724 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:38:43.724 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:38:43.852 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:38:43.852 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:38:43.852 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:38:43.854 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:38:43.854 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:38:43.854 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:38:44.173 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:38:44.173 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 91 ms
10:38:44.173 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1367,'admin','获取用户信息',57,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:38:44','内网IP|0|0|内网IP|内网IP' )
10:38:46.333 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:38:46.333 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
10:38:46.333 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1368,'admin','获取用户信息',56,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:38:46','内网IP|0|0|内网IP|内网IP' )
10:38:59.910 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:38:59.910 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 99 ms
10:38:59.910 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1369,'admin','获取部门信息',0,'cn.hu.system.controller.DeptController.index()','','127.0.0.1','2019-1-29 10:38:59','内网IP|0|0|内网IP|内网IP' )
10:39:00.420 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:39:00.420 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:39:00.420 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:39:00.716 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:39:00.717 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:39:00.717 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:39:01.332 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:39:01.332 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 88 ms
10:39:01.332 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1370,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 10:39:01','内网IP|0|0|内网IP|内网IP' )
10:39:02.401 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:39:02.402 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
10:39:02.402 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:39:03.159 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:39:03.159 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
10:39:03.159 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:39:04.168 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:39:04.168 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 88 ms
10:39:04.168 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1371,'admin','获取系统所有URL',693,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 10:39:04','内网IP|0|0|内网IP|内网IP' )
10:39:18.458 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:39:18.458 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:39:18.458 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '修改商户' and TYPE = 0 )
10:39:56.455 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.insert
10:39:56.455 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
10:39:56.455 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 143,120,'修改商户','','talent:update','','1',,'2019-1-29 10:39:56', )
10:39:56.680 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:39:56.680 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
10:39:56.680 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1372,'admin','新增菜单/按钮',192,'cn.hu.system.controller.MenuController.addMenu()','menu: "cn.hu.system.domain.Menu@51a7986d"','127.0.0.1','2019-1-29 10:39:56','内网IP|0|0|内网IP|内网IP' )
10:39:56.839 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:39:56.839 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
10:39:56.839 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:39:56.861 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:39:56.861 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
10:39:56.861 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:39:56.961 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:39:56.961 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
10:39:56.961 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:39:59.019 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:39:59.019 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 54 ms
10:39:59.020 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1373,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Jan 28 23:39:23 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:39:59','内网IP|0|0|内网IP|内网IP' )
10:40:00.039 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:40:00.039 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
10:40:00.039 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:40:10.186 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:40:10.186 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:40:10.186 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:40:10.324 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:40:10.324 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:40:10.324 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:40:10.326 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:40:10.326 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:40:10.326 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:40:10.614 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:10.614 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 41 ms
10:40:10.614 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1374,'admin','获取用户信息',58,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:40:10','内网IP|0|0|内网IP|内网IP' )
10:40:13.327 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:13.327 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 85 ms
10:40:13.327 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1375,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Jan 28 23:39:23 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:40:13','内网IP|0|0|内网IP|内网IP' )
10:40:13.601 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:40:13.601 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
10:40:13.601 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:40:17.555 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:17.555 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 37 ms
10:40:17.555 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1376,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-1-29 10:40:17','内网IP|0|0|内网IP|内网IP' )
10:40:18.129 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:18.130 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
10:40:18.130 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:40:18.444 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:40:18.444 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:40:18.444 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:40:18.447 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:40:18.447 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:40:18.447 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:40:21.747 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
10:40:21.747 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
10:40:21.747 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
10:40:34.244 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:34.244 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 144 ms
10:40:34.244 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1377,'admin','获取部门信息',0,'cn.hu.system.controller.DeptController.index()','','127.0.0.1','2019-1-29 10:40:34','内网IP|0|0|内网IP|内网IP' )
10:40:34.710 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:40:34.711 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:40:34.711 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:40:35.315 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:40:35.324 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:40:35.324 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:40:35.555 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:35.555 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 50 ms
10:40:35.555 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1378,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 10:40:35','内网IP|0|0|内网IP|内网IP' )
10:40:35.683 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:35.683 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 36 ms
10:40:35.683 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1379,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 10:40:35','内网IP|0|0|内网IP|内网IP' )
10:40:36.422 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:36.422 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
10:40:36.422 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:40:36.746 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:36.746 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 22 ms
10:40:36.746 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:40:37.200 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:37.200 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 101 ms
10:40:37.200 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1380,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 10:40:37','内网IP|0|0|内网IP|内网IP' )
10:40:37.248 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:37.248 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 90 ms
10:40:37.248 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1381,'admin','获取系统所有URL',150,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 10:40:37','内网IP|0|0|内网IP|内网IP' )
10:40:37.398 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:37.399 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
10:40:37.399 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:40:37.698 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:37.698 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
10:40:37.698 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:40:38.355 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:38.355 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 48 ms
10:40:38.356 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1382,'admin','获取系统所有URL',113,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 10:40:38','内网IP|0|0|内网IP|内网IP' )
10:40:39.490 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:39.490 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 27 ms
10:40:39.490 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:40:39.814 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:39.814 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 37 ms
10:40:39.814 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:40:40.204 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:40.204 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 81 ms
10:40:40.204 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1383,'admin','获取系统所有URL',109,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 10:40:40','内网IP|0|0|内网IP|内网IP' )
10:40:51.818 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.deleteByExample
10:40:51.818 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
10:40:51.818 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_menu WHERE ( MENU_ID in ( '143' ) )
10:40:51.853 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
10:40:51.853 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:40:51.853 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( MENU_ID in ( '143' ) )
10:40:51.904 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.changeToTop
10:40:51.904 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 50 ms
10:40:51.904 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> update t_menu set parent_id = 0 where menu_id in ( select a.menu_id from ( (select menu_id from t_menu where parent_id in ( '143' ) ) ) a )
10:40:52.029 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:52.029 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
10:40:52.029 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1384,'admin','删除菜单',157,'cn.hu.system.controller.MenuController.deleteMenus()','ids: "143"','127.0.0.1','2019-1-29 10:40:52','内网IP|0|0|内网IP|内网IP' )
10:40:52.174 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:52.174 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:40:52.174 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:40:52.292 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:40:52.292 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:40:52.292 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:40:53.889 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:40:53.889 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 98 ms
10:40:53.889 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1385,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Jan 28 23:39:23 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:40:53','内网IP|0|0|内网IP|内网IP' )
10:40:55.146 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:40:55.146 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
10:40:55.147 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:41:18.293 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:41:18.293 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:41:18.293 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:41:18.381 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:41:18.381 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:41:18.381 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:41:18.383 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:41:18.383 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:41:18.383 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:41:19.045 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:41:19.045 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 81 ms
10:41:19.045 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1386,'admin','获取用户信息',54,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:41:19','内网IP|0|0|内网IP|内网IP' )
10:41:21.166 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:41:21.171 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 126 ms
10:41:21.171 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1387,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Jan 28 23:39:23 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:41:21','内网IP|0|0|内网IP|内网IP' )
10:41:21.419 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:41:21.419 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
10:41:21.419 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:41:25.114 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:41:25.114 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:41:25.114 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:41:25.117 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:41:25.117 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:41:25.117 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:41:25.302 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:41:25.302 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:41:25.302 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:41:25.393 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:41:25.393 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
10:41:25.393 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1388,'admin','获取用户信息',56,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:41:25','内网IP|0|0|内网IP|内网IP' )
10:41:39.263 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:41:39.263 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 125 ms
10:41:39.263 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1389,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 10:41:39','内网IP|0|0|内网IP|内网IP' )
10:41:39.980 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:41:39.981 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:41:39.981 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:41:40.277 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:41:40.278 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
10:41:40.278 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:41:40.742 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:41:40.742 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 111 ms
10:41:40.742 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1390,'admin','获取系统所有URL',108,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 10:41:40','内网IP|0|0|内网IP|内网IP' )
10:42:21.175 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:42:21.175 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 43 ms
10:42:21.175 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1391,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-1-29 10:42:21','内网IP|0|0|内网IP|内网IP' )
10:42:21.714 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:42:21.714 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:42:21.714 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:42:22.008 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:42:22.008 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:22.008 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:42:22.010 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:42:22.010 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:22.010 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:42:25.587 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
10:42:25.587 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:25.587 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
10:42:29.903 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.updateByPrimaryKeySelective
10:42:29.904 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:42:29.904 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2019-1-29 10:42:29' WHERE ROLE_ID = 1
10:42:29.907 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
10:42:29.908 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:29.908 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( role_id= 1 )
10:42:30.030 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.030 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 121 ms
10:42:30.031 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,59 )
10:42:30.032 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.032 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.032 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
10:42:30.036 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.036 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:42:30.036 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
10:42:30.037 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.037 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.037 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,67 )
10:42:30.038 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.038 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.038 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
10:42:30.039 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.039 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.039 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
10:42:30.041 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.041 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:30.041 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
10:42:30.042 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.042 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.042 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
10:42:30.043 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.044 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.044 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
10:42:30.044 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.044 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.045 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
10:42:30.045 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.045 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.045 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
10:42:30.047 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.047 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.047 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
10:42:30.048 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.049 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.049 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
10:42:30.050 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.050 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.050 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,66 )
10:42:30.051 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.051 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.051 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
10:42:30.052 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.053 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.053 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
10:42:30.054 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.054 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.054 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,64 )
10:42:30.055 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.055 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.055 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
10:42:30.056 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.056 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.056 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
10:42:30.057 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.057 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.057 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,65 )
10:42:30.058 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.059 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.059 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
10:42:30.060 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.060 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.060 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
10:42:30.061 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.061 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.062 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
10:42:30.063 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.064 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.064 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
10:42:30.065 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.066 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.066 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
10:42:30.068 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.069 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:30.069 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,81 )
10:42:30.070 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.070 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.070 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
10:42:30.071 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.071 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.071 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
10:42:30.075 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.075 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:30.075 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
10:42:30.076 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.076 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.076 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
10:42:30.078 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.078 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:30.079 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,61 )
10:42:30.080 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.080 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.080 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,86 )
10:42:30.081 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.081 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.081 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
10:42:30.082 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.082 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.082 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
10:42:30.083 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.084 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.084 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
10:42:30.084 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.085 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.085 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,101 )
10:42:30.086 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.086 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.086 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,102 )
10:42:30.087 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.087 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.087 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,103 )
10:42:30.088 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.088 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.088 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,104 )
10:42:30.089 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.089 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.089 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,105 )
10:42:30.090 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.090 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.090 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,106 )
10:42:30.091 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.091 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.091 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,107 )
10:42:30.093 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.093 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.093 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,108 )
10:42:30.095 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.095 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:30.095 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,109 )
10:42:30.097 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.098 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.098 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,110 )
10:42:30.100 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.101 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:30.101 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
10:42:30.102 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.102 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.102 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
10:42:30.103 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.103 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.103 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
10:42:30.103 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.103 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.104 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,118 )
10:42:30.104 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.104 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.104 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
10:42:30.105 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.106 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.106 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
10:42:30.106 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.106 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.106 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
10:42:30.107 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.107 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.107 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,122 )
10:42:30.108 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.108 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.108 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
10:42:30.109 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.109 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.109 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
10:42:30.110 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.110 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.110 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
10:42:30.111 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.111 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.111 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
10:42:30.112 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.112 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.112 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
10:42:30.113 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.114 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.114 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,128 )
10:42:30.114 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.114 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.114 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,129 )
10:42:30.116 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.116 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.116 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,130 )
10:42:30.117 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.117 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.117 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,131 )
10:42:30.118 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.118 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.118 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,132 )
10:42:30.119 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.119 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.119 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,133 )
10:42:30.121 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.121 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.121 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,134 )
10:42:30.122 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.122 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.122 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,135 )
10:42:30.124 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.124 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.124 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,136 )
10:42:30.125 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.125 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.125 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,137 )
10:42:30.128 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.128 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:30.128 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,138 )
10:42:30.129 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.129 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:42:30.129 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,139 )
10:42:30.130 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.130 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.130 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,140 )
10:42:30.131 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.131 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.131 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,142 )
10:42:30.133 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.133 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.133 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,141 )
10:42:30.135 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
10:42:30.135 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:42:30.135 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,58 )
10:42:30.262 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:42:30.262 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 91 ms
10:42:30.262 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1392,'admin','修改角色',272,'cn.hu.system.controller.RoleController.updateRole()','role: "cn.hu.system.domain.Role@cafa5bc"  menuId: "[Ljava.lang.Long;@35e9e3b4"','127.0.0.1','2019-1-29 10:42:30','内网IP|0|0|内网IP|内网IP' )
10:42:30.463 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:42:30.464 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:42:30.464 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:42:30.478 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:42:30.479 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
10:42:30.479 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:43:17.039 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
10:43:17.039 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:43:17.039 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
10:43:17.491 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
10:43:17.491 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:43:17.491 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-1-29 10:43:17' WHERE ( lower(username)= 'admin' )
10:43:17.799 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:43:17.799 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 65 ms
10:43:17.799 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1393,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:36:19 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:43:17','内网IP|0|0|内网IP|内网IP' )
10:43:18.761 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:43:18.761 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:43:18.762 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:43:21.693 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
10:43:21.693 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:43:21.693 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
10:43:21.695 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
10:43:21.695 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:43:21.695 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
10:43:22.327 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:43:22.328 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:43:22.328 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:43:22.440 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:43:22.440 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:43:22.441 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:43:22.447 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:43:22.447 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
10:43:22.447 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:43:22.830 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:43:22.830 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
10:43:22.830 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1394,'admin','获取用户信息',148,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:43:22','内网IP|0|0|内网IP|内网IP' )
10:44:14.346 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:44:14.346 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 92 ms
10:44:14.346 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1395,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:36:19 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:44:14','内网IP|0|0|内网IP|内网IP' )
10:44:14.582 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:44:14.582 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
10:44:14.582 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:44:17.670 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:44:17.670 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:44:17.670 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:44:18.109 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:44:18.109 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 40 ms
10:44:18.109 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1396,'admin','获取用户信息',52,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:44:18','内网IP|0|0|内网IP|内网IP' )
10:44:18.147 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:44:18.148 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:44:18.148 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:44:18.151 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:44:18.151 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:44:18.151 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:45:19.437 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:45:19.438 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 61 ms
10:45:19.438 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1397,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:36:19 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:45:19','内网IP|0|0|内网IP|内网IP' )
10:45:20.748 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:45:20.748 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
10:45:20.748 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:45:24.010 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:45:24.011 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:45:24.011 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:45:24.110 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:45:24.110 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:45:24.110 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:45:24.116 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:45:24.116 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
10:45:24.116 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:45:24.447 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:45:24.447 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 82 ms
10:45:24.447 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1398,'admin','获取用户信息',50,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:45:24','内网IP|0|0|内网IP|内网IP' )
10:45:26.319 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:45:26.319 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 52 ms
10:45:26.319 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1399,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:36:19 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:45:26','内网IP|0|0|内网IP|内网IP' )
10:45:26.578 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:45:26.578 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
10:45:26.578 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:45:28.681 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:45:28.681 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 92 ms
10:45:28.681 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1400,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:36:19 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:45:28','内网IP|0|0|内网IP|内网IP' )
10:45:28.885 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:45:28.885 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
10:45:28.885 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:46:54.460 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:46:54.460 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 83 ms
10:46:54.460 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1401,'admin','获取菜单信息',1,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 10:46:54','内网IP|0|0|内网IP|内网IP' )
10:46:55.304 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:46:55.304 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:46:55.304 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:46:55.629 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:46:55.629 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 17 ms
10:46:55.629 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:46:56.113 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:46:56.113 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 43 ms
10:46:56.113 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1402,'admin','获取系统所有URL',201,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 10:46:56','内网IP|0|0|内网IP|内网IP' )
10:47:06.169 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByPrimaryKey
10:47:06.169 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
10:47:06.169 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE MENU_ID = 121
10:47:19.036 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.updateByPrimaryKeySelective
10:47:19.036 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:47:19.037 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_menu SET PARENT_ID = 120,MENU_NAME = '修改商户',URL = '',PERMS = 'talent:update',ICON = '',TYPE = '1',MODIFY_TIME = '2019-1-29 10:47:19' WHERE MENU_ID = 121
10:47:19.168 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:47:19.168 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 54 ms
10:47:19.168 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1403,'admin','修改菜单/按钮',79,'cn.hu.system.controller.MenuController.updateMenu()','menu: "cn.hu.system.domain.Menu@69e64688"','127.0.0.1','2019-1-29 10:47:19','内网IP|0|0|内网IP|内网IP' )
10:47:19.327 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:47:19.327 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
10:47:19.327 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:47:19.328 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:47:19.328 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:47:19.328 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
10:47:19.430 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:47:19.433 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
10:47:19.433 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:47:21.652 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:47:21.652 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 41 ms
10:47:21.652 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1404,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-1-29 10:47:21','内网IP|0|0|内网IP|内网IP' )
10:47:22.172 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
10:47:22.172 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
10:47:22.172 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
10:47:22.491 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:47:22.491 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:47:22.491 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:47:22.493 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:47:22.493 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
10:47:22.493 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:47:26.050 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:47:26.050 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:47:26.050 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:47:26.051 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:47:26.051 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:47:26.051 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:47:26.235 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:47:26.235 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:47:26.235 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:47:26.423 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:47:26.423 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 92 ms
10:47:26.423 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1405,'admin','获取用户信息',51,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:47:26','内网IP|0|0|内网IP|内网IP' )
10:47:34.547 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
10:47:34.547 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:47:34.547 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
10:47:35.041 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
10:47:35.041 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:47:35.041 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-1-29 10:47:35' WHERE ( lower(username)= 'admin' )
10:47:35.318 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:47:35.318 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 49 ms
10:47:35.318 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1406,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:47:35','内网IP|0|0|内网IP|内网IP' )
10:47:36.129 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:47:36.130 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:47:36.130 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:47:40.503 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
10:47:40.503 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:47:40.503 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
10:47:40.508 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
10:47:40.508 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:47:40.509 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
10:47:41.144 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:47:41.145 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:47:41.145 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:47:41.279 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:47:41.279 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:47:41.279 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:47:41.282 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:47:41.282 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:47:41.282 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:47:41.577 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:47:41.577 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 45 ms
10:47:41.577 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1407,'admin','获取用户信息',53,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:47:41','内网IP|0|0|内网IP|内网IP' )
10:48:16.038 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
10:48:16.038 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:35:03 CST 2019]; root of context hierarchy
10:48:16.042 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
10:48:16.043 febs [RMI TCP Connection(2)-192.168.10.182] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548729310935 paused.
10:48:16.067 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
10:48:16.075 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
10:48:16.076 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
10:48:16.077 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
10:48:16.077 febs [RMI TCP Connection(2)-192.168.10.182] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548729310935 shutting down.
10:48:16.077 febs [RMI TCP Connection(2)-192.168.10.182] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548729310935 paused.
10:48:16.084 febs [RMI TCP Connection(2)-192.168.10.182] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548729310935 shutdown complete.
10:48:16.152 febs [RMI TCP Connection(2)-192.168.10.182] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
10:48:26.691 febs [main] INFO  cn.hu.Application - Starting Application on googlebrain-PC with PID 11652 (E:\gun\ms\target\classes started by googlebrain in E:\gun\ms)
10:48:26.696 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
10:48:26.833 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:48:26 CST 2019]; root of context hierarchy
10:48:28.758 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\gun\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
10:48:29.171 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
10:48:30.126 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
10:48:30.287 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
10:48:30.289 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:48:30.289 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
10:48:30.290 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
10:48:30.290 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
10:48:30.290 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
10:48:30.290 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
10:48:30.401 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$4be148e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:30.501 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
10:48:30.517 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:30.653 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:30.877 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
10:48:30.881 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
10:48:30.929 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:30.950 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:30.980 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$1faf39b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.064 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$81d28fde] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$b54bad6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.148 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$b429d9d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.666 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$fb6454b1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.700 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.716 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$b4a6e10e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$9b7e8550] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.763 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
10:48:31.881 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.904 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:31.975 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:32.637 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
10:48:32.637 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:32.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.145 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.149 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.154 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.214 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.218 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.238 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.279 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.369 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.373 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.388 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.392 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.411 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.447 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.507 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.511 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.524 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.574 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.606 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.621 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.641 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:33.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
10:48:34.326 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
10:48:34.353 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
10:48:34.375 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
10:48:34.375 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
10:48:34.390 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_181/bin/server;C:/Program Files/Java/jre1.8.0_181/bin;C:/Program Files/Java/jre1.8.0_181/lib/amd64;D:\gradle-5.1.1\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\MySQL\MySQL Server 5.7\bin;D:\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.7.0_80\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;C:\Program Files (x86)\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft Visual Studio 9.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\OpenSSH\bin;C:\Program Files\TortoiseSVN\bin;C:\eclipse;;.]
10:48:34.600 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
10:48:34.602 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 7769 ms
10:48:34.866 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
10:48:34.867 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
10:48:34.868 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
10:48:34.868 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
10:48:34.868 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
10:48:34.869 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
10:48:34.869 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
10:48:34.909 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
10:48:34.913 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
10:48:34.956 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
10:48:35.528 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
10:48:35.554 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
10:48:35.554 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
10:48:35.561 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
10:48:35.565 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
10:48:35.567 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'googlebrain-PC1548730115531'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

10:48:35.567 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
10:48:35.567 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
10:48:35.570 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@184823ed
10:48:35.692 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.job.dao.JobMapper.queryList
10:48:35.696 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 82 ms
10:48:35.696 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select job_id jobId,bean_name beanName,method_name methodName, params,cron_expression cronExpression,status,remark,create_time createTime from t_job order by job_id
10:48:38.302 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
10:48:38.903 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:48:39.406 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:48:26 CST 2019]; root of context hierarchy
10:48:39.528 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
10:48:39.532 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
10:48:39.535 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job]}" onto public java.lang.String cn.hu.job.controller.JobController.index()
10:48:39.536 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.addJob(cn.hu.job.domain.Job)
10:48:39.536 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.deleteJob(java.lang.String)
10:48:39.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/pause]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.pauseJob(java.lang.String)
10:48:39.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/resume]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.resumeJob(java.lang.String)
10:48:39.539 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.job.controller.JobController.jobList(cn.hu.common.domain.QueryRequest,cn.hu.job.domain.Job)
10:48:39.540 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/checkCron]}" onto public boolean cn.hu.job.controller.JobController.checkCron(java.lang.String)
10:48:39.540 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getJob]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.getJob(java.lang.Long)
10:48:39.541 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.updateJob(cn.hu.job.domain.Job)
10:48:39.541 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/run]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.runJob(java.lang.String)
10:48:39.541 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.jobExcel(cn.hu.job.domain.Job)
10:48:39.542 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.jobCsv(cn.hu.job.domain.Job)
10:48:39.542 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getSysCronClazz]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.getSysCronClazz(cn.hu.job.domain.Job)
10:48:39.545 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog]}" onto public java.lang.String cn.hu.job.controller.JobLogController.index()
10:48:39.545 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.job.controller.JobLogController.jobLogList(cn.hu.common.domain.QueryRequest,cn.hu.job.domain.JobLog)
10:48:39.546 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.deleteJobLog(java.lang.String)
10:48:39.546 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.jobLogExcel(cn.hu.job.domain.JobLog)
10:48:39.546 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.jobLogCsv(cn.hu.job.domain.JobLog)
10:48:39.548 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
10:48:39.550 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:48:39.550 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
10:48:39.550 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
10:48:39.551 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
10:48:39.551 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
10:48:39.551 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
10:48:39.551 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
10:48:39.552 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.552 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
10:48:39.553 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
10:48:39.553 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
10:48:39.553 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
10:48:39.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
10:48:39.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
10:48:39.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.555 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
10:48:39.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
10:48:39.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
10:48:39.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
10:48:39.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
10:48:39.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
10:48:39.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
10:48:39.559 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
10:48:39.559 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
10:48:39.560 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
10:48:39.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
10:48:39.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
10:48:39.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
10:48:39.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
10:48:39.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
10:48:39.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
10:48:39.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
10:48:39.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
10:48:39.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
10:48:39.564 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
10:48:39.564 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
10:48:39.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
10:48:39.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
10:48:39.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
10:48:39.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
10:48:39.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
10:48:39.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
10:48:39.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
10:48:39.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:48:39.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
10:48:39.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
10:48:39.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
10:48:39.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
10:48:39.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
10:48:39.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
10:48:39.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.572 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
10:48:39.572 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
10:48:39.573 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
10:48:39.573 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
10:48:39.573 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
10:48:39.573 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
10:48:39.573 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.574 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
10:48:39.575 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
10:48:39.575 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
10:48:39.575 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
10:48:39.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.Dept)
10:48:39.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.Dept)
10:48:39.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.Dept)
10:48:39.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
10:48:39.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
10:48:39.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.Dept)
10:48:39.577 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.Dept)
10:48:39.578 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
10:48:39.579 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:48:39.579 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
10:48:39.579 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
10:48:39.579 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
10:48:39.579 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
10:48:39.580 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
10:48:39.580 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
10:48:39.580 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.580 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
10:48:39.581 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
10:48:39.581 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
10:48:39.581 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
10:48:39.581 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
10:48:39.581 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
10:48:39.581 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.582 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
10:48:39.582 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
10:48:39.583 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
10:48:39.583 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
10:48:39.583 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
10:48:39.583 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
10:48:39.589 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
10:48:39.589 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
10:48:39.589 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
10:48:39.590 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
10:48:39.590 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
10:48:39.590 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
10:48:39.594 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
10:48:39.594 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
10:48:39.594 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
10:48:39.594 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
10:48:39.595 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
10:48:39.595 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
10:48:39.595 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
10:48:39.595 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
10:48:39.595 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
10:48:39.596 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
10:48:39.596 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
10:48:39.596 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
10:48:39.596 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
10:48:39.597 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
10:48:39.598 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
10:48:39.599 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:48:39.599 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
10:48:39.599 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
10:48:39.600 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
10:48:39.600 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
10:48:39.601 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
10:48:39.601 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
10:48:39.601 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.602 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
10:48:39.602 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
10:48:39.602 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
10:48:39.602 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
10:48:39.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
10:48:39.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
10:48:39.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
10:48:39.606 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
10:48:39.606 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:48:39.607 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
10:48:39.607 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
10:48:39.607 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
10:48:39.607 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
10:48:39.607 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
10:48:39.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
10:48:39.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
10:48:39.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
10:48:39.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
10:48:39.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
10:48:39.609 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
10:48:39.609 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
10:48:39.609 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.609 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
10:48:39.611 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
10:48:39.611 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:48:39.612 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
10:48:39.612 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
10:48:39.612 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
10:48:39.612 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
10:48:39.612 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
10:48:39.613 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
10:48:39.613 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.613 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
10:48:39.613 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
10:48:39.613 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
10:48:39.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
10:48:39.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
10:48:39.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
10:48:39.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
10:48:39.616 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
10:48:39.617 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
10:48:39.618 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
10:48:39.619 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
10:48:39.621 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
10:48:39.621 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
10:48:39.621 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
10:48:39.623 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
10:48:39.624 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
10:48:39.625 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
10:48:39.625 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
10:48:39.626 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
10:48:39.626 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
10:48:39.628 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
10:48:39.630 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
10:48:39.630 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
10:48:39.631 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
10:48:39.632 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
10:48:39.632 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
10:48:39.632 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
10:48:39.633 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
10:48:39.633 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
10:48:39.633 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
10:48:39.636 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
10:48:39.636 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:48:39.636 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
10:48:39.636 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
10:48:39.636 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
10:48:39.636 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
10:48:39.637 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
10:48:39.637 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
10:48:39.637 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.637 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
10:48:39.637 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
10:48:39.637 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
10:48:39.638 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
10:48:39.638 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
10:48:39.638 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
10:48:39.638 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.638 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
10:48:39.640 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index(org.springframework.ui.Model)
10:48:39.640 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
10:48:39.640 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkUserName]}" onto public boolean cn.hu.system.controller.WithDrawController.checkUserName(java.lang.String,java.lang.String)
10:48:39.640 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUser(java.lang.Long)
10:48:39.640 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userExcel(cn.hu.system.domain.User)
10:48:39.640 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userCsv(cn.hu.system.domain.User)
10:48:39.640 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.regist(cn.hu.system.domain.User)
10:48:39.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateTheme(cn.hu.system.domain.User)
10:48:39.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteUsers(java.lang.String)
10:48:39.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkPassword]}" onto public boolean cn.hu.system.controller.WithDrawController.checkPassword(java.lang.String)
10:48:39.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updatePassword(java.lang.String)
10:48:39.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/profile]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.profileIndex(org.springframework.ui.Model)
10:48:39.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUserProfile(java.lang.Long)
10:48:39.642 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.changeAvatar(java.lang.String)
10:48:39.642 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addUser(cn.hu.system.domain.User,java.lang.Long[])
10:48:39.642 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUserProfile(cn.hu.system.domain.User)
10:48:39.650 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
10:48:39.650 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
10:48:39.659 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
10:48:39.660 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
10:48:39.660 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
10:48:39.660 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
10:48:39.660 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
10:48:39.660 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
10:48:39.663 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
10:48:39.665 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
10:48:39.665 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
10:48:39.665 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
10:48:39.666 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
10:48:39.667 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
10:48:39.667 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
10:48:39.674 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
10:48:39.679 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
10:48:39.679 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
10:48:39.680 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
10:48:39.683 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
10:48:39.693 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
10:48:39.781 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:48:39.782 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
10:48:39.823 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
10:48:40.012 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
10:48:42.501 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
10:48:42.504 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
10:48:42.504 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
10:48:42.514 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
10:48:42.516 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
10:48:42.523 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
10:48:42.524 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
10:48:42.540 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
10:48:42.555 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
10:48:42.586 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
10:48:42.592 febs [main] INFO  cn.hu.Application - Started Application in 16.766 seconds (JVM running for 17.998)
10:48:42.603 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-01-29 10:48:42.603 》》》》》》
10:48:43.526 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
10:48:43.540 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
10:48:43.540 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "googlebrain-PC1548729310935"'s failed in-progress jobs.
10:48:43.589 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548730115531 started.
10:48:46.724 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
10:48:46.725 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
10:48:46.823 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 98 ms
10:48:46.862 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
10:48:47.669 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:48:47.669 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 192 ms
10:48:47.669 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1408,'admin','访问系统',11,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"','127.0.0.1','2019-1-29 10:48:47','内网IP|0|0|内网IP|内网IP' )
10:48:48.504 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:48:48.505 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 20 ms
10:48:48.505 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:48:52.246 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:48:52.246 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:48:52.247 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:48:52.415 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:48:52.415 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:48:52.415 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:48:52.420 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:48:52.420 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:48:52.420 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:48:52.906 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:48:52.906 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 39 ms
10:48:52.906 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1409,'admin','获取用户信息',237,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:48:52','内网IP|0|0|内网IP|内网IP' )
10:48:55.052 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:48:55.052 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 35 ms
10:48:55.052 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1410,'admin','获取用户信息',57,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:48:55','内网IP|0|0|内网IP|内网IP' )
10:48:55.959 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:48:55.959 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 39 ms
10:48:55.959 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1411,'admin','获取用户信息',58,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:48:55','内网IP|0|0|内网IP|内网IP' )
10:48:56.918 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:48:56.918 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 321 ms
10:48:56.918 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1412,'admin','获取用户信息',58,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:48:56','内网IP|0|0|内网IP|内网IP' )
10:49:23.857 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:49:23.857 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 82 ms
10:49:23.857 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1413,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:49:23','内网IP|0|0|内网IP|内网IP' )
10:49:25.250 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:49:25.251 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 47 ms
10:49:25.251 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:49:28.802 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:49:28.802 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:49:28.802 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:49:28.882 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:49:28.883 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:49:28.883 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:49:28.884 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:49:28.884 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:49:28.884 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:49:29.213 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:49:29.213 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 78 ms
10:49:29.213 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1414,'admin','获取用户信息',54,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:49:29','内网IP|0|0|内网IP|内网IP' )
10:49:34.223 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
10:49:34.223 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:49:34.223 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
10:49:38.744 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
10:49:38.744 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:49:38.744 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
10:51:32.622 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:51:32.622 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 81 ms
10:51:32.622 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1415,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"','127.0.0.1','2019-1-29 10:51:32','内网IP|0|0|内网IP|内网IP' )
10:51:33.718 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:51:33.718 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
10:51:33.718 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:51:36.859 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:51:36.859 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
10:51:36.859 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:51:36.950 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:51:36.950 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:51:36.950 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:51:36.968 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:51:36.968 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
10:51:36.968 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:51:37.511 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:51:37.511 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 152 ms
10:51:37.511 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1416,'admin','获取用户信息',165,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:51:37','内网IP|0|0|内网IP|内网IP' )
10:52:37.450 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:52:37.450 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 131 ms
10:52:37.450 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1417,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:52:37','内网IP|0|0|内网IP|内网IP' )
10:52:37.679 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:52:37.679 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 34 ms
10:52:37.679 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:52:40.766 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:52:40.766 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:52:40.766 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:52:44.674 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:52:44.674 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:52:44.674 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:44.678 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:52:44.678 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:52:44.678 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:47.571 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:52:47.571 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:52:47.571 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:52:47.682 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:52:47.683 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:52:47.683 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:47.685 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:52:47.685 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:52:47.685 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:48.294 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:52:48.294 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 93 ms
10:52:48.294 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1418,'admin','获取用户信息',56,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:52:48','内网IP|0|0|内网IP|内网IP' )
10:52:48.332 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:52:48.332 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 70 ms
10:52:48.332 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1419,'admin','获取用户信息',53,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:52:48','内网IP|0|0|内网IP|内网IP' )
10:52:48.395 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:52:48.395 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:52:48.395 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:52:48.509 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:52:48.509 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:52:48.509 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:48.517 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:52:48.517 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
10:52:48.518 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:48.858 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:52:48.858 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:52:48.863 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:52:48.891 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:52:48.891 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 149 ms
10:52:48.891 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1420,'admin','获取用户信息',53,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:52:48','内网IP|0|0|内网IP|内网IP' )
10:52:48.951 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:52:48.951 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:52:48.951 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:48.953 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:52:48.953 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:52:48.953 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:49.308 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:52:49.309 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 88 ms
10:52:49.309 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1421,'admin','获取用户信息',54,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:52:49','内网IP|0|0|内网IP|内网IP' )
10:52:55.671 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:52:55.671 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
10:52:55.671 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:52:55.778 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:52:55.779 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:52:55.779 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:55.783 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:52:55.783 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
10:52:55.783 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:52:56.115 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:52:56.115 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 93 ms
10:52:56.116 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1422,'admin','获取用户信息',54,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:52:56','内网IP|0|0|内网IP|内网IP' )
10:53:43.119 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:53:43.120 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 108 ms
10:53:43.120 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1423,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"','127.0.0.1','2019-1-29 10:53:43','内网IP|0|0|内网IP|内网IP' )
10:53:44.113 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:53:44.113 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
10:53:44.114 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:53:48.069 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:53:48.069 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:53:48.069 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:53:48.131 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:53:48.131 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:53:48.131 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:53:48.132 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:53:48.133 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:53:48.133 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:53:48.508 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:53:48.508 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 73 ms
10:53:48.509 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1424,'admin','获取用户信息',57,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:53:48','内网IP|0|0|内网IP|内网IP' )
10:54:50.298 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:54:50.298 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 77 ms
10:54:50.298 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1425,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 10:54:50','内网IP|0|0|内网IP|内网IP' )
10:54:50.543 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
10:54:50.543 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
10:54:50.543 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
10:54:53.553 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
10:54:53.553 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:54:53.553 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
10:54:53.643 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
10:54:53.643 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:54:53.643 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:54:53.646 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
10:54:53.646 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
10:54:53.646 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
10:54:54.084 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
10:54:54.084 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 78 ms
10:54:54.084 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1426,'admin','获取用户信息',53,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 10:54:54','内网IP|0|0|内网IP|内网IP' )
10:55:47.817 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
10:55:47.817 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
10:55:47.817 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
10:57:22.522 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
10:57:22.522 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
10:57:22.522 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:06:43.462 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:06:43.462 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 112 ms
11:06:43.462 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1427,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:06:43','内网IP|0|0|内网IP|内网IP' )
11:06:44.519 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:06:44.519 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
11:06:44.519 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:06:47.511 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:06:47.512 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:06:47.512 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:06:47.619 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:06:47.619 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:06:47.619 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:06:47.621 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:06:47.621 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:06:47.621 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:06:48.079 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:06:48.079 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 88 ms
11:06:48.079 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1428,'admin','获取用户信息',149,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:06:48','内网IP|0|0|内网IP|内网IP' )
11:06:51.512 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:06:51.512 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:06:51.512 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 167
11:07:16.805 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:07:16.805 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 69 ms
11:07:16.805 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1429,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:07:16','内网IP|0|0|内网IP|内网IP' )
11:07:17.227 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:07:17.227 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
11:07:17.227 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:07:20.473 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:07:20.473 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:07:20.473 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:07:20.587 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:07:20.587 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:07:20.587 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:07:20.590 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:07:20.590 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:07:20.590 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:07:21.379 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:07:21.379 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 87 ms
11:07:21.379 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1430,'admin','获取用户信息',49,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:07:21','内网IP|0|0|内网IP|内网IP' )
11:14:35.610 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:14:35.610 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:14:35.610 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 167
11:17:02.659 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:17:02.659 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 78 ms
11:17:02.659 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1431,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:17:02','内网IP|0|0|内网IP|内网IP' )
11:17:03.687 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:17:03.687 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
11:17:03.687 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:17:07.797 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:17:07.798 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:17:07.798 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:17:07.904 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:17:07.904 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:17:07.904 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:17:07.908 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:17:07.908 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:17:07.908 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:17:08.360 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:17:08.360 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 41 ms
11:17:08.360 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1432,'admin','获取用户信息',172,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:17:08','内网IP|0|0|内网IP|内网IP' )
11:17:27.442 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:17:27.442 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 167 ms
11:17:27.442 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1433,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:17:27','内网IP|0|0|内网IP|内网IP' )
11:17:27.857 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:17:27.858 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
11:17:27.858 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:17:31.043 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:17:31.043 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:17:31.043 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:17:31.170 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:17:31.170 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:17:31.170 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:17:31.171 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:17:31.171 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:17:31.171 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:17:31.487 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:17:31.488 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 65 ms
11:17:31.488 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1434,'admin','获取用户信息',50,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:17:31','内网IP|0|0|内网IP|内网IP' )
11:17:36.301 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:17:36.301 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:17:36.301 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:17:54.568 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
11:17:54.568 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:17:54.568 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
11:17:54.577 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
11:17:54.577 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
11:17:54.577 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
11:17:54.794 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:17:54.794 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 44 ms
11:17:54.794 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1435,'admin','获取部门信息',4,'cn.hu.system.controller.GoodsCategoryController.index()','','127.0.0.1','2019-1-29 11:17:54','内网IP|0|0|内网IP|内网IP' )
11:17:55.396 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:17:55.396 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:17:55.396 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:17:55.637 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:17:55.637 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:17:55.637 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:22:10.715 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:22:10.715 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:22:10.715 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:22:10.720 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:22:10.720 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:22:10.720 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:22:10.721 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:22:10.722 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:22:10.722 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:22:11.251 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:22:11.251 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 82 ms
11:22:11.251 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1436,'admin','获取用户信息',157,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:22:11','内网IP|0|0|内网IP|内网IP' )
11:22:26.405 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:22:26.405 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 80 ms
11:22:26.405 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1437,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:22:26','内网IP|0|0|内网IP|内网IP' )
11:22:27.575 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:22:27.576 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
11:22:27.576 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:22:30.768 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:22:30.768 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:22:30.768 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:22:30.886 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:22:30.886 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:22:30.887 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:22:30.889 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:22:30.890 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:22:30.890 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:22:31.149 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:22:31.149 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 47 ms
11:22:31.149 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1438,'admin','获取用户信息',53,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:22:31','内网IP|0|0|内网IP|内网IP' )
11:22:39.805 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:22:39.805 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:22:39.805 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:23:12.292 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:23:12.293 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:23:12.293 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:24:21.939 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:24:21.939 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 84 ms
11:24:21.939 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1439,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:24:21','内网IP|0|0|内网IP|内网IP' )
11:24:22.154 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:24:22.154 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
11:24:22.154 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:24:25.129 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:24:25.129 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
11:24:25.129 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:24:25.233 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:24:25.234 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:24:25.234 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:24:25.236 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:24:25.236 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:24:25.236 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:24:25.835 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:24:25.835 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 79 ms
11:24:25.835 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1440,'admin','获取用户信息',155,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:24:25','内网IP|0|0|内网IP|内网IP' )
11:24:28.136 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:24:28.136 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:24:28.136 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:26:11.650 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:26:11.650 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:26:11.650 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:26:20.867 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:26:20.874 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:26:20.874 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:27:32.960 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:27:32.960 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 81 ms
11:27:32.961 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1441,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:27:32','内网IP|0|0|内网IP|内网IP' )
11:27:34.228 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:27:34.228 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
11:27:34.228 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:27:37.736 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:27:37.736 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:27:37.736 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:27:37.828 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:27:37.828 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:27:37.828 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:27:37.831 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:27:37.831 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:27:37.831 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:27:38.273 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:27:38.273 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 82 ms
11:27:38.273 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1442,'admin','获取用户信息',160,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:27:38','内网IP|0|0|内网IP|内网IP' )
11:28:44.533 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:28:44.533 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 83 ms
11:28:44.533 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1443,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:28:44','内网IP|0|0|内网IP|内网IP' )
11:28:44.961 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:28:44.962 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
11:28:44.962 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:28:47.981 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:28:47.981 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:28:47.981 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:28:48.024 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:28:48.024 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:28:48.024 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:28:48.025 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:28:48.025 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:28:48.025 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:28:48.363 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:28:48.363 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 73 ms
11:28:48.363 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1444,'admin','获取用户信息',53,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:28:48','内网IP|0|0|内网IP|内网IP' )
11:30:22.903 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:30:22.903 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 86 ms
11:30:22.903 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1445,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:30:22','内网IP|0|0|内网IP|内网IP' )
11:30:23.157 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:30:23.158 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:30:23.158 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:30:29.017 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:30:29.017 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:30:29.017 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:30:29.126 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:30:29.126 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:30:29.126 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:30:29.128 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:30:29.128 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:30:29.128 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:30:29.634 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:30:29.634 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 82 ms
11:30:29.634 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1446,'admin','获取用户信息',160,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:30:29','内网IP|0|0|内网IP|内网IP' )
11:30:32.987 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:30:32.987 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:30:32.988 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:30:33.103 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:30:33.103 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:30:33.103 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:30:33.105 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:30:33.105 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:30:33.105 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:30:33.483 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:30:33.483 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 136 ms
11:30:33.483 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1447,'admin','获取用户信息',55,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:30:33','内网IP|0|0|内网IP|内网IP' )
11:30:45.668 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:30:45.668 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:30:45.668 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:30:45.758 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:30:45.758 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:30:45.758 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:30:45.763 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:30:45.763 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
11:30:45.763 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:30:46.100 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:30:46.100 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 72 ms
11:30:46.100 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1448,'admin','获取用户信息',58,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:30:46','内网IP|0|0|内网IP|内网IP' )
11:32:54.054 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:32:54.055 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:32:54.055 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:32:59.460 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:32:59.460 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
11:32:59.460 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:32:59.467 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:32:59.467 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
11:32:59.467 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:32:59.471 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:32:59.471 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
11:32:59.471 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:32:59.961 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:32:59.961 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 39 ms
11:32:59.961 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1449,'admin','获取用户信息',163,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:32:59','内网IP|0|0|内网IP|内网IP' )
11:33:00.256 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:33:00.256 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 35 ms
11:33:00.256 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1450,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:33:00','内网IP|0|0|内网IP|内网IP' )
11:33:00.566 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:33:00.566 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
11:33:00.566 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:33:03.878 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:33:03.878 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
11:33:03.878 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:33:03.986 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:33:03.987 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:33:03.987 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:33:03.988 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:33:03.988 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:33:03.988 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:33:04.338 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:33:04.338 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 86 ms
11:33:04.338 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1451,'admin','获取用户信息',54,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:33:04','内网IP|0|0|内网IP|内网IP' )
11:33:09.838 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:33:09.838 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:33:09.838 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:38:55.097 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:38:55.097 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 82 ms
11:38:55.097 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1452,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:38:55','内网IP|0|0|内网IP|内网IP' )
11:38:56.045 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:38:56.045 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
11:38:56.045 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:38:59.789 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:38:59.789 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:38:59.789 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:38:59.915 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:38:59.915 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:38:59.915 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:38:59.918 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:38:59.918 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:38:59.918 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:39:00.424 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:39:00.425 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 147 ms
11:39:00.425 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1453,'admin','获取用户信息',161,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:39:00','内网IP|0|0|内网IP|内网IP' )
11:39:03.117 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:39:03.117 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:39:03.117 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:45:01.461 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:45:01.462 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:45:01.462 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:45:01.478 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:45:01.478 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:45:01.478 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:45:01.479 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:45:01.479 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:45:01.479 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:45:01.987 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:45:01.988 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 55 ms
11:45:01.988 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1454,'admin','获取用户信息',162,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:45:01','内网IP|0|0|内网IP|内网IP' )
11:45:03.687 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:45:03.687 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:45:03.687 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:45:03.806 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:45:03.806 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:45:03.806 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:45:03.809 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:45:03.809 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:45:03.810 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:45:04.079 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:45:04.080 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 40 ms
11:45:04.080 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1455,'admin','获取用户信息',53,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:45:04','内网IP|0|0|内网IP|内网IP' )
11:46:45.531 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:46:45.532 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 67 ms
11:46:45.532 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1456,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:43:17 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 11:46:45','内网IP|0|0|内网IP|内网IP' )
11:46:46.516 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
11:46:46.516 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
11:46:46.516 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
11:48:24.134 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
11:48:24.134 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
11:48:24.134 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
11:48:24.139 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
11:48:24.139 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
11:48:24.139 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
11:48:25.030 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:48:25.030 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:48:25.030 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:25.032 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:48:25.032 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:48:25.033 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:25.032 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:48:25.033 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
11:48:25.033 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:48:25.573 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:48:25.573 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 47 ms
11:48:25.573 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1457,'admin','获取用户信息',164,'cn.hu.system.controller.OrdersController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:48:25','内网IP|0|0|内网IP|内网IP' )
11:48:28.754 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:48:28.754 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:48:28.754 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:48:28.859 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:48:28.859 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:48:28.859 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:28.862 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:48:28.862 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:48:28.862 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:29.240 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:48:29.240 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 103 ms
11:48:29.240 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1458,'admin','获取用户信息',55,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:48:29','内网IP|0|0|内网IP|内网IP' )
11:48:37.208 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:48:37.208 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:48:37.208 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:48:37.316 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:48:37.317 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:48:37.317 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:37.319 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:48:37.319 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:48:37.319 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:37.627 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:48:37.627 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 40 ms
11:48:37.627 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1459,'admin','获取用户信息',56,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:48:37','内网IP|0|0|内网IP|内网IP' )
11:48:39.377 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:48:39.377 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:48:39.377 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:48:39.485 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:48:39.485 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:48:39.485 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:39.486 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:48:39.486 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:48:39.486 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:39.759 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:48:39.759 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 41 ms
11:48:39.759 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1460,'admin','获取用户信息',53,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:48:39','内网IP|0|0|内网IP|内网IP' )
11:48:46.956 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Validating all active sessions...
11:48:47.067 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Finished session validation.  No sessions were stopped.
11:48:48.325 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:48:48.325 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
11:48:48.325 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:48:52.718 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:48:52.718 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:48:52.718 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:48:52.818 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:48:52.818 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:48:52.818 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:52.820 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:48:52.829 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:48:52.829 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:48:53.148 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:48:53.148 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 90 ms
11:48:53.148 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1461,'admin','获取用户信息',56,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:48:53','内网IP|0|0|内网IP|内网IP' )
11:48:59.214 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:48:59.214 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:48:59.214 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
11:50:06.481 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:50:06.481 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:50:06.481 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:50:06.483 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:50:06.483 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
11:50:06.483 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:50:06.544 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:50:06.544 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
11:50:06.544 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:50:06.952 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:50:06.952 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 44 ms
11:50:06.952 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1462,'admin','获取用户信息',53,'cn.hu.system.controller.FrontUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:50:06','内网IP|0|0|内网IP|内网IP' )
11:50:07.079 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
11:50:07.079 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
11:50:07.079 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
11:50:07.188 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
11:50:07.188 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
11:50:07.188 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:50:07.188 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
11:50:07.189 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
11:50:07.189 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
11:50:07.423 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
11:50:07.423 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 48 ms
11:50:07.423 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1463,'admin','获取用户信息',56,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 11:50:07','内网IP|0|0|内网IP|内网IP' )
11:50:09.338 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
11:50:09.338 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
11:50:09.338 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
12:48:47.048 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Validating all active sessions...
12:48:47.194 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Finished session validation.  No sessions were stopped.
12:58:46.570 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
12:58:46.570 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
12:58:46.570 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
12:58:47.068 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
12:58:47.068 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
12:58:47.068 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-1-29 12:58:47' WHERE ( lower(username)= 'admin' )
12:58:47.506 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
12:58:47.507 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 159 ms
12:58:47.507 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1464,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:47:35 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 12:58:47','内网IP|0|0|内网IP|内网IP' )
12:58:48.298 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
12:58:48.298 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
12:58:48.298 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
12:58:52.364 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
12:58:52.364 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
12:58:52.365 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
12:58:52.370 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
12:58:52.371 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
12:58:52.371 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
12:58:52.634 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
12:58:52.634 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 58 ms
12:58:52.634 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1465,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 12:58:52','内网IP|0|0|内网IP|内网IP' )
12:58:53.390 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
12:58:53.390 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
12:58:53.390 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
12:58:54.101 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
12:58:54.101 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
12:58:54.101 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
12:58:54.241 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
12:58:54.242 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 87 ms
12:58:54.242 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1466,'admin','获取系统所有URL',201,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 12:58:54','内网IP|0|0|内网IP|内网IP' )
12:59:24.211 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
12:59:24.211 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
12:59:24.211 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '地址管理' and TYPE = 0 )
12:59:33.124 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.insert
12:59:33.125 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
12:59:33.125 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 144,0,'地址管理','','','zmdi zmdi-bus','0',,'2019-1-29 12:59:33', )
12:59:33.241 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
12:59:33.241 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 43 ms
12:59:33.241 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1467,'admin','新增菜单/按钮',78,'cn.hu.system.controller.MenuController.addMenu()','menu: "cn.hu.system.domain.Menu@6df21e30"','127.0.0.1','2019-1-29 12:59:33','内网IP|0|0|内网IP|内网IP' )
12:59:33.403 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
12:59:33.403 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
12:59:33.404 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
12:59:33.421 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
12:59:33.422 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
12:59:33.422 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
12:59:33.517 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
12:59:33.519 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
12:59:33.519 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:00:46.820 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:00:46.820 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:46.820 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '收件人地址管理' and TYPE = 0 )
13:00:47.055 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.insert
13:00:47.055 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:00:47.055 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 145,144,'收件人地址管理','receive','receive:list','zmdi zmdi-book','0',,'2019-1-29 13:00:47', )
13:00:47.130 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:00:47.130 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 28 ms
13:00:47.130 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1468,'admin','新增菜单/按钮',49,'cn.hu.system.controller.MenuController.addMenu()','menu: "cn.hu.system.domain.Menu@262e97e6"','127.0.0.1','2019-1-29 13:00:47','内网IP|0|0|内网IP|内网IP' )
13:00:47.290 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:00:47.290 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:00:47.290 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
13:00:47.298 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:00:47.299 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:00:47.299 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
13:00:47.405 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:00:47.405 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
13:00:47.405 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:00:50.063 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:00:50.063 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
13:00:50.063 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1469,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-1-29 13:00:50','内网IP|0|0|内网IP|内网IP' )
13:00:50.646 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:00:50.646 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
13:00:50.646 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:00:50.971 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:00:50.971 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:50.971 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:00:50.974 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:00:50.974 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:50.974 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:00:55.506 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
13:00:55.506 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:00:55.506 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
13:00:59.722 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.updateByPrimaryKeySelective
13:00:59.722 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:00:59.722 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2019-1-29 13:00:59' WHERE ROLE_ID = 1
13:00:59.728 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
13:00:59.728 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:00:59.729 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( role_id= 1 )
13:00:59.820 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.821 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 90 ms
13:00:59.821 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,59 )
13:00:59.822 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.822 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.822 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
13:00:59.826 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.826 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.827 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
13:00:59.827 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.828 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.828 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,67 )
13:00:59.831 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.831 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:00:59.831 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
13:00:59.832 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.832 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.832 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
13:00:59.833 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.833 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.833 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
13:00:59.834 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.834 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.834 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
13:00:59.835 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.835 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.835 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
13:00:59.836 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.836 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.836 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
13:00:59.836 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.836 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.836 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
13:00:59.837 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.837 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.837 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
13:00:59.838 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.838 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.838 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
13:00:59.839 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.839 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.839 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,66 )
13:00:59.840 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.840 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.840 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
13:00:59.841 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.841 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.841 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
13:00:59.842 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.842 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.842 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,64 )
13:00:59.842 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.843 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.843 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
13:00:59.843 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.843 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.843 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
13:00:59.844 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.844 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.844 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,65 )
13:00:59.845 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.846 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.846 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
13:00:59.847 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.847 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.847 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
13:00:59.848 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.848 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.848 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
13:00:59.849 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.849 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.849 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
13:00:59.850 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.850 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.850 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
13:00:59.851 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.851 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.851 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,81 )
13:00:59.852 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.852 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.852 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
13:00:59.853 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.853 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.853 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
13:00:59.854 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.854 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.854 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
13:00:59.855 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.855 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.855 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
13:00:59.856 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.856 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.856 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,61 )
13:00:59.857 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.857 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.857 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,86 )
13:00:59.858 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.858 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.858 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
13:00:59.859 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.859 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.859 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
13:00:59.860 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.860 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.860 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
13:00:59.860 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.860 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.860 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,101 )
13:00:59.861 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.861 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.861 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,102 )
13:00:59.862 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.862 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.863 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,103 )
13:00:59.863 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.863 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.863 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,104 )
13:00:59.864 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.864 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.864 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,105 )
13:00:59.865 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.865 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.865 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,106 )
13:00:59.865 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.865 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.865 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,107 )
13:00:59.866 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.866 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.866 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,108 )
13:00:59.867 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.867 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.867 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,109 )
13:00:59.868 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.868 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.868 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,110 )
13:00:59.869 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.869 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.869 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
13:00:59.870 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.870 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.870 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
13:00:59.871 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.871 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.871 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
13:00:59.871 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.871 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.871 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,118 )
13:00:59.872 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.872 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.872 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
13:00:59.873 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.873 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.873 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
13:00:59.873 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.873 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.873 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
13:00:59.874 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.874 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.874 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,122 )
13:00:59.874 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.874 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.874 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
13:00:59.875 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.875 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.876 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
13:00:59.876 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.876 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.876 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
13:00:59.877 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.877 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.877 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
13:00:59.878 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.878 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.895 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
13:00:59.900 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.900 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:00:59.900 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,128 )
13:00:59.901 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.901 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.901 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,129 )
13:00:59.903 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.903 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:00:59.903 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,130 )
13:00:59.910 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.910 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:00:59.910 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,131 )
13:00:59.914 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.914 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:00:59.914 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,132 )
13:00:59.915 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.915 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.915 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,133 )
13:00:59.916 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.916 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.916 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,134 )
13:00:59.929 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.929 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.929 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,135 )
13:00:59.930 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.930 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.930 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,136 )
13:00:59.931 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.931 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.931 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,137 )
13:00:59.932 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.932 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.932 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,138 )
13:00:59.933 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.933 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.933 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,139 )
13:00:59.937 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.938 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:00:59.938 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,140 )
13:00:59.939 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.939 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.939 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,142 )
13:00:59.940 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.940 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.940 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,141 )
13:00:59.941 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.942 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:00:59.942 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,58 )
13:00:59.943 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.943 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.943 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,145 )
13:00:59.944 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:00:59.944 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:00:59.944 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,144 )
13:01:00.033 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:01:00.033 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 57 ms
13:01:00.033 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1470,'admin','修改角色',256,'cn.hu.system.controller.RoleController.updateRole()','role: "cn.hu.system.domain.Role@51efed65"  menuId: "[Ljava.lang.Long;@4d77b8e5"','127.0.0.1','2019-1-29 13:01:00','内网IP|0|0|内网IP|内网IP' )
13:01:00.263 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:01:00.264 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:01:00.264 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:01:00.266 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:01:00.266 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:01:00.266 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:01:04.449 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:01:04.449 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 112 ms
13:01:04.449 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1471,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:47:35 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 13:01:04','内网IP|0|0|内网IP|内网IP' )
13:01:04.689 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
13:01:04.689 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
13:01:04.689 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
13:01:10.565 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
13:01:10.566 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 10:48:26 CST 2019]; root of context hierarchy
13:01:10.569 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
13:01:10.570 febs [RMI TCP Connection(2)-192.168.10.182] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548730115531 paused.
13:01:10.579 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
13:01:10.586 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
13:01:10.598 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
13:01:10.598 febs [RMI TCP Connection(2)-192.168.10.182] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
13:01:10.598 febs [RMI TCP Connection(2)-192.168.10.182] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548730115531 shutting down.
13:01:10.598 febs [RMI TCP Connection(2)-192.168.10.182] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548730115531 paused.
13:01:10.610 febs [RMI TCP Connection(2)-192.168.10.182] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548730115531 shutdown complete.
13:01:10.628 febs [RMI TCP Connection(2)-192.168.10.182] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
13:08:07.982 febs [main] INFO  cn.hu.Application - Starting Application on googlebrain-PC with PID 7644 (E:\gun\ms\target\classes started by googlebrain in E:\gun\ms)
13:08:07.987 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
13:08:08.155 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 13:08:08 CST 2019]; root of context hierarchy
13:08:09.479 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\gun\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
13:08:09.807 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
13:08:10.526 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
13:08:10.673 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
13:08:10.676 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
13:08:10.676 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
13:08:10.677 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
13:08:10.677 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
13:08:10.677 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
13:08:10.677 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
13:08:10.781 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$fb50dac5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:10.854 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
13:08:10.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:11.009 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:11.244 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
13:08:11.249 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
13:08:11.278 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:11.297 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:11.323 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$cf1ecb95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:11.403 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$314221ba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:11.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$64bb3f49] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:11.501 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$63996bb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:12.089 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:12.105 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$aad3e68d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:12.116 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:12.132 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$641672ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:12.144 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4aee172c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:12.159 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
13:08:12.256 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:12.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:12.350 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.014 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
13:08:13.014 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.092 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.546 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.565 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.569 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.575 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.596 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.600 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy98] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.615 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.660 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.741 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.745 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.766 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.783 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.815 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.860 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.864 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.878 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.919 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.954 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.973 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:13.994 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:14.026 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
13:08:14.773 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
13:08:14.797 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
13:08:14.818 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
13:08:14.819 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
13:08:14.835 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:/Program Files/Java/jre1.8.0_181/bin/server;C:/Program Files/Java/jre1.8.0_181/bin;C:/Program Files/Java/jre1.8.0_181/lib/amd64;D:\gradle-5.1.1\bin;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files\MySQL\MySQL Server 5.7\bin;D:\apache-maven-3.3.9\bin;C:\Program Files\Java\jdk1.7.0_80\bin;C:\Program Files (x86)\Common Files\NetSarang;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\Tools\Binn\;C:\Program Files\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft SQL Server\100\Tools\Binn\VSShell\Common7\IDE\;C:\Program Files (x86)\Microsoft SQL Server\100\DTS\Binn\;C:\Program Files (x86)\Microsoft Visual Studio 9.0\Common7\IDE\PrivateAssemblies\;C:\Program Files (x86)\OpenSSH\bin;C:\Program Files\TortoiseSVN\bin;C:\eclipse;;.]
13:08:15.024 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
13:08:15.024 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 6869 ms
13:08:15.234 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
13:08:15.235 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
13:08:15.235 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
13:08:15.235 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
13:08:15.236 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
13:08:15.236 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
13:08:15.236 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
13:08:15.237 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
13:08:15.240 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
13:08:15.271 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
13:08:15.792 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
13:08:15.813 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
13:08:15.813 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
13:08:15.819 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - Using db table-based data access locking (synchronization).
13:08:15.823 febs [main] INFO  o.s.s.quartz.LocalDataSourceJobStore - JobStoreCMT initialized.
13:08:15.825 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'MyScheduler' with instanceId 'googlebrain-PC1548738495795'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

13:08:15.825 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'MyScheduler' initialized from an externally provided properties instance.
13:08:15.825 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
13:08:15.828 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5e0c4f21
13:08:15.920 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.job.dao.JobMapper.queryList
13:08:15.923 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 62 ms
13:08:15.924 febs [main] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select job_id jobId,bean_name beanName,method_name methodName, params,cron_expression cronExpression,status,remark,create_time createTime from t_job order by job_id
13:08:18.270 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
13:08:18.843 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
13:08:19.393 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@793be5ca: startup date [Tue Jan 29 13:08:08 CST 2019]; root of context hierarchy
13:08:19.520 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
13:08:19.524 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
13:08:19.528 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job]}" onto public java.lang.String cn.hu.job.controller.JobController.index()
13:08:19.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.job.controller.JobController.jobList(cn.hu.common.domain.QueryRequest,cn.hu.job.domain.Job)
13:08:19.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/checkCron]}" onto public boolean cn.hu.job.controller.JobController.checkCron(java.lang.String)
13:08:19.531 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getJob]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.getJob(java.lang.Long)
13:08:19.531 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.updateJob(cn.hu.job.domain.Job)
13:08:19.531 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/run]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.runJob(java.lang.String)
13:08:19.532 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.jobExcel(cn.hu.job.domain.Job)
13:08:19.532 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.jobCsv(cn.hu.job.domain.Job)
13:08:19.533 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/getSysCronClazz]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.getSysCronClazz(cn.hu.job.domain.Job)
13:08:19.533 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.addJob(cn.hu.job.domain.Job)
13:08:19.534 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.deleteJob(java.lang.String)
13:08:19.535 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/pause]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.pauseJob(java.lang.String)
13:08:19.535 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/job/resume]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobController.resumeJob(java.lang.String)
13:08:19.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog]}" onto public java.lang.String cn.hu.job.controller.JobLogController.index()
13:08:19.539 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.job.controller.JobLogController.jobLogList(cn.hu.common.domain.QueryRequest,cn.hu.job.domain.JobLog)
13:08:19.539 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.deleteJobLog(java.lang.String)
13:08:19.540 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.jobLogExcel(cn.hu.job.domain.JobLog)
13:08:19.540 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/jobLog/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.job.controller.JobLogController.jobLogCsv(cn.hu.job.domain.JobLog)
13:08:19.542 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
13:08:19.543 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.543 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
13:08:19.544 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
13:08:19.544 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.544 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.545 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
13:08:19.545 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
13:08:19.545 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
13:08:19.546 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
13:08:19.546 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.546 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
13:08:19.547 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
13:08:19.547 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
13:08:19.547 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
13:08:19.548 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
13:08:19.548 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
13:08:19.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
13:08:19.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
13:08:19.550 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
13:08:19.550 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
13:08:19.550 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
13:08:19.551 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
13:08:19.551 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
13:08:19.552 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
13:08:19.553 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
13:08:19.553 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
13:08:19.553 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
13:08:19.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
13:08:19.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
13:08:19.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
13:08:19.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
13:08:19.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
13:08:19.555 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
13:08:19.555 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
13:08:19.556 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
13:08:19.556 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
13:08:19.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
13:08:19.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
13:08:19.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
13:08:19.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
13:08:19.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
13:08:19.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
13:08:19.560 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
13:08:19.560 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.560 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
13:08:19.560 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
13:08:19.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
13:08:19.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
13:08:19.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
13:08:19.561 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
13:08:19.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
13:08:19.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
13:08:19.563 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
13:08:19.563 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
13:08:19.563 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
13:08:19.563 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
13:08:19.564 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
13:08:19.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.Dept)
13:08:19.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
13:08:19.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
13:08:19.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.Dept)
13:08:19.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.Dept)
13:08:19.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.Dept)
13:08:19.567 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
13:08:19.567 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
13:08:19.568 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.Dept)
13:08:19.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
13:08:19.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
13:08:19.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
13:08:19.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
13:08:19.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
13:08:19.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
13:08:19.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
13:08:19.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
13:08:19.572 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
13:08:19.572 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
13:08:19.575 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
13:08:19.575 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
13:08:19.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
13:08:19.577 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
13:08:19.577 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
13:08:19.577 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
13:08:19.577 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
13:08:19.578 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
13:08:19.581 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
13:08:19.582 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
13:08:19.582 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
13:08:19.583 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
13:08:19.583 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
13:08:19.583 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
13:08:19.588 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
13:08:19.589 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
13:08:19.589 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
13:08:19.589 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
13:08:19.590 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
13:08:19.590 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
13:08:19.590 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
13:08:19.590 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
13:08:19.590 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
13:08:19.591 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
13:08:19.591 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
13:08:19.591 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
13:08:19.591 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
13:08:19.592 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
13:08:19.593 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
13:08:19.593 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.594 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
13:08:19.594 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
13:08:19.594 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.594 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.602 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
13:08:19.602 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
13:08:19.602 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
13:08:19.602 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
13:08:19.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
13:08:19.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
13:08:19.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
13:08:19.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
13:08:19.603 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
13:08:19.604 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
13:08:19.605 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
13:08:19.605 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.607 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
13:08:19.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
13:08:19.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
13:08:19.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
13:08:19.609 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
13:08:19.613 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
13:08:19.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
13:08:19.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
13:08:19.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
13:08:19.614 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
13:08:19.615 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
13:08:19.615 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
13:08:19.616 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.index(org.springframework.ui.Model)
13:08:19.617 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.ReceiveController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.617 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkUserName]}" onto public boolean cn.hu.system.controller.ReceiveController.checkUserName(java.lang.String,java.lang.String)
13:08:19.617 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUser(java.lang.Long)
13:08:19.617 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.618 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.618 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userExcel(cn.hu.system.domain.User)
13:08:19.618 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userCsv(cn.hu.system.domain.User)
13:08:19.618 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.regist(cn.hu.system.domain.User)
13:08:19.618 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateTheme(cn.hu.system.domain.User)
13:08:19.618 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.627 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.deleteUsers(java.lang.String)
13:08:19.628 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkPassword]}" onto public boolean cn.hu.system.controller.ReceiveController.checkPassword(java.lang.String)
13:08:19.628 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updatePassword(java.lang.String)
13:08:19.628 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/profile]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.profileIndex(org.springframework.ui.Model)
13:08:19.628 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUserProfile(java.lang.Long)
13:08:19.628 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.changeAvatar(java.lang.String)
13:08:19.630 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
13:08:19.630 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.630 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
13:08:19.631 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
13:08:19.631 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.631 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.631 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
13:08:19.631 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
13:08:19.632 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
13:08:19.632 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
13:08:19.632 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.632 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
13:08:19.632 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
13:08:19.637 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
13:08:19.638 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
13:08:19.638 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
13:08:19.638 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
13:08:19.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
13:08:19.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
13:08:19.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
13:08:19.642 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
13:08:19.642 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
13:08:19.688 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
13:08:19.689 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
13:08:19.689 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
13:08:19.689 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
13:08:19.689 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
13:08:19.689 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
13:08:19.690 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
13:08:19.691 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
13:08:19.691 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
13:08:19.691 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
13:08:19.691 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
13:08:19.691 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
13:08:19.695 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
13:08:19.695 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
13:08:19.695 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
13:08:19.696 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
13:08:19.696 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
13:08:19.696 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
13:08:19.697 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
13:08:19.698 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.698 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
13:08:19.698 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
13:08:19.698 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.698 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.699 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
13:08:19.699 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
13:08:19.699 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
13:08:19.699 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
13:08:19.699 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.699 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
13:08:19.699 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
13:08:19.700 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
13:08:19.704 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
13:08:19.704 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
13:08:19.704 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
13:08:19.709 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index(org.springframework.ui.Model)
13:08:19.709 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
13:08:19.710 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkUserName]}" onto public boolean cn.hu.system.controller.WithDrawController.checkUserName(java.lang.String,java.lang.String)
13:08:19.710 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUser(java.lang.Long)
13:08:19.710 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.710 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUserProfile(cn.hu.system.domain.User)
13:08:19.710 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userExcel(cn.hu.system.domain.User)
13:08:19.710 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userCsv(cn.hu.system.domain.User)
13:08:19.711 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.regist(cn.hu.system.domain.User)
13:08:19.711 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateTheme(cn.hu.system.domain.User)
13:08:19.711 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
13:08:19.711 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteUsers(java.lang.String)
13:08:19.711 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkPassword]}" onto public boolean cn.hu.system.controller.WithDrawController.checkPassword(java.lang.String)
13:08:19.711 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updatePassword(java.lang.String)
13:08:19.711 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/profile]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.profileIndex(org.springframework.ui.Model)
13:08:19.712 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUserProfile(java.lang.Long)
13:08:19.712 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.changeAvatar(java.lang.String)
13:08:19.713 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
13:08:19.713 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
13:08:19.714 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
13:08:19.714 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
13:08:19.714 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
13:08:19.714 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
13:08:19.714 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
13:08:19.714 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
13:08:19.715 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
13:08:19.715 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
13:08:19.715 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
13:08:19.716 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
13:08:19.716 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
13:08:19.718 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
13:08:19.718 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
13:08:19.718 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
13:08:19.718 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
13:08:19.719 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
13:08:19.719 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
13:08:19.723 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
13:08:19.724 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
13:08:19.808 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
13:08:19.808 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
13:08:19.848 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
13:08:20.044 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
13:08:21.778 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
13:08:21.781 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
13:08:21.781 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
13:08:21.790 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
13:08:21.792 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
13:08:21.799 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
13:08:21.799 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Will start Quartz Scheduler [MyScheduler] in 1 seconds
13:08:21.814 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
13:08:21.827 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
13:08:21.852 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
13:08:21.859 febs [main] INFO  cn.hu.Application - Started Application in 14.765 seconds (JVM running for 15.67)
13:08:21.872 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-01-29 13:08:21.872 》》》》》》
13:08:22.801 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now, after delay of 1 seconds
13:08:22.821 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: detected 1 failed or restarted instances.
13:08:22.821 febs [Quartz Scheduler [MyScheduler]] INFO  o.s.s.quartz.LocalDataSourceJobStore - ClusterManager: Scanning for instance "googlebrain-PC1548730115531"'s failed in-progress jobs.
13:08:23.069 febs [Quartz Scheduler [MyScheduler]] INFO  org.quartz.core.QuartzScheduler - Scheduler MyScheduler_$_googlebrain-PC1548738495795 started.
13:12:03.410 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
13:12:03.410 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
13:12:03.470 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 60 ms
13:12:03.508 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
13:12:04.370 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:12:04.370 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 256 ms
13:12:04.370 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1472,'admin','访问系统',12,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:47:35 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"','127.0.0.1','2019-1-29 13:12:04','内网IP|0|0|内网IP|内网IP' )
13:12:05.577 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
13:12:05.578 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 22 ms
13:12:05.578 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
13:14:16.450 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:14:16.450 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 90 ms
13:14:16.450 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1473,'admin','获取角色信息',22,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-1-29 13:14:16','内网IP|0|0|内网IP|内网IP' )
13:14:17.065 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:14:17.065 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
13:14:17.065 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:14:17.542 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:14:17.542 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:17.542 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:14:17.548 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:14:17.548 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:14:17.549 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:14:22.068 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
13:14:22.068 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
13:14:22.068 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
13:14:25.682 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.updateByPrimaryKeySelective
13:14:25.682 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:14:25.682 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2019-1-29 13:14:25' WHERE ROLE_ID = 1
13:14:25.688 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
13:14:25.688 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:14:25.688 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( role_id= 1 )
13:14:25.748 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.748 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 58 ms
13:14:25.748 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,59 )
13:14:25.750 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.750 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.750 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
13:14:25.751 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.751 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.752 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
13:14:25.757 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.757 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:14:25.757 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,67 )
13:14:25.759 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.759 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.759 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
13:14:25.760 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.760 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.760 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
13:14:25.761 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.761 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.761 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
13:14:25.764 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.764 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.764 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
13:14:25.768 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.768 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:14:25.768 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
13:14:25.771 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.771 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.771 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
13:14:25.772 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.772 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.772 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
13:14:25.774 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.774 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.774 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
13:14:25.775 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.775 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.775 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
13:14:25.777 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.777 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.777 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,66 )
13:14:25.779 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.779 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.779 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
13:14:25.786 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.786 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.786 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
13:14:25.788 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.789 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.789 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,64 )
13:14:25.791 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.792 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.792 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
13:14:25.801 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.801 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
13:14:25.801 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
13:14:25.804 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.804 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:14:25.804 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,65 )
13:14:25.806 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.806 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.806 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
13:14:25.809 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.809 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.809 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
13:14:25.810 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.811 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.811 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
13:14:25.812 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.812 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.812 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
13:14:25.814 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.815 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.815 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
13:14:25.817 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.817 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.817 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,81 )
13:14:25.818 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.818 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.818 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
13:14:25.819 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.819 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.819 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
13:14:25.820 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.821 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.821 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
13:14:25.822 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.822 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.822 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
13:14:25.823 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.823 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.824 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,61 )
13:14:25.825 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.825 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.825 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,86 )
13:14:25.827 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.827 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.828 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
13:14:25.829 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.829 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.829 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
13:14:25.831 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.831 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.831 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
13:14:25.832 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.832 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.833 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,101 )
13:14:25.834 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.834 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.834 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,102 )
13:14:25.836 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.836 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.836 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,103 )
13:14:25.848 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.848 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.848 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,104 )
13:14:25.849 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.849 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.849 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,105 )
13:14:25.851 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.851 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.851 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,106 )
13:14:25.853 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.853 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.853 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,107 )
13:14:25.855 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.855 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.855 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,108 )
13:14:25.857 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.857 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.857 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,109 )
13:14:25.862 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.862 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:14:25.862 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,110 )
13:14:25.864 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.864 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:14:25.864 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
13:14:25.867 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.867 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.867 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
13:14:25.869 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.869 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.869 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
13:14:25.871 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.872 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.872 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,118 )
13:14:25.873 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.873 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.874 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
13:14:25.875 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.875 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.875 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
13:14:25.877 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.877 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.877 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
13:14:25.878 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.879 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.879 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,122 )
13:14:25.880 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.880 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.881 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
13:14:25.885 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.885 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:14:25.885 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
13:14:25.888 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.888 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.888 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
13:14:25.890 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.891 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.891 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
13:14:25.893 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.893 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.893 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
13:14:25.898 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.898 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.898 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,128 )
13:14:25.903 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.904 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.904 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,129 )
13:14:25.905 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.906 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.906 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,130 )
13:14:25.907 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.907 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.907 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,131 )
13:14:25.913 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.913 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:14:25.913 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,132 )
13:14:25.914 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.914 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.914 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,133 )
13:14:25.918 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.919 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:14:25.919 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,134 )
13:14:25.921 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.921 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.921 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,135 )
13:14:25.922 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.922 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.922 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,136 )
13:14:25.924 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.924 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.925 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,137 )
13:14:25.926 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.926 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.926 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,138 )
13:14:25.928 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.928 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.928 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,139 )
13:14:25.930 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.931 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.931 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,140 )
13:14:25.934 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.934 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.934 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,142 )
13:14:25.936 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.936 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:14:25.936 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,141 )
13:14:25.938 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.938 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.938 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,58 )
13:14:25.940 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.940 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.940 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,145 )
13:14:25.942 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:14:25.942 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:25.942 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,144 )
13:14:26.047 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:14:26.047 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 26 ms
13:14:26.047 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1474,'admin','修改角色',337,'cn.hu.system.controller.RoleController.updateRole()','role: "cn.hu.system.domain.Role@a7c78c7"  menuId: "[Ljava.lang.Long;@e43ed50"','127.0.0.1','2019-1-29 13:14:26','内网IP|0|0|内网IP|内网IP' )
13:14:26.300 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:14:26.300 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:14:26.300 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:14:26.306 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:14:26.306 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:14:26.306 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:14:27.800 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:14:27.800 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 101 ms
13:14:27.800 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1475,'admin','获取菜单信息',1,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 13:14:27','内网IP|0|0|内网IP|内网IP' )
13:14:28.605 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:14:28.605 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
13:14:28.605 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
13:14:28.907 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:14:28.907 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
13:14:28.907 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:14:29.575 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:14:29.575 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 186 ms
13:14:29.575 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1476,'admin','获取系统所有URL',248,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 13:14:29','内网IP|0|0|内网IP|内网IP' )
13:16:28.613 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:16:28.613 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 45 ms
13:16:28.613 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1477,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 10:47:35 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 13:16:28','内网IP|0|0|内网IP|内网IP' )
13:16:29.759 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
13:16:29.759 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 21 ms
13:16:29.759 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
13:16:41.260 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
13:16:41.261 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
13:16:41.261 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
13:16:41.739 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
13:16:41.739 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:16:41.739 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-1-29 13:16:41' WHERE ( lower(username)= 'admin' )
13:16:42.082 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:16:42.082 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 70 ms
13:16:42.083 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1478,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 12:58:47 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 13:16:42','内网IP|0|0|内网IP|内网IP' )
13:16:42.395 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
13:16:42.395 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
13:16:42.395 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
13:16:44.625 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
13:16:44.625 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:16:44.626 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
13:16:44.636 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
13:16:44.636 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
13:16:44.636 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
13:16:45.416 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
13:16:45.416 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:16:45.416 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
13:16:45.463 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:16:45.463 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:16:45.463 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:16:45.465 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:16:45.465 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:16:45.465 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:16:45.882 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:16:45.882 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
13:16:45.882 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1479,'admin','获取用户信息',168,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 13:16:45','内网IP|0|0|内网IP|内网IP' )
13:19:02.960 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:19:02.960 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 78 ms
13:19:02.960 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1480,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 12:58:47 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 13:19:02','内网IP|0|0|内网IP|内网IP' )
13:19:03.223 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
13:19:03.224 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 15 ms
13:19:03.224 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
13:19:06.511 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
13:19:06.511 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:19:06.511 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
13:19:06.526 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:19:06.526 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:19:06.526 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:19:06.528 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:19:06.528 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:19:06.528 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:19:06.963 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:19:06.963 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 76 ms
13:19:06.963 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1481,'admin','获取用户信息',142,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 13:19:06','内网IP|0|0|内网IP|内网IP' )
13:19:14.811 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:19:14.811 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 78 ms
13:19:14.811 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1482,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 13:19:14','内网IP|0|0|内网IP|内网IP' )
13:19:15.576 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:19:15.576 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:19:15.576 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
13:19:15.874 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:19:15.874 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:19:15.874 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:19:16.317 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:19:16.317 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 83 ms
13:19:16.317 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1483,'admin','获取系统所有URL',97,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 13:19:16','内网IP|0|0|内网IP|内网IP' )
13:19:33.456 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:19:33.457 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:19:33.457 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '查看详情' and TYPE = 0 )
13:19:50.999 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.insert
13:19:51.000 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
13:19:51.000 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 146,145,'查看详情','','receive:update','','1',,'2019-1-29 13:19:50', )
13:19:51.132 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:19:51.132 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 39 ms
13:19:51.132 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1484,'admin','新增菜单/按钮',106,'cn.hu.system.controller.MenuController.addMenu()','menu: "cn.hu.system.domain.Menu@39e8ee9"','127.0.0.1','2019-1-29 13:19:51','内网IP|0|0|内网IP|内网IP' )
13:19:51.281 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:19:51.281 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:19:51.281 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
13:19:51.321 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:19:51.323 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
13:19:51.323 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
13:19:51.431 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:19:51.432 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
13:19:51.432 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:19:52.390 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:19:52.391 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 34 ms
13:19:52.391 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1485,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-1-29 13:19:52','内网IP|0|0|内网IP|内网IP' )
13:19:52.986 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:19:52.986 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 28 ms
13:19:52.986 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:19:53.276 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:19:53.276 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:19:53.276 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:19:53.279 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:19:53.279 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:19:53.279 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:19:56.266 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
13:19:56.266 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:19:56.266 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
13:20:00.363 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.updateByPrimaryKeySelective
13:20:00.364 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.364 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2019-1-29 13:20:00' WHERE ROLE_ID = 1
13:20:00.366 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
13:20:00.366 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:20:00.366 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( role_id= 1 )
13:20:00.472 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.472 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 106 ms
13:20:00.472 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,59 )
13:20:00.473 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.473 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.473 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
13:20:00.476 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.476 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:20:00.476 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
13:20:00.478 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.479 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:20:00.479 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,67 )
13:20:00.480 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.480 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.480 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
13:20:00.481 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.481 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.481 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
13:20:00.483 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.483 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:20:00.483 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
13:20:00.484 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.484 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.484 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
13:20:00.485 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.485 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.485 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
13:20:00.487 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.487 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.487 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
13:20:00.488 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.488 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.488 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
13:20:00.489 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.489 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.489 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
13:20:00.490 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.490 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.490 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
13:20:00.490 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.490 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.490 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,66 )
13:20:00.491 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.491 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.491 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
13:20:00.493 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.493 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.493 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
13:20:00.495 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.495 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:20:00.495 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,64 )
13:20:00.495 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.495 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.495 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
13:20:00.496 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.496 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.496 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
13:20:00.497 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.497 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.497 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,65 )
13:20:00.497 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.497 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.497 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
13:20:00.505 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.506 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.506 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
13:20:00.507 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.507 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.507 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
13:20:00.508 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.508 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.508 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
13:20:00.509 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.509 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.509 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
13:20:00.510 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.510 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.510 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,81 )
13:20:00.511 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.511 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.511 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
13:20:00.512 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.512 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.512 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
13:20:00.513 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.513 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.513 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
13:20:00.513 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.513 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.513 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
13:20:00.514 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.514 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.514 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,61 )
13:20:00.515 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.515 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.515 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,86 )
13:20:00.515 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.515 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.515 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
13:20:00.516 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.516 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.516 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
13:20:00.517 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.517 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.517 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
13:20:00.517 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.517 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.518 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,101 )
13:20:00.518 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.518 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.518 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,102 )
13:20:00.519 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.519 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.519 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,103 )
13:20:00.520 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.520 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.520 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,104 )
13:20:00.521 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.521 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.521 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,105 )
13:20:00.524 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.524 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:20:00.524 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,106 )
13:20:00.525 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.525 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.525 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,107 )
13:20:00.526 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.526 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.526 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,108 )
13:20:00.527 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.527 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.527 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,109 )
13:20:00.528 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.528 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.528 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,110 )
13:20:00.528 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.528 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.528 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
13:20:00.529 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.529 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.529 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
13:20:00.530 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.530 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.530 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
13:20:00.531 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.531 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.531 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,118 )
13:20:00.531 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.531 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.532 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
13:20:00.533 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.533 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.533 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
13:20:00.534 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.534 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.534 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
13:20:00.535 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.535 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.535 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,122 )
13:20:00.536 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.536 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.536 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
13:20:00.537 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.537 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.537 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
13:20:00.538 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.538 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.538 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
13:20:00.538 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.538 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.538 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
13:20:00.539 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.539 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.539 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
13:20:00.540 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.540 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.540 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,128 )
13:20:00.540 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.540 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.540 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,129 )
13:20:00.541 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.541 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.541 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,130 )
13:20:00.542 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.542 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.542 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,131 )
13:20:00.543 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.543 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.543 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,132 )
13:20:00.544 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.544 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.544 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,133 )
13:20:00.545 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.545 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.545 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,134 )
13:20:00.546 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.546 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.546 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,135 )
13:20:00.546 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.547 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.547 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,136 )
13:20:00.547 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.547 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.547 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,137 )
13:20:00.548 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.548 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.548 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,138 )
13:20:00.549 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.549 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.549 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,139 )
13:20:00.550 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.550 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.550 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,140 )
13:20:00.551 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.551 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.551 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,142 )
13:20:00.552 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.552 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.552 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,141 )
13:20:00.553 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.553 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.553 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,58 )
13:20:00.554 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.554 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.554 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,145 )
13:20:00.554 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.555 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.555 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,144 )
13:20:00.555 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
13:20:00.555 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:00.555 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,146 )
13:20:00.628 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:00.628 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 37 ms
13:20:00.628 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1486,'admin','修改角色',229,'cn.hu.system.controller.RoleController.updateRole()','role: "cn.hu.system.domain.Role@6cf32294"  menuId: "[Ljava.lang.Long;@2a8a6ed7"','127.0.0.1','2019-1-29 13:20:00','内网IP|0|0|内网IP|内网IP' )
13:20:00.888 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:20:00.888 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.888 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:00.890 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:20:00.890 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:00.890 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:03.881 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:03.881 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 83 ms
13:20:03.881 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1487,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 12:58:47 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 13:20:03','内网IP|0|0|内网IP|内网IP' )
13:20:04.192 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
13:20:04.193 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:20:04.193 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
13:20:07.517 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
13:20:07.518 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:20:07.518 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
13:20:07.645 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:20:07.646 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
13:20:07.646 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:07.647 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:20:07.647 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:07.647 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:07.984 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:07.984 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 79 ms
13:20:07.984 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1488,'admin','获取用户信息',49,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 13:20:07','内网IP|0|0|内网IP|内网IP' )
13:20:24.122 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
13:20:24.122 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:20:24.122 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
13:20:24.615 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
13:20:24.615 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:20:24.615 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-1-29 13:20:24' WHERE ( lower(username)= 'admin' )
13:20:24.929 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:24.929 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 55 ms
13:20:24.929 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1489,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 13:16:41 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 13:20:24','内网IP|0|0|内网IP|内网IP' )
13:20:25.175 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
13:20:25.175 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
13:20:25.175 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
13:20:27.497 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
13:20:27.497 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:20:27.497 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
13:20:27.502 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
13:20:27.503 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:20:27.503 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
13:20:28.287 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
13:20:28.287 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
13:20:28.287 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
13:20:28.413 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:20:28.413 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:20:28.413 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:28.415 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:20:28.415 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:20:28.415 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:28.739 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:28.739 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 78 ms
13:20:28.739 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1490,'admin','获取用户信息',46,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 13:20:28','内网IP|0|0|内网IP|内网IP' )
13:20:37.930 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
13:20:37.930 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:37.930 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
13:20:38.052 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:20:38.053 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:38.053 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:38.054 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:20:38.054 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:20:38.054 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:38.313 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:38.313 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 36 ms
13:20:38.313 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1491,'admin','获取用户信息',48,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 13:20:38','内网IP|0|0|内网IP|内网IP' )
13:20:41.158 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:41.158 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 83 ms
13:20:41.158 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1492,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-1-29 13:20:41','内网IP|0|0|内网IP|内网IP' )
13:20:41.950 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:20:41.951 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
13:20:41.951 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
13:20:42.270 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
13:20:42.270 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
13:20:42.270 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
13:20:42.652 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:42.652 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 69 ms
13:20:42.652 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1493,'admin','获取系统所有URL',93,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-1-29 13:20:42','内网IP|0|0|内网IP|内网IP' )
13:20:51.695 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
13:20:51.696 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:20:51.696 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
13:20:51.794 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:20:51.794 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:20:51.794 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:51.797 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:20:51.797 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
13:20:51.797 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:20:52.137 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:20:52.137 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 71 ms
13:20:52.137 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1494,'admin','获取用户信息',49,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 13:20:52','内网IP|0|0|内网IP|内网IP' )
13:21:02.160 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:21:02.160 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 98 ms
13:21:02.160 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1495,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 13:16:41 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 13:21:02','内网IP|0|0|内网IP|内网IP' )
13:21:02.403 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
13:21:02.403 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
13:21:02.403 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
13:21:05.928 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
13:21:05.928 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
13:21:05.928 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
13:21:06.054 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
13:21:06.054 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:21:06.054 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:21:06.055 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
13:21:06.055 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:21:06.055 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
13:21:06.376 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
13:21:06.376 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 73 ms
13:21:06.376 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1496,'admin','获取用户信息',50,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 13:21:06','内网IP|0|0|内网IP|内网IP' )
13:21:11.903 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
13:21:11.903 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
13:21:11.903 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
13:21:16.824 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
13:21:16.824 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
13:21:16.824 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
14:00:32.558 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
14:00:32.558 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
14:00:32.558 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
14:00:33.294 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
14:00:33.294 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
14:00:33.294 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-1-29 14:00:33' WHERE ( lower(username)= 'admin' )
14:00:33.575 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
14:00:33.576 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 59 ms
14:00:33.576 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1497,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User{userId=4, username='admin', password='13bfb9844ba36ac930ba142d8c3db629', deptId=5, deptName='null', email='googlebrain@163.com', mobile='17600313199', status='1', crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Tue Jan 29 13:20:24 CST 2019, ssex='0', theme='green', avatar='20180414165855.jpg', description='天下为公', roleName='null'}"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-1-29 14:00:33','内网IP|0|0|内网IP|内网IP' )
14:00:34.414 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
14:00:34.414 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
14:00:34.414 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
14:00:36.763 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
14:00:36.763 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
14:00:36.763 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
14:00:36.770 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
14:00:36.770 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
14:00:36.770 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
14:00:37.528 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
14:00:37.529 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
14:00:37.529 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
14:00:37.624 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
14:00:37.624 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
14:00:37.624 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
14:00:37.625 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
14:00:37.625 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
14:00:37.625 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
14:00:38.096 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
14:00:38.097 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 110 ms
14:00:38.097 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 1498,'admin','获取用户信息',141,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User{userId=null, username='', password='null', deptId=null, deptName='null', email='null', mobile='null', status='', crateTime=null, modifyTime=null, lastLoginTime=null, ssex='null', theme='null', avatar='null', description='null', roleName='null'}"','127.0.0.1','2019-1-29 14:00:38','内网IP|0|0|内网IP|内网IP' )
14:00:40.378 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
14:00:40.378 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
14:00:40.378 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
