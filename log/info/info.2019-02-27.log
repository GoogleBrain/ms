19:43:29.016 febs [main] INFO  cn.hu.Application - Starting Application on XD5543A14LPMZRB with PID 5636 (C:\Users\Administrator\git\ms\target\classes started by Administrator in C:\Users\Administrator\git\ms)
19:43:29.023 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
19:43:29.171 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@740773a3: startup date [Wed Feb 27 19:43:29 CST 2019]; root of context hierarchy
19:43:30.924 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [C:\Users\Administrator\git\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
19:43:31.296 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
19:43:32.047 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
19:43:32.269 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
19:43:32.273 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
19:43:32.273 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
19:43:32.273 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
19:43:32.274 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
19:43:32.274 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
19:43:32.274 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
19:43:32.464 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$890d9106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:32.655 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
19:43:32.673 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:32.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:33.004 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
19:43:33.008 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
19:43:33.041 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:33.065 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:33.090 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$5cdb81d6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:33.184 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$befed7fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:33.401 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$f277f58a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:33.425 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$f15621f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:34.110 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:34.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$38909cce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:34.141 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:34.158 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$f1d3292b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:34.177 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$d8aacd6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:34.185 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
19:43:34.335 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:34.360 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:34.449 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:35.327 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
19:43:35.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:35.414 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:35.998 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.027 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.034 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.055 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.059 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.076 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.155 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.264 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.267 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy102] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.282 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.286 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy103] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.343 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.442 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.448 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.462 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.545 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.645 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.678 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:36.736 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
19:43:37.998 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
19:43:38.051 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
19:43:38.094 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
19:43:38.095 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
19:43:38.127 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jre1.8.0_191\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_191/bin/server;C:/Program Files/Java/jre1.8.0_191/bin;C:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\nodejs\;"C:\sdk\platform-tools;C:\sdk\tools\bin;";C:\WINDOWS\System32\OpenSSH\;C:\Program Files\Microsoft VS Code\bin;C:\Program Files\Git\cmd;C:\Program Files\Redis\;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\Users\Administrator\AppData\Roaming\npm;C:\Program Files\Microsoft VS Code\bin;C:\Users\Administrator\AppData\Local\Microsoft\WindowsApps;C:\eclipse;;.]
19:43:38.643 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
19:43:38.643 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 9473 ms
19:43:38.992 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
19:43:38.993 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
19:43:38.993 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
19:43:38.994 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
19:43:38.995 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
19:43:38.995 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
19:43:38.996 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
19:43:38.996 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
19:43:38.998 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
19:43:39.046 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
19:43:40.711 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
19:43:41.081 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
19:43:41.822 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@740773a3: startup date [Wed Feb 27 19:43:29 CST 2019]; root of context hierarchy
19:43:41.996 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
19:43:42.001 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
19:43:42.007 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
19:43:42.007 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.008 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.008 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.009 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
19:43:42.011 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
19:43:42.012 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
19:43:42.012 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
19:43:42.013 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
19:43:42.013 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
19:43:42.014 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
19:43:42.014 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
19:43:42.015 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
19:43:42.016 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
19:43:42.016 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.016 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
19:43:42.017 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
19:43:42.018 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
19:43:42.019 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
19:43:42.019 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
19:43:42.020 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
19:43:42.020 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
19:43:42.021 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
19:43:42.022 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
19:43:42.022 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
19:43:42.024 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment]}" onto public java.lang.String cn.hu.system.controller.CommentController.index(org.springframework.ui.Model)
19:43:42.025 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.CommentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.026 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.026 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.026 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateTheme(cn.hu.system.domain.User)
19:43:42.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userExcel(cn.hu.system.domain.User)
19:43:42.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUser(java.lang.Long)
19:43:42.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.deleteUsers(java.lang.String)
19:43:42.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userCsv(cn.hu.system.domain.User)
19:43:42.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkPassword]}" onto public boolean cn.hu.system.controller.CommentController.checkPassword(java.lang.String)
19:43:42.028 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updatePassword(java.lang.String)
19:43:42.029 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/profile]}" onto public java.lang.String cn.hu.system.controller.CommentController.profileIndex(org.springframework.ui.Model)
19:43:42.029 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkUserName]}" onto public boolean cn.hu.system.controller.CommentController.checkUserName(java.lang.String,java.lang.String)
19:43:42.029 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.regist(cn.hu.system.domain.User)
19:43:42.031 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.032 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.changeAvatar(java.lang.String)
19:43:42.032 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUserProfile(java.lang.Long)
19:43:42.034 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
19:43:42.035 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
19:43:42.035 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
19:43:42.037 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
19:43:42.038 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
19:43:42.043 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
19:43:42.044 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
19:43:42.044 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
19:43:42.045 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
19:43:42.045 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
19:43:42.046 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
19:43:42.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
19:43:42.048 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
19:43:42.049 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
19:43:42.049 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
19:43:42.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
19:43:42.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
19:43:42.051 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
19:43:42.064 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
19:43:42.065 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.065 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.066 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.066 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
19:43:42.066 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
19:43:42.067 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
19:43:42.067 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
19:43:42.068 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
19:43:42.068 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
19:43:42.068 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
19:43:42.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
19:43:42.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
19:43:42.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
19:43:42.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.070 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
19:43:42.070 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
19:43:42.071 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
19:43:42.072 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.Dept)
19:43:42.072 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.Dept)
19:43:42.072 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.Dept)
19:43:42.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
19:43:42.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
19:43:42.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.Dept)
19:43:42.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
19:43:42.074 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
19:43:42.074 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.Dept)
19:43:42.077 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
19:43:42.077 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.078 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.078 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.078 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
19:43:42.078 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
19:43:42.079 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
19:43:42.080 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
19:43:42.080 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
19:43:42.081 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
19:43:42.081 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
19:43:42.081 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
19:43:42.081 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
19:43:42.082 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
19:43:42.082 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.082 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
19:43:42.082 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
19:43:42.084 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
19:43:42.084 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
19:43:42.085 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
19:43:42.085 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
19:43:42.085 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
19:43:42.090 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
19:43:42.090 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
19:43:42.090 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
19:43:42.091 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
19:43:42.092 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
19:43:42.092 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
19:43:42.094 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
19:43:42.095 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
19:43:42.095 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
19:43:42.095 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
19:43:42.096 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
19:43:42.096 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
19:43:42.096 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
19:43:42.097 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
19:43:42.097 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
19:43:42.098 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
19:43:42.099 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
19:43:42.100 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
19:43:42.100 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
19:43:42.101 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
19:43:42.101 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
19:43:42.102 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.102 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.102 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.103 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
19:43:42.103 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
19:43:42.103 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
19:43:42.103 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
19:43:42.103 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
19:43:42.104 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
19:43:42.104 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
19:43:42.104 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
19:43:42.104 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
19:43:42.104 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
19:43:42.105 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.105 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
19:43:42.105 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
19:43:42.107 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
19:43:42.108 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.108 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.108 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.108 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
19:43:42.109 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
19:43:42.109 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
19:43:42.109 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
19:43:42.109 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
19:43:42.109 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
19:43:42.110 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
19:43:42.110 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
19:43:42.110 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
19:43:42.111 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
19:43:42.111 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.111 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
19:43:42.112 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
19:43:42.114 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.index(org.springframework.ui.Model)
19:43:42.115 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.ReceiveController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.115 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.115 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.116 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateTheme(cn.hu.system.domain.User)
19:43:42.116 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userExcel(cn.hu.system.domain.User)
19:43:42.117 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUser(java.lang.Long)
19:43:42.119 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.deleteUsers(java.lang.String)
19:43:42.119 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userCsv(cn.hu.system.domain.User)
19:43:42.120 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkPassword]}" onto public boolean cn.hu.system.controller.ReceiveController.checkPassword(java.lang.String)
19:43:42.120 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updatePassword(java.lang.String)
19:43:42.121 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/profile]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.profileIndex(org.springframework.ui.Model)
19:43:42.122 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkUserName]}" onto public boolean cn.hu.system.controller.ReceiveController.checkUserName(java.lang.String,java.lang.String)
19:43:42.123 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.regist(cn.hu.system.domain.User)
19:43:42.123 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.123 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.changeAvatar(java.lang.String)
19:43:42.123 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUserProfile(java.lang.Long)
19:43:42.125 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
19:43:42.126 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.126 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.126 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.127 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
19:43:42.127 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
19:43:42.127 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
19:43:42.128 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
19:43:42.128 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
19:43:42.128 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
19:43:42.129 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
19:43:42.129 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
19:43:42.129 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
19:43:42.133 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
19:43:42.135 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.136 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
19:43:42.136 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
19:43:42.140 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
19:43:42.140 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
19:43:42.140 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
19:43:42.141 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
19:43:42.141 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
19:43:42.141 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
19:43:42.141 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
19:43:42.142 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
19:43:42.142 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
19:43:42.142 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
19:43:42.142 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
19:43:42.144 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
19:43:42.144 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
19:43:42.144 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
19:43:42.144 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
19:43:42.145 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
19:43:42.145 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
19:43:42.145 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
19:43:42.145 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
19:43:42.145 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
19:43:42.147 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
19:43:42.147 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
19:43:42.148 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
19:43:42.150 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.index(org.springframework.ui.Model)
19:43:42.150 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StatisticsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.150 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.151 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.151 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateTheme(cn.hu.system.domain.User)
19:43:42.151 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userExcel(cn.hu.system.domain.User)
19:43:42.151 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUser(java.lang.Long)
19:43:42.152 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.deleteUsers(java.lang.String)
19:43:42.152 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userCsv(cn.hu.system.domain.User)
19:43:42.152 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkPassword]}" onto public boolean cn.hu.system.controller.StatisticsController.checkPassword(java.lang.String)
19:43:42.152 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updatePassword(java.lang.String)
19:43:42.153 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/profile]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.profileIndex(org.springframework.ui.Model)
19:43:42.153 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkUserName]}" onto public boolean cn.hu.system.controller.StatisticsController.checkUserName(java.lang.String,java.lang.String)
19:43:42.153 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.regist(cn.hu.system.domain.User)
19:43:42.153 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.160 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.changeAvatar(java.lang.String)
19:43:42.161 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUserProfile(java.lang.Long)
19:43:42.174 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage]}" onto public java.lang.String cn.hu.system.controller.StorageController.index(org.springframework.ui.Model)
19:43:42.174 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StorageController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateTheme(cn.hu.system.domain.User)
19:43:42.175 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userExcel(cn.hu.system.domain.User)
19:43:42.176 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUser(java.lang.Long)
19:43:42.176 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.deleteUsers(java.lang.String)
19:43:42.176 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userCsv(cn.hu.system.domain.User)
19:43:42.176 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkPassword]}" onto public boolean cn.hu.system.controller.StorageController.checkPassword(java.lang.String)
19:43:42.179 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updatePassword(java.lang.String)
19:43:42.179 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/profile]}" onto public java.lang.String cn.hu.system.controller.StorageController.profileIndex(org.springframework.ui.Model)
19:43:42.180 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkUserName]}" onto public boolean cn.hu.system.controller.StorageController.checkUserName(java.lang.String,java.lang.String)
19:43:42.181 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.regist(cn.hu.system.domain.User)
19:43:42.182 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.182 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.changeAvatar(java.lang.String)
19:43:42.215 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUserProfile(java.lang.Long)
19:43:42.223 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
19:43:42.224 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.224 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.224 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.224 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
19:43:42.224 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
19:43:42.225 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
19:43:42.225 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
19:43:42.225 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
19:43:42.225 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
19:43:42.225 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
19:43:42.226 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
19:43:42.227 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
19:43:42.228 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
19:43:42.229 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.229 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
19:43:42.229 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
19:43:42.236 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index(org.springframework.ui.Model)
19:43:42.236 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
19:43:42.236 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUserProfile(cn.hu.system.domain.User)
19:43:42.236 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.236 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateTheme(cn.hu.system.domain.User)
19:43:42.237 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userExcel(cn.hu.system.domain.User)
19:43:42.237 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUser(java.lang.Long)
19:43:42.237 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteUsers(java.lang.String)
19:43:42.237 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userCsv(cn.hu.system.domain.User)
19:43:42.237 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkPassword]}" onto public boolean cn.hu.system.controller.WithDrawController.checkPassword(java.lang.String)
19:43:42.238 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updatePassword(java.lang.String)
19:43:42.238 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/profile]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.profileIndex(org.springframework.ui.Model)
19:43:42.238 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkUserName]}" onto public boolean cn.hu.system.controller.WithDrawController.checkUserName(java.lang.String,java.lang.String)
19:43:42.238 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.regist(cn.hu.system.domain.User)
19:43:42.238 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
19:43:42.239 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.changeAvatar(java.lang.String)
19:43:42.239 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUserProfile(java.lang.Long)
19:43:42.239 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
19:43:42.240 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
19:43:42.240 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
19:43:42.241 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
19:43:42.241 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
19:43:42.241 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
19:43:42.241 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
19:43:42.241 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
19:43:42.243 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
19:43:42.246 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
19:43:42.247 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
19:43:42.247 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
19:43:42.247 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
19:43:42.247 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
19:43:42.257 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
19:43:42.346 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
19:43:42.347 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
19:43:42.347 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
19:43:42.349 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
19:43:42.355 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
19:43:42.356 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
19:43:42.510 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
19:43:42.510 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
19:43:42.567 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
19:43:42.887 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
19:43:44.772 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
19:43:44.804 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
19:43:44.804 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
19:43:44.806 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
19:43:44.807 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

19:43:44.807 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
19:43:44.808 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
19:43:44.808 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@3dc82e6a
19:43:45.679 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
19:43:45.682 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
19:43:45.683 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
19:43:45.693 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
19:43:45.695 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
19:43:45.706 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
19:43:45.706 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
19:43:45.707 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
19:43:45.721 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
19:43:45.747 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
19:43:45.797 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
19:43:45.814 febs [main] INFO  cn.hu.Application - Started Application in 17.761 seconds (JVM running for 18.526)
19:43:45.834 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-02-27 19:43:45.834 》》》》》》
19:43:56.377 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
19:43:56.377 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
19:43:56.437 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 59 ms
19:43:56.507 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
19:44:13.877 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
19:44:13.877 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 94 ms
19:44:13.877 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,FRONT,BACK,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
19:44:13.903 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
19:44:13.903 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
19:44:13.903 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-2-27 19:44:13' WHERE ( lower(username)= 'admin' )
19:44:14.104 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
19:44:14.104 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 28 ms
19:44:14.104 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2383,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Tue Feb 26 22:01:13 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 19:44:14','内网IP|0|0|内网IP|内网IP' )
19:44:15.238 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
19:44:15.238 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 35 ms
19:44:15.238 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
19:44:24.217 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
19:44:24.218 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
19:44:24.218 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
19:44:24.230 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
19:44:24.230 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
19:44:24.230 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
19:44:24.261 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
19:44:24.261 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
19:44:24.261 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2384,'admin','获取部门信息',7,'cn.hu.system.controller.GoodsCategoryController.index()','','127.0.0.1','2019-2-27 19:44:24','内网IP|0|0|内网IP|内网IP' )
19:44:24.460 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
19:44:24.460 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 24 ms
19:44:24.460 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
19:44:24.498 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
19:44:24.498 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 46 ms
19:44:24.498 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
19:44:25.982 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
19:44:25.982 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
19:44:25.982 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
19:44:26.193 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
19:44:26.193 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
19:44:26.193 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
19:44:26.207 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
19:44:26.207 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
19:44:26.207 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
19:44:26.239 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
19:44:26.239 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 35 ms
19:44:26.239 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2385,'admin','获取用户信息',134,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 19:44:26','内网IP|0|0|内网IP|内网IP' )
19:48:15.757 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
19:48:15.757 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 41 ms
19:48:15.757 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2386,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Tue Feb 26 22:01:13 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 19:48:15','内网IP|0|0|内网IP|内网IP' )
19:48:16.658 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
19:48:16.658 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 20 ms
19:48:16.658 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
19:48:49.670 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
19:48:49.670 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 34 ms
19:48:49.670 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
19:48:49.675 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
19:48:49.675 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 21 ms
19:48:49.675 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
19:48:49.677 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
19:48:49.678 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
19:48:49.678 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
19:48:49.827 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
19:48:49.827 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 56 ms
19:48:49.827 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2387,'admin','获取用户信息',3,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 19:48:49','内网IP|0|0|内网IP|内网IP' )
19:48:52.950 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
19:48:52.950 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
19:48:52.950 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
19:50:46.861 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
19:50:46.861 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
19:50:46.861 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2388,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Tue Feb 26 22:01:13 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 19:50:46','内网IP|0|0|内网IP|内网IP' )
19:50:47.606 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
19:50:47.607 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
19:50:47.607 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
19:50:50.979 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
19:50:50.979 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
19:50:50.979 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
19:50:50.983 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
19:50:50.983 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
19:50:50.983 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
19:50:50.987 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
19:50:50.988 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
19:50:50.988 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
19:50:51.075 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
19:50:51.075 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
19:50:51.076 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2389,'admin','获取用户信息',2,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 19:50:51','内网IP|0|0|内网IP|内网IP' )
19:50:56.849 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
19:50:56.849 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
19:50:56.849 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
20:43:00.795 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
20:43:00.795 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
20:43:00.795 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,FRONT,BACK,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
20:43:00.805 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
20:43:00.805 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
20:43:00.805 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-2-27 20:43:00' WHERE ( lower(username)= 'admin' )
20:43:00.831 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:43:00.831 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
20:43:00.831 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2390,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Wed Feb 27 19:44:13 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 20:43:00','内网IP|0|0|内网IP|内网IP' )
20:43:01.599 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
20:43:01.599 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 30 ms
20:43:01.599 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
20:43:04.672 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
20:43:04.672 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
20:43:04.672 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
20:43:04.678 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
20:43:04.678 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
20:43:04.678 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
20:43:04.793 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
20:43:04.793 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
20:43:04.793 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
20:43:04.796 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
20:43:04.796 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
20:43:04.796 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
20:43:04.803 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
20:43:04.803 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
20:43:04.803 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
20:43:04.873 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:43:04.873 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
20:43:04.873 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2391,'admin','获取用户信息',2,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 20:43:04','内网IP|0|0|内网IP|内网IP' )
20:43:56.512 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Validating all active sessions...
20:43:56.530 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Finished session validation.  No sessions were stopped.
20:46:29.982 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
20:46:29.983 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
20:46:29.983 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
20:48:21.872 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:48:21.872 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
20:48:21.872 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2392,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Wed Feb 27 19:44:13 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 20:48:21','内网IP|0|0|内网IP|内网IP' )
20:48:22.401 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
20:48:22.401 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 19 ms
20:48:22.401 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
20:48:26.967 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
20:48:26.967 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
20:48:26.967 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
20:48:26.975 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
20:48:26.975 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
20:48:26.975 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
20:48:26.982 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
20:48:26.982 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
20:48:26.982 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
20:48:27.045 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:48:27.046 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 15 ms
20:48:27.046 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2393,'admin','获取用户信息',2,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 20:48:27','内网IP|0|0|内网IP|内网IP' )
20:48:30.409 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
20:48:30.410 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
20:48:30.410 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
20:48:52.514 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:48:52.514 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 32 ms
20:48:52.514 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2394,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Wed Feb 27 19:44:13 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 20:48:52','内网IP|0|0|内网IP|内网IP' )
20:48:53.244 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
20:48:53.245 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
20:48:53.245 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
20:48:57.715 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
20:48:57.715 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
20:48:57.716 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
20:48:57.719 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
20:48:57.720 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 19 ms
20:48:57.720 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
20:48:57.722 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
20:48:57.723 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
20:48:57.723 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
20:48:57.805 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:48:57.805 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 29 ms
20:48:57.805 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2395,'admin','获取用户信息',2,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 20:48:57','内网IP|0|0|内网IP|内网IP' )
20:50:03.291 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
20:50:03.291 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
20:50:03.291 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
20:50:22.073 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
20:50:22.073 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
20:50:22.073 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 167
20:50:27.651 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:50:27.651 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
20:50:27.651 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2396,'admin','获取用户信息',2,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 20:50:27','内网IP|0|0|内网IP|内网IP' )
20:50:28.559 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:50:28.559 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
20:50:28.559 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2397,'admin','获取用户信息',1,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 20:50:28','内网IP|0|0|内网IP|内网IP' )
20:50:29.770 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:50:29.770 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
20:50:29.770 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2398,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Wed Feb 27 19:44:13 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 20:50:29','内网IP|0|0|内网IP|内网IP' )
20:50:30.501 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
20:50:30.501 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 41 ms
20:50:30.501 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
20:50:33.921 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
20:50:33.922 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
20:50:33.922 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
20:50:33.926 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
20:50:33.926 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
20:50:33.926 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
20:50:33.932 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
20:50:33.932 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
20:50:33.932 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
20:50:33.976 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
20:50:33.976 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
20:50:33.976 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2399,'admin','获取用户信息',1,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 20:50:33','内网IP|0|0|内网IP|内网IP' )
20:50:37.240 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
20:50:37.240 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
20:50:37.240 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
20:52:09.449 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
20:52:09.450 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
20:52:09.450 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:13:49.400 febs [main] INFO  cn.hu.Application - Starting Application on DESKTOP-4ODT231 with PID 7548 (E:\masha\ms\target\classes started by googlebrain in E:\masha\ms)
22:13:49.404 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
22:13:49.449 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Wed Feb 27 22:13:49 CST 2019]; root of context hierarchy
22:13:50.086 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\masha\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
22:13:50.232 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
22:13:50.478 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
22:13:50.544 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
22:13:50.546 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
22:13:50.546 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
22:13:50.547 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
22:13:50.547 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
22:13:50.547 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
22:13:50.547 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
22:13:50.617 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$96568659] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:50.665 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
22:13:50.684 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:50.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:50.824 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
22:13:50.825 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
22:13:50.838 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:50.847 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:50.862 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$6a247729] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:50.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$cc47cd4e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:50.951 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$ffc0eadd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:50.958 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$fe9f1744] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:51.660 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:51.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$45d99221] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:51.672 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:51.680 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$ff1c1e7e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:51.685 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e5f3c2c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:51.689 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
22:13:51.836 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:51.847 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:51.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.187 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
22:13:52.188 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.225 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.444 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.452 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.455 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.458 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.467 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.468 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.477 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.496 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.530 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy103] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.537 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.539 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.567 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.592 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.594 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.601 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.644 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.668 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:52.689 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:13:53.060 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
22:13:53.071 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
22:13:53.079 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
22:13:53.080 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
22:13:53.083 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_201/bin/server;C:/Program Files/Java/jre1.8.0_201/bin;C:/Program Files/Java/jre1.8.0_201/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\apache-tomcat-7.0.90\bin;C:\Program Files\TortoiseGit\bin;C:\Users\googlebrain\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Users\googlebrain\AppData\Local\GitHubDesktop\bin;C:\eclipse-jee-photon-R-win32-x86_64\eclipse;;.]
22:13:54.252 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
22:13:54.252 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4804 ms
22:13:54.371 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
22:13:54.371 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
22:13:54.371 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
22:13:54.371 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
22:13:54.372 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
22:13:54.372 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
22:13:54.372 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
22:13:54.372 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
22:13:54.374 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
22:13:54.386 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
22:13:55.023 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
22:13:55.169 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:13:55.365 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Wed Feb 27 22:13:49 CST 2019]; root of context hierarchy
22:13:55.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
22:13:55.417 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
22:13:55.420 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
22:13:55.420 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.420 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.420 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.420 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
22:13:55.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
22:13:55.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
22:13:55.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
22:13:55.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
22:13:55.422 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
22:13:55.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
22:13:55.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
22:13:55.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
22:13:55.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
22:13:55.424 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
22:13:55.424 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
22:13:55.425 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
22:13:55.425 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
22:13:55.426 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
22:13:55.426 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
22:13:55.426 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
22:13:55.427 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
22:13:55.427 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
22:13:55.428 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
22:13:55.429 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment]}" onto public java.lang.String cn.hu.system.controller.CommentController.index(org.springframework.ui.Model)
22:13:55.429 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.CommentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkUserName]}" onto public boolean cn.hu.system.controller.CommentController.checkUserName(java.lang.String,java.lang.String)
22:13:55.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.regist(cn.hu.system.domain.User)
22:13:55.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUser(java.lang.Long)
22:13:55.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.changeAvatar(java.lang.String)
22:13:55.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUserProfile(java.lang.Long)
22:13:55.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userExcel(cn.hu.system.domain.User)
22:13:55.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userCsv(cn.hu.system.domain.User)
22:13:55.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.deleteUsers(java.lang.String)
22:13:55.432 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkPassword]}" onto public boolean cn.hu.system.controller.CommentController.checkPassword(java.lang.String)
22:13:55.432 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateTheme(cn.hu.system.domain.User)
22:13:55.432 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/profile]}" onto public java.lang.String cn.hu.system.controller.CommentController.profileIndex(org.springframework.ui.Model)
22:13:55.432 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updatePassword(java.lang.String)
22:13:55.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
22:13:55.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
22:13:55.434 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
22:13:55.434 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
22:13:55.434 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
22:13:55.435 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
22:13:55.435 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
22:13:55.435 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
22:13:55.436 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
22:13:55.436 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
22:13:55.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
22:13:55.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
22:13:55.438 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
22:13:55.438 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
22:13:55.438 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
22:13:55.439 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
22:13:55.439 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
22:13:55.440 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
22:13:55.441 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
22:13:55.441 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.441 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.441 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.441 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
22:13:55.441 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
22:13:55.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
22:13:55.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
22:13:55.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
22:13:55.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
22:13:55.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
22:13:55.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
22:13:55.443 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
22:13:55.443 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
22:13:55.443 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
22:13:55.443 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
22:13:55.444 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
22:13:55.444 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.Dept)
22:13:55.444 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
22:13:55.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.Dept)
22:13:55.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
22:13:55.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
22:13:55.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
22:13:55.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.Dept)
22:13:55.446 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.Dept)
22:13:55.446 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.Dept)
22:13:55.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
22:13:55.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
22:13:55.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
22:13:55.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
22:13:55.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
22:13:55.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
22:13:55.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
22:13:55.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
22:13:55.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
22:13:55.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
22:13:55.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
22:13:55.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
22:13:55.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
22:13:55.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
22:13:55.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
22:13:55.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
22:13:55.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
22:13:55.451 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
22:13:55.452 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
22:13:55.452 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
22:13:55.452 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
22:13:55.453 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
22:13:55.453 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
22:13:55.453 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
22:13:55.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
22:13:55.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
22:13:55.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
22:13:55.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
22:13:55.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
22:13:55.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
22:13:55.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
22:13:55.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
22:13:55.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
22:13:55.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
22:13:55.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
22:13:55.457 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
22:13:55.457 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
22:13:55.457 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
22:13:55.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
22:13:55.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
22:13:55.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
22:13:55.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
22:13:55.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
22:13:55.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
22:13:55.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
22:13:55.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
22:13:55.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
22:13:55.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
22:13:55.460 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
22:13:55.460 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
22:13:55.460 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
22:13:55.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
22:13:55.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
22:13:55.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
22:13:55.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
22:13:55.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
22:13:55.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
22:13:55.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
22:13:55.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
22:13:55.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
22:13:55.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
22:13:55.463 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
22:13:55.463 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
22:13:55.463 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
22:13:55.464 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.index(org.springframework.ui.Model)
22:13:55.464 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.ReceiveController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkUserName]}" onto public boolean cn.hu.system.controller.ReceiveController.checkUserName(java.lang.String,java.lang.String)
22:13:55.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.regist(cn.hu.system.domain.User)
22:13:55.466 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.466 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUser(java.lang.Long)
22:13:55.466 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.changeAvatar(java.lang.String)
22:13:55.466 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUserProfile(java.lang.Long)
22:13:55.467 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userExcel(cn.hu.system.domain.User)
22:13:55.467 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userCsv(cn.hu.system.domain.User)
22:13:55.467 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.deleteUsers(java.lang.String)
22:13:55.467 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkPassword]}" onto public boolean cn.hu.system.controller.ReceiveController.checkPassword(java.lang.String)
22:13:55.468 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateTheme(cn.hu.system.domain.User)
22:13:55.468 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/profile]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.profileIndex(org.springframework.ui.Model)
22:13:55.468 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updatePassword(java.lang.String)
22:13:55.470 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
22:13:55.472 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
22:13:55.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
22:13:55.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
22:13:55.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
22:13:55.484 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
22:13:55.484 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
22:13:55.484 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
22:13:55.485 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
22:13:55.485 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
22:13:55.485 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
22:13:55.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
22:13:55.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
22:13:55.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
22:13:55.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
22:13:55.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
22:13:55.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
22:13:55.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
22:13:55.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
22:13:55.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
22:13:55.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
22:13:55.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
22:13:55.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
22:13:55.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
22:13:55.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
22:13:55.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
22:13:55.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
22:13:55.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
22:13:55.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
22:13:55.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
22:13:55.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
22:13:55.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
22:13:55.493 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
22:13:55.493 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
22:13:55.494 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
22:13:55.494 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
22:13:55.495 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.index(org.springframework.ui.Model)
22:13:55.495 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StatisticsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.495 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.495 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.495 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkUserName]}" onto public boolean cn.hu.system.controller.StatisticsController.checkUserName(java.lang.String,java.lang.String)
22:13:55.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.regist(cn.hu.system.domain.User)
22:13:55.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUser(java.lang.Long)
22:13:55.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.changeAvatar(java.lang.String)
22:13:55.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUserProfile(java.lang.Long)
22:13:55.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userExcel(cn.hu.system.domain.User)
22:13:55.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userCsv(cn.hu.system.domain.User)
22:13:55.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.deleteUsers(java.lang.String)
22:13:55.497 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkPassword]}" onto public boolean cn.hu.system.controller.StatisticsController.checkPassword(java.lang.String)
22:13:55.497 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateTheme(cn.hu.system.domain.User)
22:13:55.497 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/profile]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.profileIndex(org.springframework.ui.Model)
22:13:55.497 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updatePassword(java.lang.String)
22:13:55.498 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage]}" onto public java.lang.String cn.hu.system.controller.StorageController.index(org.springframework.ui.Model)
22:13:55.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StorageController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkUserName]}" onto public boolean cn.hu.system.controller.StorageController.checkUserName(java.lang.String,java.lang.String)
22:13:55.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.regist(cn.hu.system.domain.User)
22:13:55.500 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.500 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUser(java.lang.Long)
22:13:55.500 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.changeAvatar(java.lang.String)
22:13:55.500 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUserProfile(java.lang.Long)
22:13:55.500 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userExcel(cn.hu.system.domain.User)
22:13:55.500 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userCsv(cn.hu.system.domain.User)
22:13:55.500 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.deleteUsers(java.lang.String)
22:13:55.501 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkPassword]}" onto public boolean cn.hu.system.controller.StorageController.checkPassword(java.lang.String)
22:13:55.501 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateTheme(cn.hu.system.domain.User)
22:13:55.501 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/profile]}" onto public java.lang.String cn.hu.system.controller.StorageController.profileIndex(org.springframework.ui.Model)
22:13:55.501 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updatePassword(java.lang.String)
22:13:55.502 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
22:13:55.502 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
22:13:55.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
22:13:55.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
22:13:55.504 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
22:13:55.504 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
22:13:55.504 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
22:13:55.504 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
22:13:55.504 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
22:13:55.504 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
22:13:55.504 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
22:13:55.505 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
22:13:55.505 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
22:13:55.506 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index(org.springframework.ui.Model)
22:13:55.506 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:13:55.506 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUserProfile(cn.hu.system.domain.User)
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkUserName]}" onto public boolean cn.hu.system.controller.WithDrawController.checkUserName(java.lang.String,java.lang.String)
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.regist(cn.hu.system.domain.User)
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUser(java.lang.Long)
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.changeAvatar(java.lang.String)
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUserProfile(java.lang.Long)
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userExcel(cn.hu.system.domain.User)
22:13:55.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userCsv(cn.hu.system.domain.User)
22:13:55.508 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteUsers(java.lang.String)
22:13:55.508 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkPassword]}" onto public boolean cn.hu.system.controller.WithDrawController.checkPassword(java.lang.String)
22:13:55.508 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateTheme(cn.hu.system.domain.User)
22:13:55.508 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/profile]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.profileIndex(org.springframework.ui.Model)
22:13:55.508 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updatePassword(java.lang.String)
22:13:55.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
22:13:55.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
22:13:55.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
22:13:55.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
22:13:55.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
22:13:55.510 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
22:13:55.510 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
22:13:55.510 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
22:13:55.510 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
22:13:55.511 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
22:13:55.511 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
22:13:55.511 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
22:13:55.511 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
22:13:55.511 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
22:13:55.511 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
22:13:55.511 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
22:13:55.512 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
22:13:55.512 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
22:13:55.512 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
22:13:55.515 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
22:13:55.516 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
22:13:55.587 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:13:55.587 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:13:55.609 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
22:13:55.715 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
22:13:56.258 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
22:13:56.267 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
22:13:56.267 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
22:13:56.267 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
22:13:56.268 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

22:13:56.268 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
22:13:56.268 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
22:13:56.268 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@743d0d44
22:13:56.602 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
22:13:56.605 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
22:13:56.605 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
22:13:56.609 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
22:13:56.610 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
22:13:56.615 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
22:13:56.615 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
22:13:56.615 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
22:13:56.621 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
22:13:56.629 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
22:13:56.641 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
22:13:56.644 febs [main] INFO  cn.hu.Application - Started Application in 7.575 seconds (JVM running for 20.665)
22:13:56.650 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-02-27 22:13:56.650 》》》》》》
22:16:04.838 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
22:16:04.838 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
22:16:04.874 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
22:16:04.889 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
22:16:12.610 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
22:16:12.611 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 48 ms
22:16:12.611 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,FRONT,BACK,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
22:16:12.637 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
22:16:12.637 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
22:16:12.637 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-2-27 22:16:12' WHERE ( lower(username)= 'admin' )
22:16:12.697 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:16:12.697 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 22 ms
22:16:12.697 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2305,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Mon Feb 25 22:09:22 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 22:16:12','内网IP|0|0|内网IP|内网IP' )
22:16:14.195 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:16:14.195 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 68 ms
22:16:14.195 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:17:47.622 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
22:17:47.622 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:17:47.622 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
22:17:47.629 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
22:17:47.629 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:17:47.629 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
22:17:47.644 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:17:47.644 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:17:47.644 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2306,'admin','获取角色信息',2,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-27 22:17:47','内网IP|0|0|内网IP|内网IP' )
22:17:47.688 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:17:47.688 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
22:17:47.688 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:17:47.770 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:17:47.770 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:17:47.770 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:17:47.776 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:17:47.776 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:17:47.776 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:29.950 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:21:29.950 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:21:29.950 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2307,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Mon Feb 25 22:09:22 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 22:21:29','内网IP|0|0|内网IP|内网IP' )
22:21:30.190 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:21:30.190 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 29 ms
22:21:30.190 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:21:34.149 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:21:34.149 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
22:21:34.149 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2308,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-27 22:21:34','内网IP|0|0|内网IP|内网IP' )
22:21:34.228 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:21:34.228 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:21:34.228 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:21:34.276 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:21:34.276 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
22:21:34.276 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:21:34.325 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:21:34.325 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:21:34.325 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2309,'admin','获取系统所有URL',37,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-27 22:21:34','内网IP|0|0|内网IP|内网IP' )
22:21:37.741 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:21:37.741 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:21:37.741 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2310,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-27 22:21:37','内网IP|0|0|内网IP|内网IP' )
22:21:37.778 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:21:37.778 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
22:21:37.778 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:21:37.794 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:21:37.794 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:37.794 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:37.797 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:21:37.797 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:37.797 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:44.559 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:21:44.559 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:44.559 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:44.561 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:21:44.561 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:44.561 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:45.262 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:21:45.263 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:45.263 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:45.265 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:21:45.266 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:45.266 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:45.424 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:21:45.424 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:45.424 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:45.427 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:21:45.427 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:21:45.427 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:45.702 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:21:45.702 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:45.702 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:45.704 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:21:45.704 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:21:45.704 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:21:59.700 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
22:21:59.700 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
22:21:59.700 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
22:24:21.637 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:24:21.637 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
22:24:21.637 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2311,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-27 22:24:21','内网IP|0|0|内网IP|内网IP' )
22:24:21.692 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:24:21.692 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:24:21.692 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:24:21.723 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:24:21.723 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:24:21.723 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:24:21.770 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:24:21.770 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 17 ms
22:24:21.770 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2312,'admin','获取系统所有URL',11,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-27 22:24:21','内网IP|0|0|内网IP|内网IP' )
22:24:22.914 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:24:22.914 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:24:22.914 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2313,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-27 22:24:22','内网IP|0|0|内网IP|内网IP' )
22:24:22.951 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:24:22.951 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:24:22.951 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:24:22.970 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:24:22.970 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:24:22.970 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:24:22.972 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:24:22.973 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:24:22.973 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:24:31.877 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:24:31.877 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:24:31.877 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role WHERE ( role_name= '管理员' ) order by create_time
22:24:31.879 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:24:31.879 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:24:31.879 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role WHERE ( role_name= '管理员' ) order by create_time
22:24:42.584 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:24:42.584 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:24:42.584 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:24:42.586 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:24:42.586 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:24:42.586 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:24:43.778 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:24:43.778 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:24:43.778 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2314,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-27 22:24:43','内网IP|0|0|内网IP|内网IP' )
22:24:43.823 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:24:43.823 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:24:43.823 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:24:43.854 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:24:43.854 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:24:43.854 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:24:43.879 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:24:43.879 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:24:43.879 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2315,'admin','获取系统所有URL',2,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-27 22:24:43','内网IP|0|0|内网IP|内网IP' )
22:25:04.125 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:25:04.125 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:25:04.125 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2316,'admin','获取部门信息',3,'cn.hu.system.controller.DeptController.index()','','127.0.0.1','2019-2-27 22:25:04','内网IP|0|0|内网IP|内网IP' )
22:25:04.170 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:25:04.170 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
22:25:04.170 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:25:04.171 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:25:04.171 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:25:04.171 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:19.237 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:19.237 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:28:19.237 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:24.410 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:24.411 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:24.411 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:34.197 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:34.197 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:34.197 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept WHERE ( lower(dept_name) = '测试部' )
22:28:39.536 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:39.537 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:39.537 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept WHERE ( lower(dept_name) = 'chan' )
22:28:39.691 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:39.691 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:39.691 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept WHERE ( lower(dept_name) = 'chanp' )
22:28:39.899 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:39.899 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:39.899 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept WHERE ( lower(dept_name) = 'chanpin' )
22:28:40.178 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:40.178 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
22:28:40.178 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept WHERE ( lower(dept_name) = 'chanping' )
22:28:41.009 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:41.009 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:41.009 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept WHERE ( lower(dept_name) = '产品b' )
22:28:41.160 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:41.160 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:41.160 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept WHERE ( lower(dept_name) = '产品bu' )
22:28:42.182 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:42.182 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:42.182 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept WHERE ( lower(dept_name) = '产品部' )
22:28:44.382 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.insert
22:28:44.382 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:44.382 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_dept ( DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME ) VALUES( 10,0,'产品部',,'2019-2-27 22:28:44' )
22:28:44.397 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:28:44.397 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:28:44.397 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2317,'admin','新增部门',13,'cn.hu.system.controller.DeptController.addRole()','dept: "cn.hu.system.domain.Dept@3d2899ce"','127.0.0.1','2019-2-27 22:28:44','内网IP|0|0|内网IP|内网IP' )
22:28:44.404 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:44.404 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:44.404 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:44.408 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:44.408 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:44.408 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:44.412 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:44.412 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:28:44.412 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:50.004 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.deleteByExample
22:28:50.004 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:50.004 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_dept WHERE ( DEPT_ID in ( '6' ) )
22:28:50.007 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.changeToTop
22:28:50.007 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:50.007 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> update t_dept set parent_id = 0 where dept_id in ( select a.dept_id from ( (select dept_id from t_dept where parent_id in ( '6' ) ) ) a )
22:28:50.017 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:28:50.017 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:28:50.018 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2318,'admin','删除部门',10,'cn.hu.system.controller.DeptController.deleteDepts()','ids: "6"','127.0.0.1','2019-2-27 22:28:50','内网IP|0|0|内网IP|内网IP' )
22:28:50.025 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:50.025 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:50.025 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:50.025 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:28:50.025 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:50.025 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:52.667 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:52.667 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:28:52.667 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:52.667 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:52.667 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:52.667 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:52.824 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:52.825 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:52.825 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:52.826 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:52.826 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:52.826 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:52.954 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:52.954 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:52.954 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:52.954 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:52.955 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:52.955 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:53.055 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:53.055 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:53.055 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:53.058 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:53.058 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:53.058 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:53.180 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:53.180 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:28:53.180 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:28:53.180 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:53.180 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:53.180 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:28:55.976 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:28:55.976 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
22:28:55.976 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2319,'admin','获取字典信息',2,'cn.hu.system.controller.BaseSettingController.index()','','127.0.0.1','2019-2-27 22:28:55','内网IP|0|0|内网IP|内网IP' )
22:28:56.037 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.selectByExample_COUNT
22:28:56.037 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:28:56.037 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME,DES FROM t_dict order by dict_id
22:28:56.039 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.selectByExample
22:28:56.039 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:28:56.039 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME,DES FROM t_dict order by dict_id
22:29:08.797 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.selectByExample_COUNT
22:29:08.797 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:29:08.797 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME,DES FROM t_dict order by dict_id
22:29:08.802 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.selectByExample
22:29:08.802 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:29:08.802 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME,DES FROM t_dict order by dict_id
22:29:33.234 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.deleteByExample
22:29:33.234 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:29:33.235 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_dict WHERE ( DICT_ID in ( '33' ) )
22:29:33.245 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:29:33.245 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:29:33.245 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2320,'admin','删除字典',8,'cn.hu.system.controller.BaseSettingController.deleteDicts()','ids: "33"','127.0.0.1','2019-2-27 22:29:33','内网IP|0|0|内网IP|内网IP' )
22:29:38.026 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.selectByExample_COUNT
22:29:38.026 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:29:38.026 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME,DES FROM t_dict order by dict_id
22:29:38.029 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.selectByExample
22:29:38.029 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:29:38.029 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME,DES FROM t_dict order by dict_id
22:29:38.876 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.selectByExample_COUNT
22:29:38.876 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:29:38.876 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME,DES FROM t_dict order by dict_id
22:29:38.878 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DictMapper.selectByExample
22:29:38.878 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:29:38.878 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DICT_ID,KEYY,VALUEE,TABLE_NAME,FIELD_NAME,DES FROM t_dict order by dict_id
22:29:48.812 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:29:48.812 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:29:48.812 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2321,'admin','获取在线用户信息',1,'cn.hu.system.controller.SessionController.online()','','127.0.0.1','2019-2-27 22:29:48','内网IP|0|0|内网IP|内网IP' )
22:29:51.376 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.selectByExample_COUNT
22:29:51.376 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 24 ms
22:29:51.377 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION FROM t_log order by create_time desc
22:29:51.379 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.selectByExample
22:29:51.379 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:29:51.379 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION FROM t_log order by create_time desc
22:30:06.600 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:30:06.600 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:30:06.600 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2322,'admin','获取在线用户信息',0,'cn.hu.system.controller.SessionController.online()','','127.0.0.1','2019-2-27 22:30:06','内网IP|0|0|内网IP|内网IP' )
22:30:15.033 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:30:15.033 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:30:15.033 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2323,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-27 22:30:15','内网IP|0|0|内网IP|内网IP' )
22:30:15.079 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:30:15.080 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:15.080 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:30:15.107 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:30:15.107 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:15.107 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:30:15.133 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:30:15.133 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
22:30:15.133 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2324,'admin','获取系统所有URL',1,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-27 22:30:15','内网IP|0|0|内网IP|内网IP' )
22:30:41.747 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.deleteByExample
22:30:41.747 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:41.747 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_menu WHERE ( MENU_ID in ( '58' ) )
22:30:41.753 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
22:30:41.753 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:41.753 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( MENU_ID in ( '58' ) )
22:30:41.755 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.changeToTop
22:30:41.755 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:41.756 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> update t_menu set parent_id = 0 where menu_id in ( select a.menu_id from ( (select menu_id from t_menu where parent_id in ( '58' ) ) ) a )
22:30:41.768 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:30:41.768 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:41.768 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2325,'admin','删除菜单',19,'cn.hu.system.controller.MenuController.deleteMenus()','ids: "58"','127.0.0.1','2019-2-27 22:30:41','内网IP|0|0|内网IP|内网IP' )
22:30:41.810 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:30:41.810 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:41.810 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:30:41.810 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:30:41.810 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:41.810 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:30:43.737 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:30:43.737 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:30:43.737 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2326,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-27 22:30:43','内网IP|0|0|内网IP|内网IP' )
22:30:43.775 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:30:43.775 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:43.775 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:30:43.795 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:30:43.796 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:43.796 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:30:43.797 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:30:43.797 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:43.797 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:30:47.726 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
22:30:47.726 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:47.726 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
22:30:54.800 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.updateByPrimaryKeySelective
22:30:54.800 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.800 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2019-2-27 22:30:54' WHERE ROLE_ID = 1
22:30:54.809 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
22:30:54.809 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:30:54.810 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( role_id= 1 )
22:30:54.812 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.812 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:30:54.812 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
22:30:54.812 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.812 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.812 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
22:30:54.814 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.814 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.814 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
22:30:54.815 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.815 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.815 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
22:30:54.815 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.815 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.815 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
22:30:54.816 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.816 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.816 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
22:30:54.817 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.817 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.817 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
22:30:54.818 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.818 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.818 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
22:30:54.819 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.819 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.819 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
22:30:54.820 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.820 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.820 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
22:30:54.821 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.821 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.821 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
22:30:54.822 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.822 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.822 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
22:30:54.823 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.823 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.823 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
22:30:54.823 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.823 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.823 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
22:30:54.824 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.825 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.825 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
22:30:54.825 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.825 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.825 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
22:30:54.826 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.826 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.826 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
22:30:54.827 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.827 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.828 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
22:30:54.828 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.829 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.829 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
22:30:54.829 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.829 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.829 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
22:30:54.830 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.830 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.830 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
22:30:54.831 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.831 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.831 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
22:30:54.832 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.832 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.832 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
22:30:54.832 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.832 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.832 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
22:30:54.833 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.833 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.833 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
22:30:54.834 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.834 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.834 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
22:30:54.835 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.835 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.835 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
22:30:54.836 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.836 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.836 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
22:30:54.837 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.837 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.837 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
22:30:54.837 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.837 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.837 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
22:30:54.838 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.838 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.838 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,118 )
22:30:54.839 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.839 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.839 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
22:30:54.840 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.840 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.840 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
22:30:54.841 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.841 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.841 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
22:30:54.841 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.841 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.841 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,122 )
22:30:54.842 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.842 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.842 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
22:30:54.842 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.843 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.843 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
22:30:54.843 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.843 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.843 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
22:30:54.844 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.844 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.844 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
22:30:54.845 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.845 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.845 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
22:30:54.845 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.845 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.845 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,128 )
22:30:54.846 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.846 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.846 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,129 )
22:30:54.847 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.847 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.847 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,130 )
22:30:54.848 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.848 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.848 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,131 )
22:30:54.848 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.848 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.848 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,132 )
22:30:54.850 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.850 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.850 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,133 )
22:30:54.850 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.850 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.850 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,134 )
22:30:54.851 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.851 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.851 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,135 )
22:30:54.852 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.852 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.852 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,136 )
22:30:54.853 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.853 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.853 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,137 )
22:30:54.854 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.854 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.854 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,138 )
22:30:54.855 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.855 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.855 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,139 )
22:30:54.856 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.856 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.856 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,140 )
22:30:54.857 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.857 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.857 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,141 )
22:30:54.857 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.857 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.857 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,145 )
22:30:54.858 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.858 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.858 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,144 )
22:30:54.861 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.861 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:30:54.861 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,146 )
22:30:54.862 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.862 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.862 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,148 )
22:30:54.863 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.863 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.863 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,147 )
22:30:54.863 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.863 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.863 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,149 )
22:30:54.864 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.864 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.864 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,150 )
22:30:54.864 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.865 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.865 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,151 )
22:30:54.865 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.865 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.865 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,152 )
22:30:54.866 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.866 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.866 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,153 )
22:30:54.867 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.867 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.867 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,154 )
22:30:54.868 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.868 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.868 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,155 )
22:30:54.868 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:30:54.868 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.868 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,156 )
22:30:54.876 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:30:54.876 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:30:54.876 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2327,'admin','修改角色',73,'cn.hu.system.controller.RoleController.updateRole()','role: "cn.hu.system.domain.Role@5bed13d0"  menuId: "[Ljava.lang.Long;@12d06e2e"','127.0.0.1','2019-2-27 22:30:54','内网IP|0|0|内网IP|内网IP' )
22:30:54.886 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:30:54.886 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:54.886 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:30:54.889 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:30:54.889 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:30:54.889 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:30:56.879 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:30:56.879 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
22:30:56.879 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2328,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Mon Feb 25 22:09:22 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 22:30:56','内网IP|0|0|内网IP|内网IP' )
22:30:57.104 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:30:57.105 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 30 ms
22:30:57.105 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:30:59.600 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:30:59.600 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:30:59.600 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2329,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-27 22:30:59','内网IP|0|0|内网IP|内网IP' )
22:30:59.609 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:30:59.609 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:59.609 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:30:59.629 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:30:59.629 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:59.629 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:30:59.631 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:30:59.631 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:30:59.632 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:31:01.798 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
22:31:01.798 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:31:01.798 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
22:31:07.887 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:31:07.887 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
22:31:07.887 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2330,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-27 22:31:07','内网IP|0|0|内网IP|内网IP' )
22:31:07.935 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:31:07.935 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:31:07.935 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:31:07.964 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:31:07.964 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:31:07.964 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:31:07.990 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:31:07.990 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:31:07.990 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2331,'admin','获取系统所有URL',1,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-27 22:31:07','内网IP|0|0|内网IP|内网IP' )
22:31:27.035 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.deleteByExample
22:31:27.035 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:31:27.035 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_menu WHERE ( MENU_ID in ( '59' , '61' , '81' , '82' , '83' , '86' , '87' , '88' , '89' ) )
22:31:27.037 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
22:31:27.037 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:31:27.037 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( MENU_ID in ( '59' , '61' , '81' , '82' , '83' , '86' , '87' , '88' , '89' ) )
22:31:27.038 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.changeToTop
22:31:27.038 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:31:27.038 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> update t_menu set parent_id = 0 where menu_id in ( select a.menu_id from ( (select menu_id from t_menu where parent_id in ( '59' , '61' , '81' , '82' , '83' , '86' , '87' , '88' , '89' ) ) ) a )
22:31:27.044 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:31:27.044 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:31:27.044 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2332,'admin','删除菜单',15,'cn.hu.system.controller.MenuController.deleteMenus()','ids: "59,61,81,82,83,86,87,88,89"','127.0.0.1','2019-2-27 22:31:27','内网IP|0|0|内网IP|内网IP' )
22:31:27.098 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:31:27.098 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:31:27.098 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
22:31:27.098 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
22:31:27.098 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:31:27.098 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:31:28.425 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:31:28.425 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:31:28.425 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2333,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-27 22:31:28','内网IP|0|0|内网IP|内网IP' )
22:31:28.457 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:31:28.457 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:31:28.457 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:31:28.473 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:31:28.473 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:31:28.473 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:31:28.476 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:31:28.476 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:31:28.476 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:31:29.663 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:31:29.663 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:31:29.663 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:31:29.664 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:31:29.664 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:31:29.664 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:31:32.208 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
22:31:32.208 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:31:32.208 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
22:31:37.255 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:31:37.255 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:31:37.255 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2334,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Mon Feb 25 22:09:22 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 22:31:37','内网IP|0|0|内网IP|内网IP' )
22:31:37.376 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:31:37.376 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
22:31:37.376 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:36:18.668 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:36:18.668 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:36:18.668 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2335,'admin','获取在线用户信息',0,'cn.hu.system.controller.SessionController.online()','','127.0.0.1','2019-2-27 22:36:18','内网IP|0|0|内网IP|内网IP' )
22:36:20.152 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.selectByExample_COUNT
22:36:20.152 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:36:20.152 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION FROM t_log order by create_time desc
22:36:20.157 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.selectByExample
22:36:20.157 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:36:20.157 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION FROM t_log order by create_time desc
22:36:40.407 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:36:40.407 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:36:40.407 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:36:40.408 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:36:40.408 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:36:40.408 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:36:40.410 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:36:40.410 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:36:40.410 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:36:40.440 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:36:40.440 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:36:40.440 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2336,'admin','获取用户信息',2,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 22:36:40','内网IP|0|0|内网IP|内网IP' )
22:37:08.203 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:37:08.203 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:37:08.203 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:37:08.204 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:37:08.204 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:37:08.204 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:37:08.207 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:37:08.207 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:37:08.207 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:37:08.231 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:37:08.231 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:37:08.231 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2337,'admin','获取用户信息',1,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 22:37:08','内网IP|0|0|内网IP|内网IP' )
22:41:20.985 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
22:41:20.986 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Wed Feb 27 22:13:49 CST 2019]; root of context hierarchy
22:41:20.989 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
22:41:20.989 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
22:41:20.990 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
22:41:20.990 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
22:41:20.990 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
22:41:20.991 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
22:41:20.996 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
22:41:20.997 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
22:41:20.999 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
22:41:21.005 febs [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
22:42:00.013 febs [main] INFO  cn.hu.Application - Starting Application on DESKTOP-4ODT231 with PID 12920 (E:\masha\ms\target\classes started by googlebrain in E:\masha\ms)
22:42:00.016 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
22:42:00.083 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Wed Feb 27 22:42:00 CST 2019]; root of context hierarchy
22:42:00.760 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\masha\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
22:42:00.911 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
22:42:01.160 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
22:42:01.220 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
22:42:01.221 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
22:42:01.222 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
22:42:01.222 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
22:42:01.222 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
22:42:01.222 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
22:42:01.223 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
22:42:01.270 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$7afdf8cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.304 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
22:42:01.313 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.380 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.452 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
22:42:01.454 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
22:42:01.465 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.473 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.483 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$4ecbe99d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.518 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b0ef3fc2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.549 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$e4685d51] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.553 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$e34689b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.845 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.851 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$2a810495] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.856 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.862 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e3c390f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.868 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$ca9b3534] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:01.871 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
22:42:02.010 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.018 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.045 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.305 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
22:42:02.305 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.342 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.525 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.533 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.536 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.539 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.550 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.552 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.560 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.586 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.623 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.625 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy103] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.634 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.635 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.647 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.663 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.698 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.700 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.711 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.729 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.751 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:02.787 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:42:03.131 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
22:42:03.140 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
22:42:03.148 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
22:42:03.149 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
22:42:03.151 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_201/bin/server;C:/Program Files/Java/jre1.8.0_201/bin;C:/Program Files/Java/jre1.8.0_201/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\apache-tomcat-7.0.90\bin;C:\Program Files\TortoiseGit\bin;C:\Users\googlebrain\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Users\googlebrain\AppData\Local\GitHubDesktop\bin;C:\eclipse-jee-photon-R-win32-x86_64\eclipse;;.]
22:42:03.242 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
22:42:03.242 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3159 ms
22:42:03.376 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
22:42:03.376 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
22:42:03.376 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
22:42:03.377 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
22:42:03.377 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
22:42:03.377 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
22:42:03.377 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
22:42:03.377 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
22:42:03.378 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
22:42:03.392 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
22:42:04.012 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
22:42:04.154 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:42:04.357 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Wed Feb 27 22:42:00 CST 2019]; root of context hierarchy
22:42:04.406 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
22:42:04.408 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
22:42:04.412 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
22:42:04.413 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.413 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
22:42:04.414 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
22:42:04.414 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.414 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
22:42:04.415 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
22:42:04.415 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
22:42:04.415 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
22:42:04.415 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
22:42:04.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
22:42:04.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
22:42:04.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
22:42:04.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
22:42:04.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
22:42:04.417 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.417 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.418 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
22:42:04.418 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
22:42:04.419 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
22:42:04.419 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
22:42:04.419 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
22:42:04.419 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
22:42:04.419 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
22:42:04.420 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
22:42:04.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment]}" onto public java.lang.String cn.hu.system.controller.CommentController.index(org.springframework.ui.Model)
22:42:04.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.CommentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkUserName]}" onto public boolean cn.hu.system.controller.CommentController.checkUserName(java.lang.String,java.lang.String)
22:42:04.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userExcel(cn.hu.system.domain.User)
22:42:04.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.422 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userCsv(cn.hu.system.domain.User)
22:42:04.422 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateTheme(cn.hu.system.domain.User)
22:42:04.422 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkPassword]}" onto public boolean cn.hu.system.controller.CommentController.checkPassword(java.lang.String)
22:42:04.422 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUser(java.lang.Long)
22:42:04.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.regist(cn.hu.system.domain.User)
22:42:04.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updatePassword(java.lang.String)
22:42:04.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/profile]}" onto public java.lang.String cn.hu.system.controller.CommentController.profileIndex(org.springframework.ui.Model)
22:42:04.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.deleteUsers(java.lang.String)
22:42:04.423 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUserProfile(java.lang.Long)
22:42:04.424 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.changeAvatar(java.lang.String)
22:42:04.424 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.424 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.425 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
22:42:04.425 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
22:42:04.425 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
22:42:04.425 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
22:42:04.425 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
22:42:04.425 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
22:42:04.426 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
22:42:04.426 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
22:42:04.426 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
22:42:04.426 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
22:42:04.427 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
22:42:04.427 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
22:42:04.427 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
22:42:04.427 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
22:42:04.427 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
22:42:04.428 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
22:42:04.428 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
22:42:04.428 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
22:42:04.429 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
22:42:04.429 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
22:42:04.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
22:42:04.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
22:42:04.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
22:42:04.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
22:42:04.430 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
22:42:04.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
22:42:04.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
22:42:04.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
22:42:04.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
22:42:04.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
22:42:04.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
22:42:04.431 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.432 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.432 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
22:42:04.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
22:42:04.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
22:42:04.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.Dept)
22:42:04.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.Dept)
22:42:04.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
22:42:04.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.Dept)
22:42:04.433 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.Dept)
22:42:04.434 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
22:42:04.434 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.Dept)
22:42:04.435 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
22:42:04.436 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.436 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
22:42:04.436 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
22:42:04.436 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.436 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
22:42:04.436 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
22:42:04.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
22:42:04.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
22:42:04.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
22:42:04.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
22:42:04.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
22:42:04.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
22:42:04.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
22:42:04.437 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
22:42:04.438 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.438 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.438 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
22:42:04.439 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
22:42:04.439 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
22:42:04.439 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
22:42:04.439 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
22:42:04.441 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
22:42:04.441 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
22:42:04.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
22:42:04.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
22:42:04.442 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
22:42:04.443 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
22:42:04.444 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
22:42:04.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
22:42:04.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
22:42:04.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
22:42:04.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
22:42:04.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
22:42:04.446 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
22:42:04.446 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
22:42:04.446 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
22:42:04.446 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
22:42:04.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
22:42:04.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
22:42:04.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
22:42:04.447 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
22:42:04.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
22:42:04.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
22:42:04.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
22:42:04.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
22:42:04.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
22:42:04.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
22:42:04.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
22:42:04.449 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
22:42:04.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
22:42:04.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
22:42:04.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
22:42:04.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
22:42:04.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
22:42:04.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.450 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.451 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
22:42:04.452 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.453 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
22:42:04.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
22:42:04.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
22:42:04.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
22:42:04.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
22:42:04.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
22:42:04.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
22:42:04.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
22:42:04.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
22:42:04.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
22:42:04.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
22:42:04.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
22:42:04.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.456 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.457 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.index(org.springframework.ui.Model)
22:42:04.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.ReceiveController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkUserName]}" onto public boolean cn.hu.system.controller.ReceiveController.checkUserName(java.lang.String,java.lang.String)
22:42:04.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userExcel(cn.hu.system.domain.User)
22:42:04.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.458 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userCsv(cn.hu.system.domain.User)
22:42:04.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateTheme(cn.hu.system.domain.User)
22:42:04.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkPassword]}" onto public boolean cn.hu.system.controller.ReceiveController.checkPassword(java.lang.String)
22:42:04.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUser(java.lang.Long)
22:42:04.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.regist(cn.hu.system.domain.User)
22:42:04.459 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updatePassword(java.lang.String)
22:42:04.460 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/profile]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.profileIndex(org.springframework.ui.Model)
22:42:04.460 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.deleteUsers(java.lang.String)
22:42:04.460 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUserProfile(java.lang.Long)
22:42:04.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.changeAvatar(java.lang.String)
22:42:04.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.461 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
22:42:04.462 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.463 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
22:42:04.464 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
22:42:04.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
22:42:04.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
22:42:04.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
22:42:04.468 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
22:42:04.469 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
22:42:04.470 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
22:42:04.470 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
22:42:04.470 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
22:42:04.471 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
22:42:04.471 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
22:42:04.471 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.471 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.472 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
22:42:04.473 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
22:42:04.473 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
22:42:04.473 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
22:42:04.473 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
22:42:04.473 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
22:42:04.473 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
22:42:04.473 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
22:42:04.473 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
22:42:04.474 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
22:42:04.474 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
22:42:04.474 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
22:42:04.474 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
22:42:04.474 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
22:42:04.474 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
22:42:04.474 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
22:42:04.474 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
22:42:04.475 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
22:42:04.475 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
22:42:04.475 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
22:42:04.475 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
22:42:04.475 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
22:42:04.475 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
22:42:04.477 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.index(org.springframework.ui.Model)
22:42:04.477 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StatisticsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.477 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkUserName]}" onto public boolean cn.hu.system.controller.StatisticsController.checkUserName(java.lang.String,java.lang.String)
22:42:04.477 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userExcel(cn.hu.system.domain.User)
22:42:04.477 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.477 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userCsv(cn.hu.system.domain.User)
22:42:04.478 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateTheme(cn.hu.system.domain.User)
22:42:04.478 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkPassword]}" onto public boolean cn.hu.system.controller.StatisticsController.checkPassword(java.lang.String)
22:42:04.478 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUser(java.lang.Long)
22:42:04.478 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.regist(cn.hu.system.domain.User)
22:42:04.478 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updatePassword(java.lang.String)
22:42:04.478 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/profile]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.profileIndex(org.springframework.ui.Model)
22:42:04.478 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.deleteUsers(java.lang.String)
22:42:04.479 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUserProfile(java.lang.Long)
22:42:04.479 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.changeAvatar(java.lang.String)
22:42:04.479 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.479 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.480 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage]}" onto public java.lang.String cn.hu.system.controller.StorageController.index(org.springframework.ui.Model)
22:42:04.481 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StorageController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.481 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkUserName]}" onto public boolean cn.hu.system.controller.StorageController.checkUserName(java.lang.String,java.lang.String)
22:42:04.481 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userExcel(cn.hu.system.domain.User)
22:42:04.481 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userCsv(cn.hu.system.domain.User)
22:42:04.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateTheme(cn.hu.system.domain.User)
22:42:04.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkPassword]}" onto public boolean cn.hu.system.controller.StorageController.checkPassword(java.lang.String)
22:42:04.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUser(java.lang.Long)
22:42:04.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.regist(cn.hu.system.domain.User)
22:42:04.482 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updatePassword(java.lang.String)
22:42:04.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/profile]}" onto public java.lang.String cn.hu.system.controller.StorageController.profileIndex(org.springframework.ui.Model)
22:42:04.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.deleteUsers(java.lang.String)
22:42:04.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUserProfile(java.lang.Long)
22:42:04.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.changeAvatar(java.lang.String)
22:42:04.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.483 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.485 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
22:42:04.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
22:42:04.487 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
22:42:04.487 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
22:42:04.487 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
22:42:04.487 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
22:42:04.487 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
22:42:04.487 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.487 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index(org.springframework.ui.Model)
22:42:04.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:42:04.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkUserName]}" onto public boolean cn.hu.system.controller.WithDrawController.checkUserName(java.lang.String,java.lang.String)
22:42:04.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userExcel(cn.hu.system.domain.User)
22:42:04.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userCsv(cn.hu.system.domain.User)
22:42:04.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateTheme(cn.hu.system.domain.User)
22:42:04.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkPassword]}" onto public boolean cn.hu.system.controller.WithDrawController.checkPassword(java.lang.String)
22:42:04.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUser(java.lang.Long)
22:42:04.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.regist(cn.hu.system.domain.User)
22:42:04.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updatePassword(java.lang.String)
22:42:04.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/profile]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.profileIndex(org.springframework.ui.Model)
22:42:04.489 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteUsers(java.lang.String)
22:42:04.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUserProfile(java.lang.Long)
22:42:04.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.changeAvatar(java.lang.String)
22:42:04.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:42:04.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUserProfile(cn.hu.system.domain.User)
22:42:04.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
22:42:04.490 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
22:42:04.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
22:42:04.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
22:42:04.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
22:42:04.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
22:42:04.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
22:42:04.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
22:42:04.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
22:42:04.493 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
22:42:04.493 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
22:42:04.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
22:42:04.496 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
22:42:04.555 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:42:04.555 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:42:04.576 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
22:42:04.696 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
22:42:05.178 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
22:42:05.187 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
22:42:05.187 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
22:42:05.187 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
22:42:05.188 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

22:42:05.188 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
22:42:05.188 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
22:42:05.188 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@53125718
22:42:05.642 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
22:42:05.644 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
22:42:05.645 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
22:42:05.651 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
22:42:05.652 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
22:42:05.657 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
22:42:05.657 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
22:42:05.657 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
22:42:05.665 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
22:42:05.673 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
22:42:05.688 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
22:42:05.692 febs [main] INFO  cn.hu.Application - Started Application in 6.023 seconds (JVM running for 6.627)
22:42:05.699 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-02-27 22:42:05.699 》》》》》》
22:42:41.412 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
22:42:41.412 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
22:42:41.440 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
22:42:41.453 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
22:42:41.870 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:42:41.870 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 290 ms
22:42:41.870 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2338,'admin','访问系统',3,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Mon Feb 25 22:09:22 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"','127.0.0.1','2019-2-27 22:42:41','内网IP|0|0|内网IP|内网IP' )
22:42:42.427 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:42:42.427 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 33 ms
22:42:42.427 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:43:05.780 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:43:05.780 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
22:43:05.780 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2339,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Wed Feb 20 23:01:48 CST 2019, lastLoginTime=Mon Feb 25 22:09:22 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-27 22:43:05','内网IP|0|0|内网IP|内网IP' )
22:43:06.015 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:43:06.016 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 37 ms
22:43:06.016 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:43:08.179 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:43:08.179 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:43:08.179 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:43:08.227 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:43:08.227 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:43:08.227 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:43:08.230 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:43:08.230 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:43:08.230 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:43:08.272 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:43:08.272 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
22:43:08.272 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2340,'admin','获取用户信息',49,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-27 22:43:08','内网IP|0|0|内网IP|内网IP' )
22:54:00.963 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
22:54:00.963 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Wed Feb 27 22:42:00 CST 2019]; root of context hierarchy
22:54:00.967 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
22:54:00.967 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
22:54:00.967 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
22:54:00.967 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
22:54:00.967 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
22:54:00.967 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
22:54:00.974 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
22:54:00.974 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
22:54:00.974 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
22:54:00.984 febs [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
