00:02:10.640 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:02:10.667 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
00:02:10.667 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2349,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:52:02 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 0:02:10','内网IP|0|0|内网IP|内网IP' )
00:02:10.815 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:02:10.816 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 43 ms
00:02:10.816 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:02:12.880 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:02:12.880 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 17 ms
00:02:12.880 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2350,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 0:02:12','内网IP|0|0|内网IP|内网IP' )
00:02:12.930 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
00:02:12.930 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:02:12.930 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:02:12.934 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
00:02:12.934 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:02:12.934 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:02:17.936 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:02:17.942 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
00:02:17.942 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:02:56.440 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:02:56.440 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
00:02:56.445 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:03:30.916 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:03:30.916 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
00:03:30.916 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2351,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:52:02 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 0:03:30','内网IP|0|0|内网IP|内网IP' )
00:03:31.059 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:03:31.059 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 41 ms
00:03:31.059 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:03:33.182 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:03:33.182 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 15 ms
00:03:33.182 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2352,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 0:03:33','内网IP|0|0|内网IP|内网IP' )
00:03:33.233 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
00:03:33.233 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:03:33.233 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:03:33.239 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
00:03:33.239 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
00:03:33.239 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:03:35.633 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:03:35.633 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:03:35.633 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:04:45.851 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:04:45.851 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:04:45.851 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:04:48.338 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:04:48.338 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
00:04:48.338 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2353,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:52:02 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 0:04:48','内网IP|0|0|内网IP|内网IP' )
00:04:48.477 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:04:48.477 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 35 ms
00:04:48.477 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:04:50.781 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:04:50.781 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 17 ms
00:04:50.781 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2354,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 0:04:50','内网IP|0|0|内网IP|内网IP' )
00:04:50.834 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
00:04:50.834 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:04:50.834 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:04:50.842 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
00:04:50.843 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
00:04:50.843 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:04:53.753 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:04:53.753 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:04:53.753 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:05:31.450 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:05:31.450 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
00:05:31.450 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2355,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:52:02 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 0:05:31','内网IP|0|0|内网IP|内网IP' )
00:05:31.624 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:05:31.624 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 46 ms
00:05:31.625 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:05:33.648 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:05:33.648 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
00:05:33.648 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2356,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 0:05:33','内网IP|0|0|内网IP|内网IP' )
00:05:33.689 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
00:05:33.689 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:05:33.689 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:05:33.692 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
00:05:33.692 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:05:33.692 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:05:35.830 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:05:35.830 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:05:35.830 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:05:41.915 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:05:41.915 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:05:41.915 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:07:27.046 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:07:27.046 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 21 ms
00:07:27.046 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2357,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:52:02 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 0:07:27','内网IP|0|0|内网IP|内网IP' )
00:07:27.221 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:07:27.221 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 71 ms
00:07:27.221 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:07:29.454 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:07:29.454 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
00:07:29.454 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2358,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 0:07:29','内网IP|0|0|内网IP|内网IP' )
00:07:29.498 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
00:07:29.498 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:07:29.498 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:07:29.501 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
00:07:29.501 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:07:29.501 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:07:31.834 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:07:31.834 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
00:07:31.834 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:10:23.531 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:10:23.531 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 31 ms
00:10:23.531 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2359,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:52:02 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 0:10:23','内网IP|0|0|内网IP|内网IP' )
00:10:23.815 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:10:23.815 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 42 ms
00:10:23.815 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:10:26.200 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:10:26.200 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
00:10:26.200 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2360,'admin','获取字典信息',1,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 0:10:26','内网IP|0|0|内网IP|内网IP' )
00:10:26.248 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
00:10:26.248 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:10:26.248 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:10:26.256 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
00:10:26.256 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
00:10:26.256 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:10:28.543 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:10:28.544 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:10:28.544 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:10:52.800 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:10:52.800 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:10:52.800 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:10:58.382 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:10:58.382 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 21 ms
00:10:58.382 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2361,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:52:02 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 0:10:58','内网IP|0|0|内网IP|内网IP' )
00:10:58.691 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:10:58.692 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 50 ms
00:10:58.692 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:11:01.994 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:11:01.994 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 15 ms
00:11:01.994 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2362,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 0:11:01','内网IP|0|0|内网IP|内网IP' )
00:11:02.069 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
00:11:02.069 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
00:11:02.069 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:11:02.078 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
00:11:02.078 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
00:11:02.078 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:11:04.587 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:11:04.587 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:11:04.587 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:11:28.037 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:11:28.037 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
00:11:28.038 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2363,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:52:02 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 0:11:28','内网IP|0|0|内网IP|内网IP' )
00:11:28.347 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
00:11:28.347 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 39 ms
00:11:28.347 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
00:11:31.323 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
00:11:31.323 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 24 ms
00:11:31.323 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2364,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 0:11:31','内网IP|0|0|内网IP|内网IP' )
00:11:31.376 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
00:11:31.376 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:11:31.376 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:11:31.379 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
00:11:31.379 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
00:11:31.379 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
00:11:33.993 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:11:33.993 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
00:11:33.993 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
00:11:38.920 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
00:11:38.920 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
00:11:38.920 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
21:19:14.273 febs [main] INFO  cn.hu.Application - Starting Application on DESKTOP-4ODT231 with PID 10748 (E:\miaos\ms\target\classes started by googlebrain in E:\miaos\ms)
21:19:14.283 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
21:19:14.512 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57af006c: startup date [Tue Mar 05 21:19:14 CST 2019]; root of context hierarchy
21:19:16.379 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\miaos\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
21:19:16.651 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
21:19:17.392 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
21:19:17.612 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
21:19:17.618 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
21:19:17.618 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
21:19:17.622 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
21:19:17.622 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
21:19:17.622 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
21:19:17.622 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
21:19:17.763 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$919d8dc1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:17.842 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
21:19:17.857 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:18.001 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:18.228 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
21:19:18.232 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
21:19:18.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:18.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:18.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$656b7e91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:18.485 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c78ed4b6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:18.663 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$fb07f245] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:18.682 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$f9e61eac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:19.654 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:19.674 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$41209989] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:19.710 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:19.731 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$fa6325e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:19.740 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$e13aca28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:19.745 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
21:19:19.874 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:19.962 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:20.180 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:21.453 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
21:19:21.453 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:21.690 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:22.665 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:22.707 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:22.713 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:22.720 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:22.762 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:22.768 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:22.795 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:22.905 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.068 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.074 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy103] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.097 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.107 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.135 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.192 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.266 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.271 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.282 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.339 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.407 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.494 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.515 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:23.565 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
21:19:24.517 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
21:19:24.560 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
21:19:24.602 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
21:19:24.602 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
21:19:24.623 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Users\googlebrain\AppData\Local\MyEclipse 2017\binary\com.sun.java.jdk8.win32.x86_64_1.8.0.v112\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\apache-tomcat-7.0.90\bin;C:\Program Files\TortoiseGit\bin;C:\Users\googlebrain\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;.]
21:19:24.898 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
21:19:24.898 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 10386 ms
21:19:25.301 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
21:19:25.301 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
21:19:25.301 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
21:19:25.301 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
21:19:25.301 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
21:19:25.301 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
21:19:25.303 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
21:19:25.303 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
21:19:25.315 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
21:19:25.367 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
21:19:27.820 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
21:19:28.151 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
21:19:29.202 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57af006c: startup date [Tue Mar 05 21:19:14 CST 2019]; root of context hierarchy
21:19:29.415 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
21:19:29.421 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
21:19:29.443 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
21:19:29.445 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:29.446 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.448 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
21:19:29.451 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
21:19:29.453 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
21:19:29.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
21:19:29.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
21:19:29.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
21:19:29.454 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
21:19:29.455 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
21:19:29.465 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
21:19:29.484 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
21:19:29.486 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
21:19:29.488 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
21:19:29.491 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.495 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
21:19:29.498 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
21:19:29.500 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
21:19:29.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
21:19:29.505 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
21:19:29.507 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
21:19:29.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
21:19:29.511 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
21:19:29.514 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
21:19:29.520 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment]}" onto public java.lang.String cn.hu.system.controller.CommentController.index(org.springframework.ui.Model)
21:19:29.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.CommentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:29.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.539 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkUserName]}" onto public boolean cn.hu.system.controller.CommentController.checkUserName(java.lang.String,java.lang.String)
21:19:29.539 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.regist(cn.hu.system.domain.User)
21:19:29.540 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateTheme(cn.hu.system.domain.User)
21:19:29.541 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.deleteUsers(java.lang.String)
21:19:29.541 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkPassword]}" onto public boolean cn.hu.system.controller.CommentController.checkPassword(java.lang.String)
21:19:29.541 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/profile]}" onto public java.lang.String cn.hu.system.controller.CommentController.profileIndex(org.springframework.ui.Model)
21:19:29.541 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updatePassword(java.lang.String)
21:19:29.546 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUserProfile(java.lang.Long)
21:19:29.547 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userCsv(cn.hu.system.domain.User)
21:19:29.548 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.changeAvatar(java.lang.String)
21:19:29.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUser(java.lang.Long)
21:19:29.550 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userExcel(cn.hu.system.domain.User)
21:19:29.551 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.551 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUserProfile(cn.hu.system.domain.User)
21:19:29.553 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
21:19:29.554 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
21:19:29.555 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
21:19:29.556 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
21:19:29.556 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
21:19:29.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
21:19:29.563 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
21:19:29.563 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
21:19:29.563 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
21:19:29.563 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
21:19:29.564 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
21:19:29.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
21:19:29.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
21:19:29.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
21:19:29.565 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
21:19:29.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
21:19:29.566 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
21:19:29.567 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
21:19:29.568 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
21:19:29.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:29.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.570 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
21:19:29.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
21:19:29.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
21:19:29.571 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
21:19:29.574 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
21:19:29.574 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
21:19:29.574 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
21:19:29.575 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
21:19:29.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
21:19:29.576 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
21:19:29.582 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
21:19:29.595 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
21:19:29.596 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.598 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
21:19:29.601 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
21:19:29.607 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.GoodsCategory)
21:19:29.608 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
21:19:29.610 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.GoodsCategory)
21:19:29.611 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.GoodsCategory> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.GoodsCategory)
21:19:29.626 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
21:19:29.640 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.GoodsCategory)
21:19:29.641 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.GoodsCategory)
21:19:29.660 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
21:19:29.660 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
21:19:29.679 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
21:19:29.681 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:29.683 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.683 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
21:19:29.683 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
21:19:29.684 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
21:19:29.684 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
21:19:29.684 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
21:19:29.684 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
21:19:29.684 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
21:19:29.686 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
21:19:29.688 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
21:19:29.689 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
21:19:29.690 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
21:19:29.690 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
21:19:29.690 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.691 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
21:19:29.694 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
21:19:29.694 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
21:19:29.695 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
21:19:29.697 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
21:19:29.698 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
21:19:29.726 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
21:19:29.727 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
21:19:29.735 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
21:19:29.739 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
21:19:29.742 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
21:19:29.744 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
21:19:29.798 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
21:19:29.799 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
21:19:29.799 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
21:19:29.800 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
21:19:29.802 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
21:19:29.803 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
21:19:29.804 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
21:19:29.804 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
21:19:29.804 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
21:19:29.804 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
21:19:29.806 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
21:19:29.807 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
21:19:29.807 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
21:19:29.808 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
21:19:29.809 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
21:19:29.809 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:29.809 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.809 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
21:19:29.811 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
21:19:29.811 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
21:19:29.811 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
21:19:29.812 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
21:19:29.812 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
21:19:29.812 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
21:19:29.813 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
21:19:29.814 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
21:19:29.816 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
21:19:29.817 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
21:19:29.820 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
21:19:29.821 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.823 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
21:19:29.825 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
21:19:29.827 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Rebate)
21:19:29.829 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.831 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
21:19:29.844 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
21:19:29.848 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
21:19:29.874 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
21:19:29.923 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
21:19:29.924 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
21:19:29.926 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
21:19:29.929 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
21:19:29.930 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
21:19:29.933 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
21:19:29.935 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
21:19:29.937 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
21:19:29.937 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.937 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
21:19:29.998 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.index(org.springframework.ui.Model)
21:19:29.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.ReceiveController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:29.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:29.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkUserName]}" onto public boolean cn.hu.system.controller.ReceiveController.checkUserName(java.lang.String,java.lang.String)
21:19:29.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.regist(cn.hu.system.domain.User)
21:19:29.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateTheme(cn.hu.system.domain.User)
21:19:29.999 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.deleteUsers(java.lang.String)
21:19:30.000 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkPassword]}" onto public boolean cn.hu.system.controller.ReceiveController.checkPassword(java.lang.String)
21:19:30.000 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/profile]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.profileIndex(org.springframework.ui.Model)
21:19:30.000 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updatePassword(java.lang.String)
21:19:30.000 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUserProfile(java.lang.Long)
21:19:30.000 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userCsv(cn.hu.system.domain.User)
21:19:30.001 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getReceive]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUser(java.lang.Integer)
21:19:30.001 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userExcel(cn.hu.system.domain.User)
21:19:30.001 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.002 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
21:19:30.002 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Recharge)
21:19:30.002 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.002 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
21:19:30.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
21:19:30.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
21:19:30.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
21:19:30.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
21:19:30.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
21:19:30.027 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
21:19:30.031 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
21:19:30.031 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
21:19:30.033 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
21:19:30.033 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
21:19:30.033 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
21:19:30.033 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.033 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
21:19:30.041 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
21:19:30.041 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
21:19:30.041 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
21:19:30.041 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
21:19:30.041 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
21:19:30.041 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
21:19:30.041 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
21:19:30.045 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
21:19:30.045 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
21:19:30.045 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
21:19:30.045 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
21:19:30.045 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
21:19:30.045 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
21:19:30.047 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.index(org.springframework.ui.Model)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StatisticsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkUserName]}" onto public boolean cn.hu.system.controller.StatisticsController.checkUserName(java.lang.String,java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.regist(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateTheme(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.deleteUsers(java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkPassword]}" onto public boolean cn.hu.system.controller.StatisticsController.checkPassword(java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/profile]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.profileIndex(org.springframework.ui.Model)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updatePassword(java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUserProfile(java.lang.Long)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userCsv(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.changeAvatar(java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUser(java.lang.Long)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userExcel(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUserProfile(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage]}" onto public java.lang.String cn.hu.system.controller.StorageController.index(org.springframework.ui.Model)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StorageController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkUserName]}" onto public boolean cn.hu.system.controller.StorageController.checkUserName(java.lang.String,java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.regist(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateTheme(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.deleteUsers(java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkPassword]}" onto public boolean cn.hu.system.controller.StorageController.checkPassword(java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/profile]}" onto public java.lang.String cn.hu.system.controller.StorageController.profileIndex(org.springframework.ui.Model)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updatePassword(java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUserProfile(java.lang.Long)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userCsv(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.changeAvatar(java.lang.String)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUser(java.lang.Long)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userExcel(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUserProfile(cn.hu.system.domain.User)
21:19:30.050 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
21:19:30.058 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
21:19:30.069 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.WithDraw)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.dictCsv(cn.hu.system.domain.Dict)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteDicts(java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.dictExcel(cn.hu.system.domain.Dict)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getDict(cn.hu.system.domain.WithDraw)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addDict(cn.hu.system.domain.Dict)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateDict(cn.hu.system.domain.Dict)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
21:19:30.073 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
21:19:30.079 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
21:19:30.081 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
21:19:30.200 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
21:19:30.200 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
21:19:30.242 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
21:19:30.580 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
21:19:32.923 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
21:19:32.966 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
21:19:32.966 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
21:19:32.980 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
21:19:32.989 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

21:19:32.989 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
21:19:32.989 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
21:19:32.994 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@2fc7fa6e
21:19:34.462 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
21:19:34.470 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
21:19:34.470 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
21:19:34.480 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
21:19:34.482 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
21:19:34.490 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
21:19:34.490 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
21:19:34.490 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
21:19:34.507 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
21:19:34.528 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
21:19:34.550 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
21:19:34.558 febs [main] INFO  cn.hu.Application - Started Application in 21.33 seconds (JVM running for 22.525)
21:19:34.574 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-03-05 21:19:34.574 》》》》》》
21:19:37.926 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
21:19:37.926 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
21:19:37.990 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
21:19:38.030 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
21:19:44.321 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
21:19:44.321 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 126 ms
21:19:44.321 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,FRONT,BACK,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
21:19:44.354 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
21:19:44.354 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
21:19:44.355 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-3-5 21:19:44' WHERE ( lower(username)= 'admin' )
21:19:44.509 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:19:44.509 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 24 ms
21:19:44.509 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2365,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:57:45 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 21:19:44','内网IP|0|0|内网IP|内网IP' )
21:19:46.010 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
21:19:46.010 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 44 ms
21:19:46.010 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
21:19:50.349 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
21:19:50.349 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
21:19:50.349 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
21:19:50.355 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
21:19:50.355 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:19:50.355 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
21:19:52.432 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:19:52.432 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
21:19:52.432 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:19:52.463 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:19:52.463 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:19:52.463 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:19:52.465 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:19:52.465 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:19:52.465 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:19:52.534 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample_COUNT
21:19:52.534 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:19:52.534 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:52.542 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample
21:19:52.542 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:19:52.542 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:52.556 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:19:52.556 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
21:19:52.556 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2366,'admin','获取用户信息',27,'cn.hu.system.controller.RechargeController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  recharge: "cn.hu.system.domain.Recharge@63fce777"','127.0.0.1','2019-3-5 21:19:52','内网IP|0|0|内网IP|内网IP' )
21:19:58.987 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample_COUNT
21:19:58.987 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:19:58.987 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:58.990 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample
21:19:58.990 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:19:58.990 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.004 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:19:59.005 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:19:59.005 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2367,'admin','获取用户信息',7,'cn.hu.system.controller.RechargeController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  recharge: "cn.hu.system.domain.Recharge@1885c9e5"','127.0.0.1','2019-3-5 21:19:59','内网IP|0|0|内网IP|内网IP' )
21:19:59.510 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample_COUNT
21:19:59.510 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
21:19:59.510 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.515 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample
21:19:59.516 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:19:59.516 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.570 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:19:59.570 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 24 ms
21:19:59.570 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2368,'admin','获取用户信息',20,'cn.hu.system.controller.RechargeController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  recharge: "cn.hu.system.domain.Recharge@39e0f2e2"','127.0.0.1','2019-3-5 21:19:59','内网IP|0|0|内网IP|内网IP' )
21:19:59.669 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample_COUNT
21:19:59.670 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:19:59.670 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.674 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample
21:19:59.674 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:19:59.674 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.691 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:19:59.691 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
21:19:59.691 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2369,'admin','获取用户信息',10,'cn.hu.system.controller.RechargeController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  recharge: "cn.hu.system.domain.Recharge@77d05d"','127.0.0.1','2019-3-5 21:19:59','内网IP|0|0|内网IP|内网IP' )
21:19:59.783 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample_COUNT
21:19:59.783 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:19:59.783 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.788 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample
21:19:59.788 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
21:19:59.788 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.804 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:19:59.804 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
21:19:59.804 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2370,'admin','获取用户信息',15,'cn.hu.system.controller.RechargeController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  recharge: "cn.hu.system.domain.Recharge@c0bc37f"','127.0.0.1','2019-3-5 21:19:59','内网IP|0|0|内网IP|内网IP' )
21:19:59.914 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample_COUNT
21:19:59.914 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
21:19:59.915 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.921 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample
21:19:59.921 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:19:59.921 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:19:59.939 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:19:59.939 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
21:19:59.939 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2371,'admin','获取用户信息',22,'cn.hu.system.controller.RechargeController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  recharge: "cn.hu.system.domain.Recharge@5a69cdfe"','127.0.0.1','2019-3-5 21:19:59','内网IP|0|0|内网IP|内网IP' )
21:20:00.838 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:20:00.838 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
21:20:00.839 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2372,'admin','获取字典信息',4,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 21:20:00','内网IP|0|0|内网IP|内网IP' )
21:20:00.967 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
21:20:00.967 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
21:20:00.967 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:20:01.019 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
21:20:01.019 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 51 ms
21:20:01.019 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:20:05.376 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectById
21:20:05.377 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:20:05.377 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select * from with_draw where 1=1 AND id = 1
21:20:10.245 febs [http-nio-8080-exec-9] INFO  o.s.b.f.xml.XmlBeanDefinitionReader - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
21:20:10.309 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:20:10.309 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
21:20:10.309 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2373,'admin','修改字典',95,'cn.hu.system.controller.WithDrawController.updateDict()','dict: "Dict{dictId=null, keyy=null, valuee=null, tableName=null, fieldName=null, des=null}"','127.0.0.1','2019-3-5 21:20:10','内网IP|0|0|内网IP|内网IP' )
21:20:26.875 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:20:26.876 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:20:26.876 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:20:26.882 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:20:26.882 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
21:20:26.882 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:20:26.885 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:20:26.885 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:20:26.885 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:20:26.939 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample_COUNT
21:20:26.940 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
21:20:26.940 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:20:26.945 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample
21:20:26.945 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
21:20:26.945 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:20:26.976 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:20:26.976 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:20:26.976 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2374,'admin','获取用户信息',31,'cn.hu.system.controller.RebateController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  rebate: "cn.hu.system.domain.Rebate@366b4068"','127.0.0.1','2019-3-5 21:20:26','内网IP|0|0|内网IP|内网IP' )
21:20:30.720 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:20:30.720 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 17 ms
21:20:30.720 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2375,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 21:20:30','内网IP|0|0|内网IP|内网IP' )
21:20:30.758 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
21:20:30.758 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:20:30.758 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:20:30.772 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
21:20:30.772 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
21:20:30.772 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:23:24.621 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:24.621 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
21:23:24.621 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2376,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:57:45 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 21:23:24','内网IP|0|0|内网IP|内网IP' )
21:23:24.890 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
21:23:24.890 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 29 ms
21:23:24.890 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
21:23:28.000 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:23:28.001 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:23:28.001 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:23:28.010 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:23:28.010 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
21:23:28.010 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:28.016 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:23:28.016 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:23:28.016 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:28.054 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample_COUNT
21:23:28.055 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:23:28.055 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:23:28.064 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RechargeMapper.selectByExample
21:23:28.064 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
21:23:28.064 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,rechargeamt,rechargeorderid,rechargestatus,rechargetime,rechargeupdatetime FROM recharge order by id
21:23:28.073 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:28.073 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:23:28.073 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2377,'admin','获取用户信息',18,'cn.hu.system.controller.RechargeController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  recharge: "cn.hu.system.domain.Recharge@78efdff7"','127.0.0.1','2019-3-5 21:23:28','内网IP|0|0|内网IP|内网IP' )
21:23:29.147 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:29.147 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:23:29.147 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2378,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 21:23:29','内网IP|0|0|内网IP|内网IP' )
21:23:29.185 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
21:23:29.185 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:23:29.185 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:23:29.189 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
21:23:29.189 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:23:29.189 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:23:30.674 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:23:30.674 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
21:23:30.674 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:23:30.690 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:23:30.690 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 20 ms
21:23:30.690 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:30.706 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:23:30.706 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
21:23:30.706 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:30.717 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample_COUNT
21:23:30.717 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
21:23:30.717 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:23:30.720 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample
21:23:30.720 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:23:30.720 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:23:30.731 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:30.731 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:23:30.731 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2379,'admin','获取用户信息',23,'cn.hu.system.controller.RebateController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  rebate: "cn.hu.system.domain.Rebate@252b78ed"','127.0.0.1','2019-3-5 21:23:30','内网IP|0|0|内网IP|内网IP' )
21:23:32.690 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:32.690 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
21:23:32.690 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2380,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 21:23:32','内网IP|0|0|内网IP|内网IP' )
21:23:32.721 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
21:23:32.721 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
21:23:32.721 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:23:32.727 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
21:23:32.727 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:23:32.727 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:23:33.661 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:33.661 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 14 ms
21:23:33.661 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2381,'admin','获取字典信息',0,'cn.hu.system.controller.WithDrawController.index()','','127.0.0.1','2019-3-5 21:23:33','内网IP|0|0|内网IP|内网IP' )
21:23:33.692 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample_COUNT
21:23:33.692 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:23:33.692 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:23:33.695 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.WithDrawMapper.selectByExample
21:23:33.695 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:23:33.695 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserid,backuserid,withdrawamt,withdrawmethod,withdrawtime,withdrawupdatetime,withdrawexamstatus,withdrawexamreason,withdrawstatus,withdraworderid FROM with_draw order by id
21:23:35.299 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:23:35.299 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:23:35.299 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:23:35.304 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:23:35.304 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:23:35.304 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:35.306 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:23:35.306 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:23:35.306 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:35.397 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:35.397 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:23:35.397 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2382,'admin','获取用户信息',43,'cn.hu.system.controller.OrdersController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-3-5 21:23:35','内网IP|0|0|内网IP|内网IP' )
21:23:37.073 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:23:37.073 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:23:37.073 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:37.074 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:23:37.074 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:23:37.074 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:23:37.077 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:23:37.077 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:23:37.077 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:37.141 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:37.141 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:23:37.141 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2383,'admin','获取用户信息',3,'cn.hu.system.controller.BackUserController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-3-5 21:23:37','内网IP|0|0|内网IP|内网IP' )
21:23:45.655 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:23:45.655 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
21:23:45.655 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:23:45.658 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:23:45.658 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
21:23:45.658 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:45.668 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:23:45.668 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
21:23:45.668 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:23:45.689 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample_COUNT
21:23:45.689 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:23:45.689 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:23:45.694 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample
21:23:45.694 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
21:23:45.694 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:23:45.704 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:23:45.704 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:23:45.704 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2384,'admin','获取用户信息',10,'cn.hu.system.controller.RebateController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  rebate: "cn.hu.system.domain.Rebate@60c12a26"','127.0.0.1','2019-3-5 21:23:45','内网IP|0|0|内网IP|内网IP' )
21:24:31.686 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:24:31.686 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
21:24:31.686 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2385,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:57:45 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 21:24:31','内网IP|0|0|内网IP|内网IP' )
21:24:31.916 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
21:24:31.916 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 29 ms
21:24:31.916 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
21:24:34.322 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:24:34.322 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:24:34.322 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:24:34.327 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:24:34.327 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:24:34.327 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:24:34.333 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:24:34.334 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
21:24:34.334 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:24:34.366 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample_COUNT
21:24:34.366 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:24:34.366 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:24:34.370 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample
21:24:34.371 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:24:34.371 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:24:34.380 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:24:34.380 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:24:34.380 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2386,'admin','获取用户信息',8,'cn.hu.system.controller.RebateController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  rebate: "cn.hu.system.domain.Rebate@2f62c007"','127.0.0.1','2019-3-5 21:24:34','内网IP|0|0|内网IP|内网IP' )
21:24:39.372 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
21:24:39.372 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:24:39.372 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = ?
21:26:25.857 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:26:25.857 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 19 ms
21:26:25.857 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2387,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:57:45 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 21:26:25','内网IP|0|0|内网IP|内网IP' )
21:26:25.994 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
21:26:25.994 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 43 ms
21:26:25.994 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
21:26:28.168 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:26:28.168 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:26:28.168 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:26:28.173 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:26:28.174 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
21:26:28.174 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:26:28.176 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:26:28.176 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:26:28.176 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:26:28.204 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample_COUNT
21:26:28.205 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:26:28.205 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:26:28.208 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample
21:26:28.208 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:26:28.208 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:26:28.229 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:26:28.229 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 16 ms
21:26:28.229 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2388,'admin','获取用户信息',9,'cn.hu.system.controller.RebateController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  rebate: "cn.hu.system.domain.Rebate@709a1885"','127.0.0.1','2019-3-5 21:26:28','内网IP|0|0|内网IP|内网IP' )
21:26:30.428 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
21:26:30.428 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:26:30.428 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = ?
21:27:02.318 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:27:02.318 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
21:27:02.318 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2389,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Mar 04 22:57:45 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-3-5 21:27:02','内网IP|0|0|内网IP|内网IP' )
21:27:02.459 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
21:27:02.460 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 37 ms
21:27:02.460 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
21:27:05.162 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:27:05.162 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:27:05.162 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:27:05.162 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:27:05.162 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:27:05.162 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:27:05.167 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:27:05.167 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
21:27:05.167 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:27:05.188 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample_COUNT
21:27:05.188 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:27:05.188 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:27:05.191 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RebateMapper.selectByExample
21:27:05.191 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
21:27:05.191 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT id,frontuserdetailsordersid,fromuserid,fromusername,fronuserphone,touserid,tousername,touserphone,rebateamt,createtime FROM rebate order by id
21:27:05.206 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:27:05.206 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
21:27:05.206 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2390,'admin','获取用户信息',7,'cn.hu.system.controller.RebateController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  rebate: "cn.hu.system.domain.Rebate@1a29bd3b"','127.0.0.1','2019-3-5 21:27:05','内网IP|0|0|内网IP|内网IP' )
21:27:08.123 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
21:27:08.123 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
21:27:08.123 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = ?
21:27:58.096 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
21:27:58.096 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
21:27:58.096 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
21:27:58.102 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
21:27:58.102 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
21:27:58.102 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:27:58.105 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
21:27:58.106 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
21:27:58.106 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
21:27:58.141 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
21:27:58.141 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
21:27:58.141 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2391,'admin','获取用户信息',1,'cn.hu.system.controller.OrdersController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-3-5 21:27:58','内网IP|0|0|内网IP|内网IP' )
21:33:20.642 febs [RMI TCP Connection(2)-192.168.3.113] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
21:33:20.646 febs [RMI TCP Connection(2)-192.168.3.113] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@57af006c: startup date [Tue Mar 05 21:19:14 CST 2019]; root of context hierarchy
21:33:20.651 febs [RMI TCP Connection(2)-192.168.3.113] INFO  o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
21:33:20.651 febs [RMI TCP Connection(2)-192.168.3.113] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
21:33:20.652 febs [RMI TCP Connection(2)-192.168.3.113] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
21:33:20.652 febs [RMI TCP Connection(2)-192.168.3.113] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
21:33:20.652 febs [RMI TCP Connection(2)-192.168.3.113] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
21:33:20.652 febs [RMI TCP Connection(2)-192.168.3.113] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
21:33:20.658 febs [RMI TCP Connection(2)-192.168.3.113] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
21:33:20.662 febs [RMI TCP Connection(2)-192.168.3.113] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
21:33:20.662 febs [RMI TCP Connection(2)-192.168.3.113] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
21:33:20.692 febs [RMI TCP Connection(2)-192.168.3.113] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
