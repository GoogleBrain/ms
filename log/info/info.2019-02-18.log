22:22:53.446 febs [main] INFO  cn.hu.Application - Starting Application on DESKTOP-4ODT231 with PID 6280 (E:\masha\ms\target\classes started by googlebrain in E:\masha\ms)
22:22:53.456 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
22:22:53.536 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Mon Feb 18 22:22:53 CST 2019]; root of context hierarchy
22:22:54.220 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\masha\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
22:22:54.410 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
22:22:54.780 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
22:22:54.876 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
22:22:54.887 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
22:22:54.887 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
22:22:54.887 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
22:22:54.887 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
22:22:54.887 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
22:22:54.887 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
22:22:54.947 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$1eed905e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.020 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
22:22:55.041 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.176 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.290 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
22:22:55.290 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
22:22:55.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.327 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.347 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$f2bb812e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.387 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54ded753] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.416 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$8857f4e2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.420 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$87362149] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.807 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.817 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$ce709c26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.820 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.830 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$87b32883] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.837 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$6e8accc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:55.837 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
22:22:56.000 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.020 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.060 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.397 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
22:22:56.397 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.436 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.835 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.858 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.866 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.871 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.898 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.901 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.916 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:56.959 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.031 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.051 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy103] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.088 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.093 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.103 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.129 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.167 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.180 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.197 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.227 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.260 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.277 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.307 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:22:57.700 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
22:22:57.707 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
22:22:57.716 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
22:22:57.716 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
22:22:57.727 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_201/bin/server;C:/Program Files/Java/jre1.8.0_201/bin;C:/Program Files/Java/jre1.8.0_201/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\apache-tomcat-7.0.90\bin;C:\Program Files\TortoiseGit\bin;C:\Users\googlebrain\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Users\googlebrain\AppData\Local\GitHubDesktop\bin;C:\eclipse-jee-photon-R-win32-x86_64\eclipse;;.]
22:22:57.928 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
22:22:57.928 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 4392 ms
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
22:22:58.107 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
22:22:58.126 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
22:22:58.800 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
22:22:58.987 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:22:59.206 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Mon Feb 18 22:22:53 CST 2019]; root of context hierarchy
22:22:59.256 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
22:22:59.256 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
22:22:59.267 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.Dept)
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
22:22:59.277 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.Dept)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.Dept)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.Dept)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.Dept)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
22:22:59.287 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
22:22:59.297 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
22:22:59.300 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
22:22:59.307 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
22:22:59.311 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.317 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
22:22:59.317 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
22:22:59.317 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
22:22:59.317 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
22:22:59.320 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
22:22:59.320 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.320 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.index(org.springframework.ui.Model)
22:22:59.330 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.ReceiveController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.337 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.337 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkUserName]}" onto public boolean cn.hu.system.controller.ReceiveController.checkUserName(java.lang.String,java.lang.String)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateTheme(cn.hu.system.domain.User)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUser(java.lang.Long)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userCsv(cn.hu.system.domain.User)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUserProfile(java.lang.Long)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkPassword]}" onto public boolean cn.hu.system.controller.ReceiveController.checkPassword(java.lang.String)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.regist(cn.hu.system.domain.User)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userExcel(cn.hu.system.domain.User)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.changeAvatar(java.lang.String)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updatePassword(java.lang.String)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/profile]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.profileIndex(org.springframework.ui.Model)
22:22:59.339 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.deleteUsers(java.lang.String)
22:22:59.346 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
22:22:59.346 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.346 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.346 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.346 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
22:22:59.351 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
22:22:59.351 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
22:22:59.351 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
22:22:59.360 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
22:22:59.360 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
22:22:59.360 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
22:22:59.360 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
22:22:59.360 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
22:22:59.367 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
22:22:59.377 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
22:22:59.377 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
22:22:59.377 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
22:22:59.377 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
22:22:59.380 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
22:22:59.380 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
22:22:59.380 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
22:22:59.380 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
22:22:59.387 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.index(org.springframework.ui.Model)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StatisticsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkUserName]}" onto public boolean cn.hu.system.controller.StatisticsController.checkUserName(java.lang.String,java.lang.String)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateTheme(cn.hu.system.domain.User)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUser(java.lang.Long)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userCsv(cn.hu.system.domain.User)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUserProfile(java.lang.Long)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkPassword]}" onto public boolean cn.hu.system.controller.StatisticsController.checkPassword(java.lang.String)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.regist(cn.hu.system.domain.User)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userExcel(cn.hu.system.domain.User)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.changeAvatar(java.lang.String)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updatePassword(java.lang.String)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/profile]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.profileIndex(org.springframework.ui.Model)
22:22:59.390 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.deleteUsers(java.lang.String)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage]}" onto public java.lang.String cn.hu.system.controller.StorageController.index(org.springframework.ui.Model)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StorageController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkUserName]}" onto public boolean cn.hu.system.controller.StorageController.checkUserName(java.lang.String,java.lang.String)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateTheme(cn.hu.system.domain.User)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUser(java.lang.Long)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userCsv(cn.hu.system.domain.User)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUserProfile(java.lang.Long)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkPassword]}" onto public boolean cn.hu.system.controller.StorageController.checkPassword(java.lang.String)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.regist(cn.hu.system.domain.User)
22:22:59.397 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userExcel(cn.hu.system.domain.User)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.changeAvatar(java.lang.String)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updatePassword(java.lang.String)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/profile]}" onto public java.lang.String cn.hu.system.controller.StorageController.profileIndex(org.springframework.ui.Model)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.deleteUsers(java.lang.String)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
22:22:59.400 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
22:22:59.407 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index(org.springframework.ui.Model)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUserProfile(cn.hu.system.domain.User)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkUserName]}" onto public boolean cn.hu.system.controller.WithDrawController.checkUserName(java.lang.String,java.lang.String)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateTheme(cn.hu.system.domain.User)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUser(java.lang.Long)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userCsv(cn.hu.system.domain.User)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUserProfile(java.lang.Long)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkPassword]}" onto public boolean cn.hu.system.controller.WithDrawController.checkPassword(java.lang.String)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.regist(cn.hu.system.domain.User)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userExcel(cn.hu.system.domain.User)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.changeAvatar(java.lang.String)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updatePassword(java.lang.String)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/profile]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.profileIndex(org.springframework.ui.Model)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteUsers(java.lang.String)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
22:22:59.411 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
22:22:59.416 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
22:22:59.466 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:22:59.466 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:22:59.496 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
22:22:59.626 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
22:23:00.186 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
22:23:00.206 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
22:23:00.206 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
22:23:00.206 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
22:23:00.206 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

22:23:00.206 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
22:23:00.206 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
22:23:00.206 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@2f09e6b2
22:23:00.576 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
22:23:00.576 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
22:23:00.576 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
22:23:00.576 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
22:23:00.587 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
22:23:00.587 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
22:23:00.587 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
22:23:00.587 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
22:23:00.596 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
22:23:00.606 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
22:23:00.636 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
22:23:00.645 febs [main] INFO  cn.hu.Application - Started Application in 7.538 seconds (JVM running for 8.48)
22:23:00.650 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-02-18 22:23:00.650 》》》》》》
22:23:13.097 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
22:23:13.097 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
22:23:13.121 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 24 ms
22:23:13.127 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
22:23:19.663 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
22:23:19.663 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 47 ms
22:23:19.663 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,FRONT,BACK,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
22:23:20.200 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
22:23:20.200 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:23:20.200 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-2-18 22:23:20' WHERE ( lower(username)= 'admin' )
22:23:20.447 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:23:20.447 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:23:20.447 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2015,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Sun Feb 17 21:35:39 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"','127.0.0.1','2019-2-18 22:23:20','内网IP|0|0|内网IP|内网IP' )
22:23:21.665 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:23:21.665 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 32 ms
22:23:21.665 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:23:57.561 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
22:23:57.562 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:23:57.562 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
22:23:57.567 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
22:23:57.567 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:23:57.567 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
22:23:58.340 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:23:58.340 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:23:58.340 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:23:58.484 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:23:58.484 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:23:58.484 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:23:58.486 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:23:58.486 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:23:58.486 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:23:58.906 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:23:58.907 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:23:58.907 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2016,'admin','获取用户信息',216,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 22:23:58','内网IP|0|0|内网IP|内网IP' )
22:24:01.966 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
22:24:01.966 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:24:01.966 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:24:11.913 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
22:24:11.913 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:24:11.913 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:25:02.377 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:25:02.377 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
22:25:02.377 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2017,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Sun Feb 17 21:35:39 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 22:25:02','内网IP|0|0|内网IP|内网IP' )
22:25:03.643 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:25:03.643 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 23 ms
22:25:03.643 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:26:43.729 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:26:43.729 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:26:43.729 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:26:43.752 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:26:43.752 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:26:43.752 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:26:43.754 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:26:43.754 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:26:43.754 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:26:44.231 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:26:44.231 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
22:26:44.231 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2018,'admin','获取用户信息',175,'cn.hu.system.controller.ReceiveController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 22:26:44','内网IP|0|0|内网IP|内网IP' )
22:26:46.656 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
22:26:46.656 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:26:46.656 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:29:10.487 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
22:29:10.487 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Mon Feb 18 22:22:53 CST 2019]; root of context hierarchy
22:29:10.493 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.c.s.DefaultLifecycleProcessor - Stopping beans in phase 2147483647
22:29:10.494 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
22:29:10.495 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.quartz.SchedulerFactoryBean - Shutting down Quartz Scheduler
22:29:10.495 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutting down.
22:29:10.495 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED paused.
22:29:10.495 febs [RMI TCP Connection(2)-127.0.0.1] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED shutdown complete.
22:29:10.502 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans on shutdown
22:29:10.512 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.j.e.a.AnnotationMBeanExporter - Unregistering JMX-exposed beans
22:29:10.512 febs [RMI TCP Connection(2)-127.0.0.1] INFO  o.s.s.c.ThreadPoolTaskExecutor - Shutting down ExecutorService 'taskExecutor'
22:29:10.517 febs [RMI TCP Connection(2)-127.0.0.1] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} closed
22:43:46.030 febs [main] INFO  cn.hu.Application - Starting Application on DESKTOP-4ODT231 with PID 5084 (E:\masha\ms\target\classes started by googlebrain in E:\masha\ms)
22:43:46.034 febs [main] INFO  cn.hu.Application - No active profile set, falling back to default profiles: default
22:43:46.108 febs [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext - Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Mon Feb 18 22:43:46 CST 2019]; root of context hierarchy
22:43:46.672 febs [main] INFO  o.s.b.f.s.DefaultListableBeanFactory - Overriding bean definition for bean 'shiroRealm' with a different definition: replacing [Generic bean: class [cn.hu.common.shiro.ShiroRealm]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [E:\masha\ms\target\classes\cn\hu\common\shiro\ShiroRealm.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=shiroConfig; factoryMethodName=shiroRealm; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [cn/hu/common/shiro/ShiroConfig.class]]
22:43:46.818 febs [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Multiple Spring Data modules found, entering strict repository configuration mode!
22:43:47.078 febs [main] INFO  c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor - Post-processing PropertySource instances
22:43:47.139 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
22:43:47.143 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
22:43:47.143 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
22:43:47.143 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemProperties [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
22:43:47.143 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableMapPropertySourceWrapper
22:43:47.144 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
22:43:47.144 febs [main] INFO  c.u.j.EncryptablePropertySourceConverter - Converting PropertySource applicationConfig: [classpath:/application.yml] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
22:43:47.193 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'asyncExecutorPoolConfig' of type [cn.hu.common.config.AsyncExecutorPoolConfig$$EnhancerBySpringCGLIB$$1524d840] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.238 febs [main] INFO  c.u.j.f.DefaultLazyPropertyFilter - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
22:43:47.242 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidSpringAopConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.309 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.378 febs [main] INFO  c.u.j.r.DefaultLazyPropertyResolver - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
22:43:47.378 febs [main] INFO  c.u.j.d.DefaultLazyPropertyDetector - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
22:43:47.399 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource.druid-com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties' of type [com.alibaba.druid.spring.boot.autoconfigure.properties.DruidStatProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.399 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'advisor' of type [org.springframework.aop.support.RegexpMethodPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.418 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisConfig' of type [cn.hu.common.config.RedisConfig$$EnhancerBySpringCGLIB$$e8f2c910] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.450 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4b161f35] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.479 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'febsProperties' of type [cn.hu.common.config.FebsProperties$$EnhancerBySpringCGLIB$$7e8f3cc4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.489 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroConfig' of type [cn.hu.common.shiro.ShiroConfig$$EnhancerBySpringCGLIB$$7d6d692b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.809 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.819 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'myBatisConfig' of type [cn.hu.common.config.MyBatisConfig$$EnhancerBySpringCGLIB$$c4a7e408] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.819 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlStatementInterceptor' of type [cn.hu.common.interceptor.SqlStatementInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.833 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$7dea7065] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.839 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$64c214a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.839 febs [main] INFO  c.a.d.s.b.a.DruidDataSourceAutoConfigure - Init DruidDataSource
22:43:47.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:47.989 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.022 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.289 febs [main] INFO  c.alibaba.druid.pool.DruidDataSource - {dataSource-1} inited
22:43:48.289 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.328 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.508 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.523 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.529 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userMapper' of type [com.sun.proxy.$Proxy95] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.542 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleMapper' of type [com.sun.proxy.$Proxy97] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.551 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userRoleService' of type [cn.hu.system.service.impl.UserRoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.571 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'userService' of type [cn.hu.system.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.609 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.609 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMapper' of type [com.sun.proxy.$Proxy103] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.619 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.619 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuMapper' of type [com.sun.proxy.$Proxy104] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.628 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleMenuService' of type [cn.hu.system.service.impl.RoleMenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.651 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'roleService' of type [cn.hu.system.service.impl.RoleServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.688 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.688 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuMapper' of type [com.sun.proxy.$Proxy105] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.702 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'menuService' of type [cn.hu.system.service.impl.MenuServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.722 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'shiroRealm' of type [cn.hu.common.shiro.ShiroRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.739 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'redisSessionDAO' of type [org.crazycake.shiro.RedisSessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.743 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.758 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:48.769 febs [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker - Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
22:43:49.171 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port(s): 8080 (http)
22:43:49.178 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
22:43:49.189 febs [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
22:43:49.189 febs [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet Engine: Apache Tomcat/8.5.32
22:43:49.189 febs [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener - The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_192\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:/Program Files/Java/jre1.8.0_201/bin/server;C:/Program Files/Java/jre1.8.0_201/bin;C:/Program Files/Java/jre1.8.0_201/lib/amd64;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\WINDOWS\System32\OpenSSH\;C:\apache-tomcat-7.0.90\bin;C:\Program Files\TortoiseGit\bin;C:\Users\googlebrain\AppData\Local\Microsoft\WindowsApps;C:\Program Files\Microsoft VS Code\bin;C:\Users\googlebrain\AppData\Local\GitHubDesktop\bin;C:\eclipse-jee-photon-R-win32-x86_64\eclipse;;.]
22:43:49.282 febs [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
22:43:49.282 febs [localhost-startStop-1] INFO  o.s.web.context.ContextLoader - Root WebApplicationContext: initialization completed in 3174 ms
22:43:49.408 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'characterEncodingFilter' to: [/*]
22:43:49.417 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
22:43:49.417 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'httpPutFormContentFilter' to: [/*]
22:43:49.417 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'requestContextFilter' to: [/*]
22:43:49.417 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'xssFilter' to urls: [/*]
22:43:49.417 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'webStatFilter' to urls: [/*]
22:43:49.417 febs [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean - Mapping filter: 'shiroFilterFactoryBean' to: [/*]
22:43:49.418 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet dispatcherServlet mapped to [/]
22:43:49.419 febs [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean - Servlet statViewServlet mapped to [/druid/*]
22:43:49.429 febs [localhost-startStop-1] INFO  cn.hu.common.xss.XssFilter - ------------ xss filter init ------------
22:43:50.082 febs [main] INFO  o.s.s.c.ThreadPoolTaskExecutor - Initializing ExecutorService  'taskExecutor'
22:43:50.223 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:43:50.439 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter - Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@175b9425: startup date [Mon Feb 18 22:43:46 CST 2019]; root of context hierarchy
22:43:50.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/common/download]}" onto public void cn.hu.common.controller.CommonController.fileDownload(java.lang.String,java.lang.Boolean,javax.servlet.http.HttpServletResponse) throws java.io.IOException,cn.hu.common.exception.FileDownloadException
22:43:50.492 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/test],methods=[GET]}" onto public int cn.hu.common.controller.TestController.testLimiter()
22:43:50.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser]}" onto public java.lang.String cn.hu.system.controller.BackUserController.index(org.springframework.ui.Model)
22:43:50.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BackUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUser(java.lang.Long)
22:43:50.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkUserName]}" onto public boolean cn.hu.system.controller.BackUserController.checkUserName(java.lang.String,java.lang.String)
22:43:50.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userExcel(cn.hu.system.domain.User)
22:43:50.499 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updatePassword(java.lang.String)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/checkPassword]}" onto public boolean cn.hu.system.controller.BackUserController.checkPassword(java.lang.String)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.userCsv(cn.hu.system.domain.User)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.deleteUsers(java.lang.String)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.getUserProfile(java.lang.Long)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.changeAvatar(java.lang.String)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/profile]}" onto public java.lang.String cn.hu.system.controller.BackUserController.profileIndex(org.springframework.ui.Model)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.regist(cn.hu.system.domain.User)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateTheme(cn.hu.system.domain.User)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/backuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BackUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base]}" onto public java.lang.String cn.hu.system.controller.BaseSettingController.index()
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.getDict(java.lang.Long)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictCsv(cn.hu.system.domain.Dict)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.dictExcel(cn.hu.system.domain.Dict)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.BaseSettingController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.deleteDicts(java.lang.String)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.addDict(cn.hu.system.domain.Dict)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/base/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.BaseSettingController.updateDict(cn.hu.system.domain.Dict)
22:43:50.503 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment]}" onto public java.lang.String cn.hu.system.controller.CommentController.index(org.springframework.ui.Model)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.CommentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUser(java.lang.Long)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkUserName]}" onto public boolean cn.hu.system.controller.CommentController.checkUserName(java.lang.String,java.lang.String)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userExcel(cn.hu.system.domain.User)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updatePassword(java.lang.String)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/checkPassword]}" onto public boolean cn.hu.system.controller.CommentController.checkPassword(java.lang.String)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.userCsv(cn.hu.system.domain.User)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.deleteUsers(java.lang.String)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.getUserProfile(java.lang.Long)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.changeAvatar(java.lang.String)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/profile]}" onto public java.lang.String cn.hu.system.controller.CommentController.profileIndex(org.springframework.ui.Model)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.regist(cn.hu.system.domain.User)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateTheme(cn.hu.system.domain.User)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/comment/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.CommentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept]}" onto public java.lang.String cn.hu.system.controller.DeptController.index()
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.addRole(cn.hu.system.domain.Dept)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDeptTree()
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptExcel(cn.hu.system.domain.Dept)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deptCsv(cn.hu.system.domain.Dept)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/checkDeptName]}" onto public boolean cn.hu.system.controller.DeptController.checkDeptName(java.lang.String,java.lang.String)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.deleteDepts(java.lang.String)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.updateRole(cn.hu.system.domain.Dept)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DeptController.getDept(java.lang.Long)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dept/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.DeptController.deptList(cn.hu.system.domain.Dept)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict]}" onto public java.lang.String cn.hu.system.controller.DictController.index()
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/getDict]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.getDict(java.lang.Long)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictCsv(cn.hu.system.domain.Dict)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.dictExcel(cn.hu.system.domain.Dict)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.DictController.dictList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Dict)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.deleteDicts(java.lang.String)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.addDict(cn.hu.system.domain.Dict)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/dict/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.DictController.updateDict(cn.hu.system.domain.Dict)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.index(org.springframework.ui.Model)
22:43:50.509 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.FrontUserController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUser(java.lang.Long)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkUserName]}" onto public boolean cn.hu.system.controller.FrontUserController.checkUserName(java.lang.String,java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userExcel(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updatePassword(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/checkPassword]}" onto public boolean cn.hu.system.controller.FrontUserController.checkPassword(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.userCsv(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.deleteUsers(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.getUserProfile(java.lang.Long)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.changeAvatar(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/profile]}" onto public java.lang.String cn.hu.system.controller.FrontUserController.profileIndex(org.springframework.ui.Model)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.regist(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateTheme(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/frontuser/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.FrontUserController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory]}" onto public java.lang.String cn.hu.system.controller.GoodsCategoryController.index()
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.addRole(cn.hu.system.domain.Dept)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDeptTree()
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptExcel(cn.hu.system.domain.Dept)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deptCsv(cn.hu.system.domain.Dept)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/checkDeptName]}" onto public boolean cn.hu.system.controller.GoodsCategoryController.checkDeptName(java.lang.String,java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.deleteDepts(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.updateRole(cn.hu.system.domain.Dept)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/getDept]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsCategoryController.getDept(java.lang.Long)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goodscategory/list]}" onto public java.util.List<cn.hu.system.domain.Dept> cn.hu.system.controller.GoodsCategoryController.deptList(cn.hu.system.domain.Dept)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods]}" onto public java.lang.String cn.hu.system.controller.GoodsController.index(org.springframework.ui.Model)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.GoodsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUser(java.lang.Long)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkUserName]}" onto public boolean cn.hu.system.controller.GoodsController.checkUserName(java.lang.String,java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userExcel(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updatePassword(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/checkPassword]}" onto public boolean cn.hu.system.controller.GoodsController.checkPassword(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.userCsv(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.deleteUsers(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.getUserProfile(java.lang.Long)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.changeAvatar(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/profile]}" onto public java.lang.String cn.hu.system.controller.GoodsController.profileIndex(org.springframework.ui.Model)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.regist(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateTheme(cn.hu.system.domain.User)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/goods/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.GoodsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log]}" onto public java.lang.String cn.hu.system.controller.LogController.index()
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.LogController.logList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.SysLog)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.deleteLogss(java.lang.String)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logExcel(cn.hu.system.domain.SysLog)
22:43:50.519 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/log/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LogController.logCsv(cn.hu.system.domain.SysLog)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/index]}" onto public java.lang.String cn.hu.system.controller.LoginController.index(org.springframework.ui.Model)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.login()
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/login],methods=[POST]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.LoginController.login(java.lang.String,java.lang.String,java.lang.String,java.lang.Boolean)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/gifCode],methods=[GET]}" onto public void cn.hu.system.controller.LoginController.getGifCode(javax.servlet.http.HttpServletResponse,javax.servlet.http.HttpServletRequest)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/]}" onto public java.lang.String cn.hu.system.controller.LoginController.redirectIndex()
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/403],methods=[GET]}" onto public java.lang.String cn.hu.system.controller.LoginController.forbid()
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu]}" onto public java.lang.String cn.hu.system.controller.MenuController.index()
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menuButtonTree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuButtonTree()
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.deleteMenus(java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.addMenu(cn.hu.system.domain.Menu)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getUserMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getUserMenu(java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuExcel(cn.hu.system.domain.Menu)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/checkMenuName]}" onto public boolean cn.hu.system.controller.MenuController.checkMenuName(java.lang.String,java.lang.String,java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/tree]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenuTree()
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.updateMenu(cn.hu.system.domain.Menu)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.menuCsv(cn.hu.system.domain.Menu)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/menu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/getMenu]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.MenuController.getMenu(java.lang.Long)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/list]}" onto public java.util.List<cn.hu.system.domain.Menu> cn.hu.system.controller.MenuController.menuList(cn.hu.system.domain.Menu)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/menu/urlList],methods=[GET]}" onto public java.util.List<java.util.Map<java.lang.String, java.lang.String>> cn.hu.system.controller.MenuController.getAllUrl()
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders]}" onto public java.lang.String cn.hu.system.controller.OrdersController.index(org.springframework.ui.Model)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.OrdersController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUser(java.lang.Long)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkUserName]}" onto public boolean cn.hu.system.controller.OrdersController.checkUserName(java.lang.String,java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userExcel(cn.hu.system.domain.User)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updatePassword(java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/checkPassword]}" onto public boolean cn.hu.system.controller.OrdersController.checkPassword(java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.userCsv(cn.hu.system.domain.User)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.deleteUsers(java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.getUserProfile(java.lang.Long)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.changeAvatar(java.lang.String)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/profile]}" onto public java.lang.String cn.hu.system.controller.OrdersController.profileIndex(org.springframework.ui.Model)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.regist(cn.hu.system.domain.User)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateTheme(cn.hu.system.domain.User)
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/orders/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.OrdersController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.529 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate]}" onto public java.lang.String cn.hu.system.controller.RebateController.index(org.springframework.ui.Model)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RebateController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUser(java.lang.Long)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkUserName]}" onto public boolean cn.hu.system.controller.RebateController.checkUserName(java.lang.String,java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userExcel(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updatePassword(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/checkPassword]}" onto public boolean cn.hu.system.controller.RebateController.checkPassword(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.userCsv(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.deleteUsers(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.getUserProfile(java.lang.Long)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.changeAvatar(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/profile]}" onto public java.lang.String cn.hu.system.controller.RebateController.profileIndex(org.springframework.ui.Model)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.regist(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateTheme(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/rebate/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RebateController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.index(org.springframework.ui.Model)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.ReceiveController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUser(java.lang.Long)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkUserName]}" onto public boolean cn.hu.system.controller.ReceiveController.checkUserName(java.lang.String,java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userExcel(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updatePassword(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/checkPassword]}" onto public boolean cn.hu.system.controller.ReceiveController.checkPassword(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.userCsv(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.deleteUsers(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.getUserProfile(java.lang.Long)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.changeAvatar(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/profile]}" onto public java.lang.String cn.hu.system.controller.ReceiveController.profileIndex(org.springframework.ui.Model)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.regist(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateTheme(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/receive/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.ReceiveController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge]}" onto public java.lang.String cn.hu.system.controller.RechargeController.index(org.springframework.ui.Model)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RechargeController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUser(java.lang.Long)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkUserName]}" onto public boolean cn.hu.system.controller.RechargeController.checkUserName(java.lang.String,java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userExcel(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updatePassword(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/checkPassword]}" onto public boolean cn.hu.system.controller.RechargeController.checkPassword(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.userCsv(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.deleteUsers(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.getUserProfile(java.lang.Long)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.changeAvatar(java.lang.String)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/profile]}" onto public java.lang.String cn.hu.system.controller.RechargeController.profileIndex(org.springframework.ui.Model)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.regist(cn.hu.system.domain.User)
22:43:50.538 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateTheme(cn.hu.system.domain.User)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/recharge/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RechargeController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/get]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.get(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keys]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.keys(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/set]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.set(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/exists]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.exists(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/memoryInfo]}" onto public java.lang.String cn.hu.system.controller.RedisController.getMemoryInfo()
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pexpire]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pexpire(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/info]}" onto public java.lang.String cn.hu.system.controller.RedisController.getRedisInfo(org.springframework.ui.Model)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/keysSize]}" onto public java.lang.String cn.hu.system.controller.RedisController.getKeysSize()
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/pttl]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.pttl(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/del]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RedisController.del(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/redis/terminal]}" onto public java.lang.String cn.hu.system.controller.RedisController.redisTerminal(org.springframework.ui.Model)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role]}" onto public java.lang.String cn.hu.system.controller.RoleController.index()
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/getRole]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.getRole(java.lang.Long)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.addRole(cn.hu.system.domain.Role,java.lang.Long[])
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.RoleController.roleList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.Role)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.updateRole(cn.hu.system.domain.Role,java.lang.Long[])
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleExcel(cn.hu.system.domain.Role)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/checkRoleName]}" onto public boolean cn.hu.system.controller.RoleController.checkRoleName(java.lang.String,java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.deleteRoles(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/role/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.RoleController.roleCsv(cn.hu.system.domain.Role)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.SessionController.list()
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session/forceLogout]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.SessionController.forceLogout(java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/session]}" onto public java.lang.String cn.hu.system.controller.SessionController.online()
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.index(org.springframework.ui.Model)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StatisticsController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUser(java.lang.Long)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkUserName]}" onto public boolean cn.hu.system.controller.StatisticsController.checkUserName(java.lang.String,java.lang.String)
22:43:50.549 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userExcel(cn.hu.system.domain.User)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updatePassword(java.lang.String)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/checkPassword]}" onto public boolean cn.hu.system.controller.StatisticsController.checkPassword(java.lang.String)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.userCsv(cn.hu.system.domain.User)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.deleteUsers(java.lang.String)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.getUserProfile(java.lang.Long)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.changeAvatar(java.lang.String)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/profile]}" onto public java.lang.String cn.hu.system.controller.StatisticsController.profileIndex(org.springframework.ui.Model)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.regist(cn.hu.system.domain.User)
22:43:50.557 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateTheme(cn.hu.system.domain.User)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/statistics/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StatisticsController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage]}" onto public java.lang.String cn.hu.system.controller.StorageController.index(org.springframework.ui.Model)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.StorageController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUser(java.lang.Long)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkUserName]}" onto public boolean cn.hu.system.controller.StorageController.checkUserName(java.lang.String,java.lang.String)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userExcel(cn.hu.system.domain.User)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updatePassword(java.lang.String)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/checkPassword]}" onto public boolean cn.hu.system.controller.StorageController.checkPassword(java.lang.String)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.userCsv(cn.hu.system.domain.User)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.deleteUsers(java.lang.String)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.getUserProfile(java.lang.Long)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.changeAvatar(java.lang.String)
22:43:50.558 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/profile]}" onto public java.lang.String cn.hu.system.controller.StorageController.profileIndex(org.springframework.ui.Model)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.regist(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateTheme(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/storage/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.StorageController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent]}" onto public java.lang.String cn.hu.system.controller.TalentController.index(org.springframework.ui.Model)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.TalentController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUser(java.lang.Long)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkUserName]}" onto public boolean cn.hu.system.controller.TalentController.checkUserName(java.lang.String,java.lang.String)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userExcel(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updatePassword(java.lang.String)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/checkPassword]}" onto public boolean cn.hu.system.controller.TalentController.checkPassword(java.lang.String)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.userCsv(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.deleteUsers(java.lang.String)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.getUserProfile(java.lang.Long)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.changeAvatar(java.lang.String)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/profile]}" onto public java.lang.String cn.hu.system.controller.TalentController.profileIndex(org.springframework.ui.Model)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.regist(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateTheme(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/talent/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.TalentController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.index(org.springframework.ui.Model)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/list]}" onto public java.util.Map<java.lang.String, java.lang.Object> cn.hu.system.controller.WithDrawController.userList(cn.hu.common.domain.QueryRequest,cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/add]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.addUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updateUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUserProfile(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUser]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUser(java.lang.Long)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkUserName]}" onto public boolean cn.hu.system.controller.WithDrawController.checkUserName(java.lang.String,java.lang.String)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/excel]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userExcel(cn.hu.system.domain.User)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/updatePassword]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updatePassword(java.lang.String)
22:43:50.562 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/checkPassword]}" onto public boolean cn.hu.system.controller.WithDrawController.checkPassword(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/csv]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.userCsv(cn.hu.system.domain.User)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/delete]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.deleteUsers(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/getUserProfile]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.getUserProfile(java.lang.Long)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/changeAvatar]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.changeAvatar(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/profile]}" onto public java.lang.String cn.hu.system.controller.WithDrawController.profileIndex(org.springframework.ui.Model)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/regist]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.regist(cn.hu.system.domain.User)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/theme]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateTheme(cn.hu.system.domain.User)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/withdraw/update]}" onto public cn.hu.common.domain.ResponseBo cn.hu.system.controller.WithDrawController.updateUser(cn.hu.system.domain.User,java.lang.Long[])
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article]}" onto public java.lang.String cn.hu.web.controller.ArticleController.index()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/article/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.ArticleController.queryArticle(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieHot]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMoiveHot()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/coming]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieComing()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/hot]}" onto public java.lang.String cn.hu.web.controller.MovieController.movieHot()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/getMovieComing]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getMovieComing()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/detail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getDetail(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/movie/comments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.MovieController.getComments(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/readingList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getReadingList()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/painting]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.paintIndex()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwen]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.yuwenIndex()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/oneList]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getOneList()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenDetail(java.lang.String,java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/yuwenComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getYuwenComments(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayDetail]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayDetail(java.lang.String,java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essay]}" onto public java.lang.String cn.hu.web.controller.OneIsAllController.essayIndex()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/one/essayComments]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.OneIsAllController.getEssayComments(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather/query]}" onto public cn.hu.common.domain.ResponseBo cn.hu.web.controller.WeatherController.queryWeather(java.lang.String)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/weather]}" onto public java.lang.String cn.hu.web.controller.WeatherController.weather()
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
22:43:50.569 febs [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
22:43:50.649 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:43:50.649 febs [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
22:43:50.671 febs [main] INFO  o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Detected @ExceptionHandler methods in globalExceptionHandler
22:43:50.829 febs [main] INFO  o.s.b.a.w.s.WelcomePageHandlerMapping - Adding welcome page template: index
22:43:51.372 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Using default implementation for ThreadExecutor
22:43:51.379 febs [main] INFO  o.quartz.core.SchedulerSignalerImpl - Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
22:43:51.379 febs [main] INFO  org.quartz.core.QuartzScheduler - Quartz Scheduler v.2.3.0 created.
22:43:51.379 febs [main] INFO  org.quartz.simpl.RAMJobStore - RAMJobStore initialized.
22:43:51.379 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler meta-data: Quartz Scheduler (v2.3.0) 'quartzScheduler' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

22:43:51.379 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler 'quartzScheduler' initialized from an externally provided properties instance.
22:43:51.379 febs [main] INFO  org.quartz.impl.StdSchedulerFactory - Quartz scheduler version: 2.3.0
22:43:51.379 febs [main] INFO  org.quartz.core.QuartzScheduler - JobFactory set to: org.springframework.boot.autoconfigure.quartz.AutowireCapableBeanJobFactory@35563e4c
22:43:51.760 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Registering beans for JMX exposure on startup
22:43:51.768 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'statFilter' has been autodetected for JMX exposure
22:43:51.769 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Bean with name 'dataSource' has been autodetected for JMX exposure
22:43:51.773 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.spring.boot.autoconfigure:name=dataSource,type=DruidDataSourceWrapper]
22:43:51.773 febs [main] INFO  o.s.j.e.a.AnnotationMBeanExporter - Located MBean 'statFilter': registering with JMX server as MBean [com.alibaba.druid.filter.stat:name=statFilter,type=StatFilter]
22:43:51.778 febs [main] INFO  o.s.c.s.DefaultLifecycleProcessor - Starting beans in phase 2147483647
22:43:51.778 febs [main] INFO  o.s.s.quartz.SchedulerFactoryBean - Starting Quartz Scheduler now
22:43:51.778 febs [main] INFO  org.quartz.core.QuartzScheduler - Scheduler quartzScheduler_$_NON_CLUSTERED started.
22:43:51.778 febs [main] INFO  o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
22:43:51.789 febs [main] INFO  o.a.tomcat.util.net.NioSelectorPool - Using a shared selector for servlet write/read
22:43:51.799 febs [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port(s): 8080 (http) with context path ''
22:43:51.799 febs [main] INFO  cn.hu.Application - Started Application in 6.091 seconds (JVM running for 6.702)
22:43:51.812 febs [main] INFO  cn.hu.Application - 《《《《《《 started up successfully at 2019-02-18 22:43:51.812 》》》》》》
22:43:56.003 febs [http-nio-8080-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring FrameworkServlet 'dispatcherServlet'
22:43:56.003 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization started
22:43:56.026 febs [http-nio-8080-exec-1] INFO  o.s.web.servlet.DispatcherServlet - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
22:43:56.039 febs [http-nio-8080-exec-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Enabling session validation scheduler...
22:43:57.505 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:43:57.505 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 300 ms
22:43:57.505 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2019,'admin','访问系统',3,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Sun Feb 17 21:35:39 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"','127.0.0.1','2019-2-18 22:43:57','内网IP|0|0|内网IP|内网IP' )
22:44:02.185 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:44:02.185 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 32 ms
22:44:02.185 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:44:24.248 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:44:24.248 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
22:44:24.248 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2020,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-18 22:44:24','内网IP|0|0|内网IP|内网IP' )
22:44:24.830 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:44:24.830 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:44:24.830 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:44:25.481 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:44:25.481 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:44:25.481 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:44:25.493 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:44:25.493 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:44:25.493 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:44:27.197 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:44:27.198 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:44:27.198 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2021,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-18 22:44:27','内网IP|0|0|内网IP|内网IP' )
22:44:28.359 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:44:28.359 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
22:44:28.359 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:44:28.731 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:44:28.731 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
22:44:28.731 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:44:29.183 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:44:29.184 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
22:44:29.184 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2022,'admin','获取系统所有URL',236,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-18 22:44:29','内网IP|0|0|内网IP|内网IP' )
22:45:27.225 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:45:27.225 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:45:27.225 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品评论' and TYPE = 0 )
22:45:33.719 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.insert
22:45:33.719 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:45:33.719 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 153,0,'商品评论','','','zmdi zmdi-airplane','0',,'2019-2-18 22:45:33', )
22:45:33.733 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:45:33.733 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:45:33.733 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2023,'admin','新增菜单/按钮',18,'cn.hu.system.controller.MenuController.addMenu()','menu: "cn.hu.system.domain.Menu@179bc043"','127.0.0.1','2019-2-18 22:45:33','内网IP|0|0|内网IP|内网IP' )
22:45:33.912 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:45:33.912 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:45:33.912 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:45:34.035 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:45:34.035 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:45:34.036 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:45:34.046 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:45:34.046 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
22:45:34.046 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:45:52.361 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:45:52.361 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:45:52.361 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品评价' and TYPE = 0 )
22:46:02.062 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:02.062 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
22:46:02.062 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:46:27.745 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:27.745 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:46:27.745 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品评论' and TYPE = 0 )
22:46:29.824 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:29.824 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:46:29.824 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品评' and TYPE = 0 )
22:46:29.960 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:29.960 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:46:29.960 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品' and TYPE = 0 )
22:46:30.584 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:30.584 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:46:30.584 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品p' and TYPE = 0 )
22:46:30.696 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:30.697 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
22:46:30.697 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品pi' and TYPE = 0 )
22:46:30.872 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:30.872 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:46:30.872 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品ping' and TYPE = 0 )
22:46:31.079 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:31.079 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:46:31.079 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品pingji' and TYPE = 0 )
22:46:31.249 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:31.249 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:46:31.249 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品pingjia' and TYPE = 0 )
22:46:31.455 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:46:31.455 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:46:31.455 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '商品评价' and TYPE = 0 )
22:47:03.720 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.insert
22:47:03.720 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:03.720 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 154,153,'商品评价','comment','comment:list','zmdi zmdi-assignment-account','0',,'2019-2-18 22:47:03', )
22:47:03.743 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:47:03.743 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:47:03.743 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2024,'admin','新增菜单/按钮',10,'cn.hu.system.controller.MenuController.addMenu()','menu: "cn.hu.system.domain.Menu@26591fab"','127.0.0.1','2019-2-18 22:47:03','内网IP|0|0|内网IP|内网IP' )
22:47:03.918 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:47:03.919 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:03.919 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:47:04.054 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:47:04.054 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:47:04.054 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:47:04.067 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:47:04.067 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:47:04.067 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:47:05.979 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:47:05.979 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 19 ms
22:47:05.979 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2025,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-18 22:47:05','内网IP|0|0|内网IP|内网IP' )
22:47:06.591 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:47:06.591 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:06.591 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:47:06.895 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:47:06.896 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:06.896 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:47:06.897 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:47:06.897 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:06.897 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:47:10.187 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
22:47:10.187 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:47:10.187 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
22:47:13.689 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.updateByPrimaryKeySelective
22:47:13.689 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.689 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2019-2-18 22:47:13' WHERE ROLE_ID = 1
22:47:13.698 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
22:47:13.699 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
22:47:13.699 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( role_id= 1 )
22:47:13.701 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.702 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:13.702 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,59 )
22:47:13.702 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.702 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.702 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
22:47:13.703 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.703 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.703 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
22:47:13.704 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.704 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.704 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
22:47:13.705 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.705 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.705 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
22:47:13.706 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.706 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.706 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
22:47:13.707 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.707 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.707 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
22:47:13.707 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.708 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.708 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
22:47:13.708 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.708 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.708 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
22:47:13.709 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.709 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.709 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
22:47:13.710 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.710 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.710 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
22:47:13.711 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.711 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.711 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
22:47:13.711 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.711 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.711 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
22:47:13.712 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.712 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.712 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
22:47:13.713 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.713 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.713 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
22:47:13.713 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.713 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.713 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
22:47:13.719 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.719 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 5 ms
22:47:13.719 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
22:47:13.719 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.719 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.720 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
22:47:13.720 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.720 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.720 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
22:47:13.722 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.722 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.722 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
22:47:13.723 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.723 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.723 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
22:47:13.724 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.724 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.724 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,81 )
22:47:13.725 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.725 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.725 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
22:47:13.725 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.725 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.725 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
22:47:13.726 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.726 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.726 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
22:47:13.727 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.727 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.727 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
22:47:13.728 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.728 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.728 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,61 )
22:47:13.729 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.729 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.730 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,86 )
22:47:13.730 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.730 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.730 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
22:47:13.731 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.731 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.731 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
22:47:13.731 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.731 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.731 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
22:47:13.732 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.732 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.732 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
22:47:13.733 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.733 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.733 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
22:47:13.734 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.734 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.734 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
22:47:13.735 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.735 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.735 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,118 )
22:47:13.736 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.736 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.736 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
22:47:13.737 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.737 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.737 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
22:47:13.738 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.738 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.738 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
22:47:13.739 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.739 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.739 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,122 )
22:47:13.740 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.740 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.740 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
22:47:13.741 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.741 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.741 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
22:47:13.742 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.742 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.742 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
22:47:13.742 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.742 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.742 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
22:47:13.743 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.743 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.743 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
22:47:13.744 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.744 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.744 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,128 )
22:47:13.745 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.745 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.745 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,129 )
22:47:13.746 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.746 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.746 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,130 )
22:47:13.746 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.746 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.746 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,131 )
22:47:13.748 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.748 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:13.748 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,132 )
22:47:13.748 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.748 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.748 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,133 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,134 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,135 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,136 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,137 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,138 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,139 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,140 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,142 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,141 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,58 )
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.749 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,145 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,144 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,146 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,148 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,147 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,149 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,150 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,151 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,152 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,153 )
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:47:13.758 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,154 )
22:47:13.778 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:47:13.778 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 6 ms
22:47:13.778 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2026,'admin','修改角色',84,'cn.hu.system.controller.RoleController.updateRole()','role: "cn.hu.system.domain.Role@1462c7ce"  menuId: "[Ljava.lang.Long;@699a011"','127.0.0.1','2019-2-18 22:47:13','内网IP|0|0|内网IP|内网IP' )
22:47:14.077 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:47:14.077 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:14.077 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:47:14.079 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:47:14.079 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:14.079 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:47:17.670 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:47:17.670 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:47:17.670 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2027,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-18 22:47:17','内网IP|0|0|内网IP|内网IP' )
22:47:18.480 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:47:18.480 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:18.480 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:47:18.814 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:47:18.814 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:18.814 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:47:19.261 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:47:19.262 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:47:19.262 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2028,'admin','获取系统所有URL',207,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-18 22:47:19','内网IP|0|0|内网IP|内网IP' )
22:47:19.739 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:47:19.739 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:47:19.739 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2029,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-18 22:47:19','内网IP|0|0|内网IP|内网IP' )
22:47:20.573 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:47:20.573 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:20.573 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:47:20.865 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:47:20.865 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:47:20.865 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:47:21.230 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:47:21.230 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:47:21.230 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2030,'admin','获取系统所有URL',100,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-18 22:47:21','内网IP|0|0|内网IP|内网IP' )
22:48:05.089 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:48:05.089 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:05.089 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '查看详情' and TYPE = 0 )
22:48:14.392 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.insert
22:48:14.392 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:48:14.392 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 155,154,'查看详情','','comment:update','','1',,'2019-2-18 22:48:14', )
22:48:14.406 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:48:14.406 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:48:14.406 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2031,'admin','新增菜单/按钮',10,'cn.hu.system.controller.MenuController.addMenu()','menu: "cn.hu.system.domain.Menu@2ac6d193"','127.0.0.1','2019-2-18 22:48:14','内网IP|0|0|内网IP|内网IP' )
22:48:14.594 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:48:14.595 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:48:14.595 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:48:14.600 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:48:14.600 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:48:14.600 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:48:14.707 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:48:14.707 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:48:14.707 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:48:19.821 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:48:19.821 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:48:19.821 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2032,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-18 22:48:19','内网IP|0|0|内网IP|内网IP' )
22:48:20.430 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:48:20.430 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:48:20.430 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:48:20.725 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:48:20.725 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:48:20.725 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:48:20.727 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:48:20.727 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:20.727 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:48:24.164 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
22:48:24.164 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:48:24.164 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
22:48:28.233 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.updateByPrimaryKeySelective
22:48:28.233 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.233 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2019-2-18 22:48:28' WHERE ROLE_ID = 1
22:48:28.235 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
22:48:28.235 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:48:28.235 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( role_id= 1 )
22:48:28.244 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.244 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:48:28.244 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,59 )
22:48:28.245 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.245 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.245 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
22:48:28.246 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.246 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.246 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
22:48:28.246 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.246 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.246 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
22:48:28.247 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.248 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.248 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
22:48:28.248 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.248 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.248 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
22:48:28.249 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.249 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.249 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
22:48:28.250 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.250 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.250 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
22:48:28.251 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.251 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.251 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
22:48:28.251 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.251 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.251 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
22:48:28.252 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.252 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.252 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
22:48:28.253 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.253 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.253 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
22:48:28.254 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.254 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.254 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
22:48:28.255 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.255 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.255 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
22:48:28.256 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.256 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.256 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
22:48:28.256 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.257 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.257 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
22:48:28.257 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.257 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.257 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
22:48:28.258 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.258 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.258 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
22:48:28.259 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.259 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.259 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
22:48:28.260 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.260 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.260 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
22:48:28.260 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,81 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,61 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,86 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.261 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,118 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,122 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,128 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,129 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,130 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,131 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,132 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,133 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,134 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,135 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,136 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,137 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,138 )
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.269 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,139 )
22:48:28.280 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.280 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
22:48:28.280 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,140 )
22:48:28.281 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.281 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.281 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,142 )
22:48:28.282 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.282 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.282 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,141 )
22:48:28.282 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.283 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.283 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,58 )
22:48:28.283 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.283 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.283 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,145 )
22:48:28.284 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.284 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.284 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,144 )
22:48:28.284 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.284 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.284 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,146 )
22:48:28.285 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.285 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.285 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,148 )
22:48:28.285 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.285 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.285 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,147 )
22:48:28.286 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.286 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.286 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,149 )
22:48:28.286 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.286 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.286 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,150 )
22:48:28.287 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.287 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.287 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,151 )
22:48:28.287 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.287 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.287 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,152 )
22:48:28.288 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.288 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.288 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,153 )
22:48:28.288 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.288 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:28.288 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,154 )
22:48:28.289 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:48:28.289 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.289 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,155 )
22:48:28.297 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:48:28.297 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:48:28.297 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2033,'admin','修改角色',60,'cn.hu.system.controller.RoleController.updateRole()','role: "cn.hu.system.domain.Role@4d185b1e"  menuId: "[Ljava.lang.Long;@32c7ef07"','127.0.0.1','2019-2-18 22:48:28','内网IP|0|0|内网IP|内网IP' )
22:48:28.601 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:48:28.601 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.601 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:48:28.603 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:48:28.603 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:28.603 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:48:37.313 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
22:48:37.313 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:37.313 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,FRONT,BACK,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
22:48:37.841 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
22:48:37.841 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:48:37.841 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-2-18 22:48:37' WHERE ( lower(username)= 'admin' )
22:48:38.056 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:48:38.056 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:48:38.056 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2034,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:23:20 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 22:48:38','内网IP|0|0|内网IP|内网IP' )
22:48:39.079 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:48:39.079 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 29 ms
22:48:39.079 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:48:43.360 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
22:48:43.360 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:48:43.360 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
22:48:43.367 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
22:48:43.367 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:43.367 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
22:48:44.156 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:48:44.156 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:44.156 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:48:44.259 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:48:44.259 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:44.259 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:48:44.260 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:48:44.260 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:44.260 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:48:44.543 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:48:44.543 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:48:44.543 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2035,'admin','获取用户信息',64,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 22:48:44','内网IP|0|0|内网IP|内网IP' )
22:48:48.707 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
22:48:48.707 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:48:48.707 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:52:22.746 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:52:22.746 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
22:52:22.746 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2036,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:23:20 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 22:52:22','内网IP|0|0|内网IP|内网IP' )
22:52:23.935 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:52:23.935 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 23 ms
22:52:23.935 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:52:27.303 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:52:27.303 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:52:27.303 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:52:27.424 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:52:27.424 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:52:27.424 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:52:27.425 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:52:27.425 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:52:27.425 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:52:43.662 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:52:43.662 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:52:43.662 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2037,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:23:20 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 22:52:43','内网IP|0|0|内网IP|内网IP' )
22:52:44.021 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:52:44.021 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 20 ms
22:52:44.021 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:52:46.953 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:52:46.954 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:52:46.954 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:52:47.082 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:52:47.082 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:52:47.082 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:52:47.083 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:52:47.083 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:52:47.083 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:52:47.484 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithDept_COUNT
22:52:47.484 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:52:47.484 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime,u.front front,u.back back, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 AND u.status = '1' order by u.user_id
22:52:47.486 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithDept
22:52:47.486 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:52:47.486 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.email,u.mobile,u.status,u.crate_time crateTime,u.front front,u.back back, u.ssex,d.dept_name deptName from t_user u left join t_dept d on(u.dept_id = d.dept_id) where 1=1 AND u.status = '1' order by u.user_id
22:52:47.603 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:52:47.603 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:52:47.603 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2038,'admin','获取用户信息',356,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 22:52:47','内网IP|0|0|内网IP|内网IP' )
22:53:45.519 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:53:45.519 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:53:45.519 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2039,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:23:20 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 22:53:45','内网IP|0|0|内网IP|内网IP' )
22:53:45.793 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:53:45.793 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 17 ms
22:53:45.793 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:53:48.413 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:53:48.413 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:53:48.413 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:53:48.534 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:53:48.534 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:53:48.534 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:53:48.535 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:53:48.535 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:53:48.535 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:53:48.758 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:53:48.758 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:53:48.758 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2040,'admin','获取用户信息',57,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 22:53:48','内网IP|0|0|内网IP|内网IP' )
22:54:52.903 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
22:54:52.903 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:54:52.903 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:55:36.774 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
22:55:36.774 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:55:36.774 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:55:52.324 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:55:52.325 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:55:52.325 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2041,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:23:20 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 22:55:52','内网IP|0|0|内网IP|内网IP' )
22:55:53.630 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:55:53.630 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 23 ms
22:55:53.630 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:55:56.570 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:55:56.570 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:55:56.570 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:55:56.674 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:55:56.674 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:55:56.674 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:55:56.676 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:55:56.676 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:55:56.676 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:55:57.047 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:55:57.047 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:55:57.047 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2042,'admin','获取用户信息',162,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 22:55:57','内网IP|0|0|内网IP|内网IP' )
22:55:59.347 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
22:55:59.347 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:55:59.347 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:58:11.074 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:11.075 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:58:11.075 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2043,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:23:20 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 22:58:11','内网IP|0|0|内网IP|内网IP' )
22:58:11.589 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:58:11.589 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
22:58:11.589 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:58:14.703 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:58:14.703 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:58:14.703 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:58:14.767 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:58:14.767 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:14.767 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:58:14.768 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:58:14.768 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:14.768 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:58:15.251 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:15.251 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 11 ms
22:58:15.251 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2044,'admin','获取用户信息',158,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 22:58:15','内网IP|0|0|内网IP|内网IP' )
22:58:18.616 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
22:58:18.616 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:18.616 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
22:58:23.772 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:23.772 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:58:23.772 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2045,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-18 22:58:23','内网IP|0|0|内网IP|内网IP' )
22:58:24.371 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:58:24.371 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:58:24.371 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:58:24.653 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:58:24.653 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:24.653 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:58:24.655 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:58:24.655 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:24.655 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:58:26.348 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:26.348 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
22:58:26.348 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2046,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-18 22:58:26','内网IP|0|0|内网IP|内网IP' )
22:58:27.100 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:58:27.100 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:27.100 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:58:27.446 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:58:27.446 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:58:27.446 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:58:28.021 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:28.021 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:58:28.021 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2047,'admin','获取系统所有URL',105,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-18 22:58:28','内网IP|0|0|内网IP|内网IP' )
22:58:47.696 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:47.696 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:58:47.696 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2048,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:23:20 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 22:58:47','内网IP|0|0|内网IP|内网IP' )
22:58:47.967 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
22:58:47.967 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 22 ms
22:58:47.967 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
22:58:51.617 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
22:58:51.617 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:58:51.617 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
22:58:51.750 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:58:51.750 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:51.750 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:58:51.751 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:58:51.751 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:51.751 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:58:51.996 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:51.996 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:58:51.996 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2049,'admin','获取用户信息',51,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 22:58:51','内网IP|0|0|内网IP|内网IP' )
22:58:56.670 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:56.670 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:58:56.670 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2050,'admin','获取菜单信息',0,'cn.hu.system.controller.MenuController.index()','','127.0.0.1','2019-2-18 22:58:56','内网IP|0|0|内网IP|内网IP' )
22:58:57.473 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:58:57.473 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:57.473 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:58:57.808 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:58:57.808 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:58:57.808 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:58:58.181 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:58:58.181 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
22:58:58.181 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2051,'admin','获取系统所有URL',105,'cn.hu.system.controller.MenuController.getAllUrl()','','127.0.0.1','2019-2-18 22:58:58','内网IP|0|0|内网IP|内网IP' )
22:59:10.894 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:59:10.894 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:10.894 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( lower(menu_name)= '删除评论' and TYPE = 0 )
22:59:19.134 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.insert
22:59:19.135 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:19.135 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_menu ( MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME ) VALUES( 156,154,'删除评论','','comment:delete','','1',,'2019-2-18 22:59:19', )
22:59:19.148 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:59:19.148 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:59:19.148 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2052,'admin','新增菜单/按钮',10,'cn.hu.system.controller.MenuController.addMenu()','menu: "cn.hu.system.domain.Menu@19c079df"','127.0.0.1','2019-2-18 22:59:19','内网IP|0|0|内网IP|内网IP' )
22:59:19.331 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:59:19.331 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:59:19.331 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:59:19.449 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:59:19.449 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:59:19.449 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:59:19.602 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:59:19.602 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:59:19.602 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu WHERE ( type = 0 ) order by create_time
22:59:22.421 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:59:22.421 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:59:22.421 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2053,'admin','获取角色信息',0,'cn.hu.system.controller.RoleController.index()','','127.0.0.1','2019-2-18 22:59:22','内网IP|0|0|内网IP|内网IP' )
22:59:23.261 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.selectByExample
22:59:23.261 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:59:23.261 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT MENU_ID,PARENT_ID,MENU_NAME,URL,PERMS,ICON,TYPE,ORDER_NUM,CREATE_TIME,MODIFY_TIME FROM t_menu order by menu_id
22:59:23.343 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:59:23.343 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:23.343 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:59:23.345 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:59:23.345 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:23.345 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:59:29.033 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findById
22:59:29.034 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:29.034 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.role_id roleId,r.role_name roleName,r.remark, rm.menu_id menuId from t_role r left join t_role_menu rm on(r.role_id = rm.role_id) where r.role_id = 1
22:59:33.251 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.updateByPrimaryKeySelective
22:59:33.251 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.251 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_role SET ROLE_NAME = '管理员',REMARK = '管理员',MODIFY_TIME = '2019-2-18 22:59:33' WHERE ROLE_ID = 1
22:59:33.252 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.deleteByExample
22:59:33.252 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.252 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> DELETE FROM t_role_menu WHERE ( role_id= 1 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,59 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,2 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,3 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,1 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,4 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,5 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,6 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,20 )
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.263 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,21 )
22:59:33.267 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.267 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 4 ms
22:59:33.267 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,22 )
22:59:33.267 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.268 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.268 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,10 )
22:59:33.268 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.268 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.268 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,8 )
22:59:33.268 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.268 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.268 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,11 )
22:59:33.269 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.269 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.269 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,12 )
22:59:33.269 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.269 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.269 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,13 )
22:59:33.270 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.270 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.270 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,14 )
22:59:33.270 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.270 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.270 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,15 )
22:59:33.271 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.271 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.271 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,16 )
22:59:33.271 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.271 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.271 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,17 )
22:59:33.272 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.272 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.272 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,18 )
22:59:33.272 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.272 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.272 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,23 )
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,81 )
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,82 )
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.273 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,83 )
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,19 )
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,24 )
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.274 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,61 )
22:59:33.275 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.275 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.275 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,86 )
22:59:33.275 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.275 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.275 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,87 )
22:59:33.276 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.276 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.276 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,88 )
22:59:33.276 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.276 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.276 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,89 )
22:59:33.277 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.277 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.277 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,113 )
22:59:33.277 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.277 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.277 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,116 )
22:59:33.278 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.278 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.278 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,117 )
22:59:33.278 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.278 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.278 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,118 )
22:59:33.279 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.279 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.279 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,119 )
22:59:33.279 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.279 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.279 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,120 )
22:59:33.279 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.280 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.280 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,121 )
22:59:33.280 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.280 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.280 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,122 )
22:59:33.281 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.281 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.281 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,123 )
22:59:33.281 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.281 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.281 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,124 )
22:59:33.282 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.282 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.282 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,125 )
22:59:33.282 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.282 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.282 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,126 )
22:59:33.283 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.283 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.283 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,127 )
22:59:33.283 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.284 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.284 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,128 )
22:59:33.284 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.284 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.284 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,129 )
22:59:33.285 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.285 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.285 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,130 )
22:59:33.285 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.285 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.285 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,131 )
22:59:33.286 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.286 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.286 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,132 )
22:59:33.286 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.286 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.286 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,133 )
22:59:33.287 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.287 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.287 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,134 )
22:59:33.287 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.287 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.287 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,135 )
22:59:33.288 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.288 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.288 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,136 )
22:59:33.288 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.288 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.288 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,137 )
22:59:33.289 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.289 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.289 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,138 )
22:59:33.289 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.289 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.289 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,139 )
22:59:33.290 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.290 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.290 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,140 )
22:59:33.290 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.290 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.290 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,142 )
22:59:33.291 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.291 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.291 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,141 )
22:59:33.291 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.292 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.292 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,58 )
22:59:33.292 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.292 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.292 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,145 )
22:59:33.292 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.292 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.292 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,144 )
22:59:33.293 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.293 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.293 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,146 )
22:59:33.293 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.293 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.294 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,148 )
22:59:33.294 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.294 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.294 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,147 )
22:59:33.294 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.294 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.294 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,149 )
22:59:33.295 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.295 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.295 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,150 )
22:59:33.296 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.296 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.296 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,151 )
22:59:33.297 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.297 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
22:59:33.297 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,152 )
22:59:33.297 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.297 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.297 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,153 )
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,154 )
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,155 )
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMenuMapper.insert
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
22:59:33.298 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_role_menu ( ROLE_ID,MENU_ID ) VALUES( 1,156 )
22:59:33.306 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
22:59:33.306 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:59:33.306 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2054,'admin','修改角色',51,'cn.hu.system.controller.RoleController.updateRole()','role: "cn.hu.system.domain.Role@174fff8e"  menuId: "[Ljava.lang.Long;@6f189573"','127.0.0.1','2019-2-18 22:59:33','内网IP|0|0|内网IP|内网IP' )
22:59:33.614 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
22:59:33.614 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
22:59:33.614 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
22:59:33.618 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
22:59:33.618 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
22:59:33.618 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:00:06.881 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.selectByExample
23:00:06.881 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:00:06.881 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT USER_ID,USERNAME,PASSWORD,DEPT_ID,FRONT,BACK,EMAIL,MOBILE,STATUS,CRATE_TIME,MODIFY_TIME,LAST_LOGIN_TIME,SSEX,THEME,AVATAR,DESCRIPTION FROM t_user WHERE ( lower(username)= 'admin' )
23:00:07.707 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.updateByExampleSelective
23:00:07.707 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:00:07.707 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> UPDATE t_user SET STATUS = '1',LAST_LOGIN_TIME = '2019-2-18 23:00:07' WHERE ( lower(username)= 'admin' )
23:00:07.913 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:00:07.913 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:00:07.913 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2055,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:00:07','内网IP|0|0|内网IP|内网IP' )
23:00:11.804 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:00:11.804 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 26 ms
23:00:11.804 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:00:14.299 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
23:00:14.299 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:00:14.299 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
23:00:14.301 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
23:00:14.301 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:00:14.301 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
23:00:15.461 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:00:15.461 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:00:15.461 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:00:15.837 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:00:15.837 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:00:15.837 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2056,'admin','获取用户信息',55,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:00:15','内网IP|0|0|内网IP|内网IP' )
23:00:16.419 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:00:16.419 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:00:16.419 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:00:16.420 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:00:16.420 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:00:16.420 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:00:37.494 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:00:37.494 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:00:37.494 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2057,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:00:37','内网IP|0|0|内网IP|内网IP' )
23:00:38.801 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:00:38.801 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:00:38.801 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:00:42.288 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:00:42.288 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:00:42.288 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:00:42.915 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:00:42.915 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:00:42.915 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2058,'admin','获取用户信息',50,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:00:42','内网IP|0|0|内网IP|内网IP' )
23:00:43.360 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:00:43.360 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:00:43.360 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:00:43.364 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:00:43.364 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:00:43.364 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:07:36.755 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:07:36.755 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:07:36.755 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2059,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:07:36','内网IP|0|0|内网IP|内网IP' )
23:07:52.521 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:07:52.521 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 18 ms
23:07:52.521 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:07:57.384 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:07:57.384 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:07:57.384 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:07:57.535 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:07:57.535 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:07:57.535 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:07:57.536 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:07:57.536 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:07:57.536 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:08:09.641 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:08:09.641 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:08:09.641 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2060,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:08:09','内网IP|0|0|内网IP|内网IP' )
23:08:18.827 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:08:18.827 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 23 ms
23:08:18.827 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:08:51.446 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:08:51.446 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:08:51.446 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:08:51.555 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:08:51.556 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:08:51.556 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:08:51.556 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:08:51.556 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:08:51.556 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:08:52.199 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:08:52.199 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:08:52.199 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2061,'admin','获取用户信息',449,'cn.hu.system.controller.CommentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:08:52','内网IP|0|0|内网IP|内网IP' )
23:08:57.121 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:08:57.121 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:08:57.121 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
23:10:20.390 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:10:20.390 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:10:20.390 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:10:20.392 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:10:20.392 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:10:20.392 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:10:20.395 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:10:20.395 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:10:20.395 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:10:21.007 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:10:21.007 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:10:21.007 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2062,'admin','获取用户信息',65,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:10:21','内网IP|0|0|内网IP|内网IP' )
23:10:24.222 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:10:24.222 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:10:24.222 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
23:39:11.235 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:39:11.235 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 12 ms
23:39:11.235 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2063,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:39:11','内网IP|0|0|内网IP|内网IP' )
23:39:12.519 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:39:12.519 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 22 ms
23:39:12.519 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:39:16.320 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.findUserRole
23:39:16.320 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:39:16.320 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select r.* from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) where u.username = 'admin'
23:39:16.321 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserPermissions
23:39:16.322 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:39:16.322 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.perms from t_role r left join t_user_role ur on(r.role_id = ur.role_id) left join t_user u on(u.user_id = ur.user_id) left join t_role_menu rm on(rm.role_id = r.role_id) left join t_menu m on(m.menu_id = rm.menu_id ) where u.username = 'admin' and m.perms is not null and m.perms <> ''
23:39:17.067 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:39:17.067 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:39:17.067 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:39:17.177 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:39:17.177 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:39:17.177 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:39:17.178 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:39:17.178 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:39:17.178 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:39:17.545 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:39:17.545 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:39:17.545 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2064,'admin','获取用户信息',149,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:39:17','内网IP|0|0|内网IP|内网IP' )
23:40:25.588 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:40:25.588 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
23:40:25.588 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2065,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:40:25','内网IP|0|0|内网IP|内网IP' )
23:40:25.953 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:40:25.953 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 21 ms
23:40:25.953 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:40:31.246 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:40:31.246 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:40:31.246 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:40:31.357 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:40:31.357 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:40:31.357 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:40:31.358 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:40:31.358 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:40:31.358 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:40:31.729 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:40:31.729 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:40:31.729 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2066,'admin','获取用户信息',156,'cn.hu.system.controller.TalentController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:40:31','内网IP|0|0|内网IP|内网IP' )
23:40:33.691 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:40:33.691 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:40:33.691 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:40:33.795 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:40:33.795 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:40:33.795 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:40:33.796 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:40:33.796 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:40:33.796 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:40:33.994 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:40:33.994 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:40:33.994 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2067,'admin','获取用户信息',50,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:40:33','内网IP|0|0|内网IP|内网IP' )
23:40:42.645 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:40:42.645 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:40:42.645 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
23:41:37.817 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:41:37.817 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:41:37.817 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
23:43:56.055 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Validating all active sessions...
23:43:56.289 febs [SessionValidationThread-1] INFO  o.a.s.s.m.AbstractValidatingSessionManager - Finished session validation.  No sessions were stopped.
23:47:30.791 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:47:30.791 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:47:30.791 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2068,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:47:30','内网IP|0|0|内网IP|内网IP' )
23:47:32.144 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:47:32.144 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 21 ms
23:47:32.144 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:47:38.422 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:47:38.422 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:47:38.422 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:47:38.545 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:47:38.545 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:47:38.545 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:47:38.546 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:47:38.546 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:47:38.546 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:47:38.907 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:47:38.908 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:47:38.908 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2069,'admin','获取用户信息',159,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:47:38','内网IP|0|0|内网IP|内网IP' )
23:48:03.568 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:48:03.569 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:48:03.569 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2070,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:48:03','内网IP|0|0|内网IP|内网IP' )
23:48:03.889 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:48:03.889 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 27 ms
23:48:03.889 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:48:07.731 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:48:07.731 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:48:07.731 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:48:07.852 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:48:07.852 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:48:07.852 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:48:07.853 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:48:07.853 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:48:07.853 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:48:08.150 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:48:08.150 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:48:08.150 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2071,'admin','获取用户信息',60,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:48:08','内网IP|0|0|内网IP|内网IP' )
23:48:19.213 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:48:19.213 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:48:19.213 febs [http-nio-8080-exec-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
23:50:03.338 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:50:03.338 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:50:03.338 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2072,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:50:03','内网IP|0|0|内网IP|内网IP' )
23:50:03.609 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:50:03.609 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 19 ms
23:50:03.609 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:50:07.796 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:50:07.796 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:50:07.796 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:50:07.900 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:50:07.900 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:50:07.900 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:50:07.901 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:50:07.901 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:50:07.901 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:50:08.416 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:50:08.416 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:50:08.417 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2073,'admin','获取用户信息',177,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:50:08','内网IP|0|0|内网IP|内网IP' )
23:50:12.336 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:50:12.336 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:50:12.336 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
23:51:32.678 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:51:32.678 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 10 ms
23:51:32.678 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2074,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:51:32','内网IP|0|0|内网IP|内网IP' )
23:51:32.989 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:51:32.989 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 27 ms
23:51:32.989 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:51:37.651 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:51:37.651 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:51:37.651 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:51:37.742 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:51:37.742 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:51:37.742 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:51:37.743 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:51:37.743 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:51:37.743 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:51:38.200 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:51:38.200 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 7 ms
23:51:38.200 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2075,'admin','获取用户信息',154,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:51:38','内网IP|0|0|内网IP|内网IP' )
23:51:41.606 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:51:41.606 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
23:51:41.606 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
23:52:08.788 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:52:08.788 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:52:08.788 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2076,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:52:08','内网IP|0|0|内网IP|内网IP' )
23:52:09.068 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:52:09.068 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 13 ms
23:52:09.068 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:52:12.165 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:52:12.165 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:52:12.165 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:52:12.276 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:52:12.276 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:52:12.276 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:52:12.277 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:52:12.277 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:52:12.277 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:52:12.489 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:52:12.489 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:52:12.489 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2077,'admin','获取用户信息',50,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:52:12','内网IP|0|0|内网IP|内网IP' )
23:52:15.125 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:52:15.126 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 2 ms
23:52:15.126 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
23:58:04.081 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:58:04.082 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 8 ms
23:58:04.082 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2078,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:58:04','内网IP|0|0|内网IP|内网IP' )
23:58:05.242 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:58:05.242 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 23 ms
23:58:05.242 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:58:08.925 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:58:08.926 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:58:08.926 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:58:09.037 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:58:09.037 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:58:09.037 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:58:09.038 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:58:09.038 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:58:09.038 febs [http-nio-8080-exec-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:58:09.933 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:58:09.934 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:58:09.934 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2079,'admin','获取用户信息',703,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:58:09','内网IP|0|0|内网IP|内网IP' )
23:59:13.394 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:59:13.394 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 3 ms
23:59:13.394 febs [asyncTaskExecutor-2] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2080,'admin','访问系统',1,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:59:13','内网IP|0|0|内网IP|内网IP' )
23:59:13.690 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:59:13.690 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 21 ms
23:59:13.690 febs [http-nio-8080-exec-7] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:59:18.422 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:59:18.423 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:59:18.423 febs [http-nio-8080-exec-6] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:59:18.526 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:59:18.526 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:59:18.526 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:59:18.527 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:59:18.527 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:59:18.527 febs [http-nio-8080-exec-8] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:59:18.939 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:59:18.939 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:59:18.939 febs [asyncTaskExecutor-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2081,'admin','获取用户信息',51,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:59:18','内网IP|0|0|内网IP|内网IP' )
23:59:49.343 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:59:49.343 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:59:49.343 febs [asyncTaskExecutor-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2082,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:59:49','内网IP|0|0|内网IP|内网IP' )
23:59:49.652 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:59:49.652 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 25 ms
23:59:49.652 febs [http-nio-8080-exec-3] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:59:51.676 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:59:51.676 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:59:51.676 febs [asyncTaskExecutor-5] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2083,'admin','访问系统',0,'cn.hu.system.controller.LoginController.index()','user: "User [userId=4, username=admin, password=13bfb9844ba36ac930ba142d8c3db629, deptId=5, deptName=null, front=11, back=222, email=googlebrain@163.com, mobile=17600313199, status=1, crateTime=Sun Jan 27 23:47:19 CST 2019, modifyTime=Sun Jan 27 23:55:12 CST 2019, lastLoginTime=Mon Feb 18 22:48:37 CST 2019, ssex=0, theme=green, avatar=20180414165855.jpg, description=天下为公, roleName=null]"  org.springframework.validation.BindingResult.user: "org.springframework.validation.BeanPropertyBindingResult: 0 errors"','127.0.0.1','2019-2-18 23:59:51','内网IP|0|0|内网IP|内网IP' )
23:59:51.956 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.MenuMapper.findUserMenus
23:59:51.956 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 19 ms
23:59:51.956 febs [http-nio-8080-exec-4] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select m.* from t_menu m where m.type <> 1 and m.MENU_ID in (select distinct rm.menu_id from t_role_menu rm left join t_role r on(rm.role_id = r.role_id) left join t_user_role ur on(ur.role_id = r.role_id) left join t_user u on (u.user_id = ur.user_id) where u.username = 'admin') order by m.create_time
23:59:54.941 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.DeptMapper.selectByExample
23:59:54.941 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:59:54.941 febs [http-nio-8080-exec-9] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT DEPT_ID,PARENT_ID,DEPT_NAME,ORDER_NUM,CREATE_TIME FROM t_dept order by dept_id
23:59:55.066 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample_COUNT
23:59:55.066 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:59:55.066 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:59:55.067 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.RoleMapper.selectByExample
23:59:55.067 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 0 ms
23:59:55.068 febs [http-nio-8080-exec-10] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> SELECT ROLE_ID,ROLE_NAME,REMARK,CREATE_TIME,MODIFY_TIME FROM t_role order by create_time
23:59:55.315 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.LogMapper.insert
23:59:55.315 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 9 ms
23:59:55.315 febs [asyncTaskExecutor-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> INSERT INTO t_log ( ID,USERNAME,OPERATION,TIME,METHOD,PARAMS,IP,CREATE_TIME,LOCATION ) VALUES( 2084,'admin','获取用户信息',57,'cn.hu.system.controller.GoodsController.userList()','request: "QueryRequest{pageSize=10, pageNum=1}"  user: "User [userId=null, username=, password=null, deptId=null, deptName=null, front=null, back=null, email=null, mobile=null, status=1, crateTime=null, modifyTime=null, lastLoginTime=null, ssex=null, theme=null, avatar=null, description=null, roleName=null]"','127.0.0.1','2019-2-18 23:59:55','内网IP|0|0|内网IP|内网IP' )
23:59:58.413 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句Id】>>>> cn.hu.system.dao.UserMapper.findUserWithRole
23:59:58.414 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句耗时】>>>> 1 ms
23:59:58.414 febs [http-nio-8080-exec-1] INFO  c.h.c.i.SqlStatementInterceptor - 【SQL语句】>>>> select u.user_id userId,u.username,u.dept_id deptId,u.email,u.mobile, u.status,u.ssex,ur.role_id roleId from t_user u left join t_user_role ur on (u.user_id = ur.user_id) where u.user_id = 4
